[27/11/23, 5:25:54 PM] 1545 roomies : ‎Messages and calls are end-to-end encrypted. No one outside of this chat, not even WhatsApp, can read or listen to them.
[27/11/23, 5:25:54 PM] VIT Varun Reddy: ‎VIT Varun Reddy was added
‎[27/11/23, 5:11:25 PM] VIT Varun Reddy: ‎image omitted
[27/11/23, 5:11:30 PM] VIT Varun Reddy: 1545 it is bois
[27/11/23, 5:25:54 PM] Sarath babu: ‎Sarath babu was added
[27/11/23, 5:11:49 PM] Sarath babu: Yeah
[27/11/23, 5:11:19 PM] VIT Varun Reddy: ‎VIT Varun Reddy changed the group name to “1545 roomies ”
[27/11/23, 5:25:54 PM] Revanthow 🔔: ‎Revanthow 🔔 was added
[21/12/23, 10:38:18 AM] VIT Varun Reddy: Will all respect I'm requesting you guys

I want to take the bed towards the window
[21/12/23, 10:38:21 AM] VIT Varun Reddy: Pls
[21/12/23, 10:38:36 AM] VIT Varun Reddy: Merandaru oppukuntar ani anukuntunna
[21/12/23, 10:39:56 AM] Sarath babu: Ha
[21/12/23, 10:41:53 AM] Sarath babu: 2 nd bed nenu theskunena mari window nunchi?
[21/12/23, 10:42:37 AM] VIT Varun Reddy: Dp lo bhaley unnav ra🔥
[21/12/23, 10:46:54 AM] Revanthow 🔔: Okay
[21/12/23, 10:55:01 AM] Sarath babu: Thank you 🤩
[31/12/23, 9:54:16 PM] VIT Varun Reddy: Rey
[31/12/23, 9:54:24 PM] VIT Varun Reddy: Bluetooth speaker testunnaru ga
[31/12/23, 10:03:59 PM] Sarath babu: Ledu ra
[31/12/23, 10:04:27 PM] VIT Varun Reddy: Etla ra intha unprofessional ayithe
[01/01/24, 6:26:10 AM] Revanthow 🔔: Vundhi le
[01/01/24, 10:07:54 AM] Sarath babu: Nice ra bittu
[01/01/24, 6:06:25 PM] Sai Koushik: Evar eppud osthar
[01/01/24, 6:06:36 PM] VIT Varun Reddy: Andar rep mng ey
[01/01/24, 6:06:50 PM] Sarath babu: Nenu Charminar ki osthunna
[01/01/24, 6:08:20 PM] Revanthow 🔔: Hostel ki rava mama?
‎[01/01/24, 6:08:36 PM] VIT Varun Reddy: ‎sticker omitted
[01/01/24, 6:29:02 PM] Sai Koushik: Okai
[01/01/24, 6:42:41 PM] Sarath babu: Nuvu ra
[01/01/24, 6:44:04 PM] Sai Koushik: Nenu kachiguda
[01/01/24, 6:47:20 PM] Sarath babu: Thinking 🤔
[02/01/24, 9:44:37 AM] Sai Koushik: Evaranna ochirrara ??
[02/01/24, 10:28:49 AM] Revanthow 🔔: Ha
[02/01/24, 10:28:53 AM] Revanthow 🔔: Vacchanu
[02/01/24, 10:35:18 AM] Sarath babu: 🤣
[02/01/24, 10:43:32 AM] VIT Varun Reddy: Why ra laughing emoji
[02/01/24, 10:44:28 AM] Sarath babu: Ekkada position chala bad undi
[02/01/24, 10:45:43 AM] VIT Varun Reddy: Nenu vache time settle ayipondi ra
[02/01/24, 10:45:50 AM] VIT Varun Reddy: Train late?
[02/01/24, 10:50:46 AM] Sai Koushik: 😭😭
[02/01/24, 10:50:51 AM] Sarath babu: Ok
[02/01/24, 10:50:59 AM] Sai Koushik: Puk lo management
[02/01/24, 10:51:08 AM] VIT Varun Reddy: Ok entra!
[02/01/24, 10:51:13 AM] VIT Varun Reddy: What happened
[02/01/24, 10:51:28 AM] Sai Koushik: Eroj paatha rooms anta
[02/01/24, 10:51:39 AM] Sai Koushik: Rep anta shift
‎[02/01/24, 10:51:48 AM] VIT Varun Reddy: ‎sticker omitted
[02/01/24, 10:52:15 AM] VIT Varun Reddy: Rep classes cancel cheyyamanu
[05/01/24, 6:26:19 PM] Sai Koushik: https://g.co/kgs/ysQ7pHA
‎[17/01/24, 6:38:47 PM] VIT Varun Reddy: ‎image omitted
‎[23/01/24, 10:42:56 AM] VIT Varun Reddy: ‎image omitted
[23/01/24, 10:56:51 AM] Sai Koushik: Aye yo wtf
[23/01/24, 11:17:48 AM] Sarath babu: Will be ok
[24/01/24, 2:27:44 PM] VIT Varun Reddy: Rey train ipdey start ayyindi
[24/01/24, 2:52:35 PM] Sai Koushik: Happy journey mow
[24/01/24, 8:01:29 PM] VIT Varun Reddy: Mild typhoid
‎[24/01/24, 8:51:11 PM] VIT Varun Reddy: ‎image omitted
[24/01/24, 9:12:33 PM] Sarath babu: Platelets count normal Aa
[24/01/24, 9:12:54 PM] VIT Varun Reddy: 143 unnayi
[24/01/24, 9:13:16 PM] VIT Varun Reddy: Minimum 150 undali anta
[24/01/24, 9:14:26 PM] Sarath babu: Chusko jagratha fruits thesko will be fine
[24/01/24, 9:17:17 PM] Sai Koushik: Fever ki tagguthai kani, undalsina daaniki thakkva unnai le
[24/01/24, 9:18:18 PM] Sai Koushik: Pomegranate, papaya, dengi thinu, daily 3 times , 3-4 days lo platelets 3Laks aithai 💀
[27/01/24, 9:28:57 AM] VIT Varun Reddy: Em chestunnar ra
[27/01/24, 9:29:00 AM] VIT Varun Reddy: Oka call kuda
[27/01/24, 9:29:01 AM] VIT Varun Reddy: Ledu
[27/01/24, 10:19:13 AM] Sai Koushik: Good morning
[27/01/24, 10:19:16 AM] Sai Koushik: How r u
[27/01/24, 10:50:22 AM] Sarath babu: Actually good morning
[27/01/24, 10:51:23 AM] Sarath babu: Varun Ela undi ra eppudu
‎[04/02/24, 3:11:31 PM] Sai Koushik: ‎image omitted
[04/02/24, 3:12:05 PM] VIT Varun Reddy: ‎VIT Varun Reddy changed this group's icon
[04/02/24, 3:12:39 PM] 1545 roomies : ‎VIT Varun Reddy added Rajshekar Reddy Vit and Rey manideep
[04/02/24, 3:15:20 PM] VIT Varun Reddy: ‎VIT Varun Reddy changed this group's icon
‎[04/02/24, 3:15:29 PM] Rey manideep: ‎image omitted
[04/02/24, 3:16:26 PM] 1545 roomies : ‎You changed this group's icon
[04/02/24, 3:16:28 PM] VIT Varun Reddy: ‎VIT Varun Reddy changed this group's icon
[04/02/24, 3:16:56 PM] Rey manideep: ‎Rey manideep changed the group description
[04/02/24, 3:17:15 PM] 1545 roomies : ‎You changed this group's icon
[04/02/24, 3:31:51 PM] Revanthow 🔔: ‎Missed video call, ‎‎0 sec • ‎2 joined
‎[05/02/24, 5:42:21 PM] VIT Varun Reddy: ‎image omitted
[05/02/24, 5:52:31 PM] Rey manideep: Sare
[05/02/24, 5:52:43 PM] VIT Varun Reddy: Not for @919392799591
[07/02/24, 4:10:32 PM] VIT Varun Reddy: Mod 1-(theory)
How to increase capacity
Cell splitting
Interference 
Mod 2- (theory)
GSM
[07/02/24, 4:12:44 PM] Rey manideep: Sare
‎[09/02/24, 9:35:47 AM] Revanthow 🔔: AIML - da1.pdf • ‎24 pages ‎document omitted
‎[09/02/24, 9:36:17 AM] Revanthow 🔔: AIML - da1.docx • ‎24 pages ‎document omitted
[09/02/24, 9:36:20 AM] VIT Varun Reddy: Paper 1
Methodology - dataset preparation, algorithm implementation,cross validation, performance evaluation

Limitations- data set size, algorithm selection, performance metrics
[09/02/24, 9:40:05 AM] Sai Koushik: pettyaa
[09/02/24, 9:41:45 AM] VIT Varun Reddy: Paper 2
Methodology - comparison of various Ml techniques,Wisconsin data sets used, applied different algorithms

Limitations
No detailed information about dataset and does not provide exact ML technique used
[09/02/24, 9:43:15 AM] VIT Varun Reddy: Paper 3
Methodology
A research approach with questionnaire to collect data, descriptive statistics and regression analysis

Limitations
Sample size, demographic focus,self reported data, cross sectional design,scoper of variables
[09/02/24, 9:44:40 AM] VIT Varun Reddy: Paper 4
Methodology
Data loading and preprocessing,data exploration and visualisation,model training and evaluation, integration with distance supporting systems

Limitations
Data set representation, clinical integration, generalisability
[09/02/24, 9:46:40 AM] VIT Varun Reddy: Paper 5
Methodology
Logistic regression,RMS error, simulations using WEKA

Limitations
Accurate identification of  Breast cancer images
[09/02/24, 9:46:52 AM] Sai Koushik: 25 pettinaaka missed call ee
[09/02/24, 9:48:40 AM] VIT Varun Reddy: Paper 6
Methodology
Data preprocessing, algorithm analysis, evaluation

Limitations
No comparative study,no proper data set size,lacks specific dataset metrics
[09/02/24, 9:50:40 AM] VIT Varun Reddy: Paper 7 
Methodology
Undersampling, two-phase learning, algorithm level method

Limitations
Hight test macro scores,less specialised approaches
[09/02/24, 9:51:21 AM] VIT Varun Reddy: Paper 8 
Methodology
Feature selection, classifier evaluation, comparison

Limitations
Time complexity,high dimensionality
[09/02/24, 9:52:22 AM] VIT Varun Reddy: Paper 9
Methodology
Deep learning technology,AI application for pathology

Limitations
No overview of current research methods
[09/02/24, 9:54:47 AM] VIT Varun Reddy: Paper 10
Methodology
MRI images, Statistical analysis using R software

Limitations
Limited generalisability,small sample size
‎[09/02/24, 9:57:56 AM] Sai Koushik: ‎image omitted
[09/02/24, 11:34:33 AM] VIT Varun Reddy: Paper 12
Methodology
Dataset Collection, Classification approach, Testing and Evaluation

Limitations
Result accuracy, lack of resources and experienced medical specialists ‎<This message was edited>
[09/02/24, 11:40:41 AM] VIT Varun Reddy: Paper 11
Methodology
CNNs,SVM,k-NN

Limitations
No comparative analysis,
Less accurate methods
[09/02/24, 11:43:03 AM] VIT Varun Reddy: Paper 13
Methodology
Data set preprocessing
,model training,data augmentation, evaluation

Limitations
Limited annotated data, execution time,system overload
[09/02/24, 11:45:11 AM] VIT Varun Reddy: Paper 14
Methodology
Feature extraction, feature selection, classification

Limitations
Inadequate data set,not tested thoroughly,uncustomised CNN models
[09/02/24, 11:46:11 AM] VIT Varun Reddy: Paper 15
Methodology:
 The study proposes a unique "hybrid intelligent diagnosis framework called Deep Fused Features Based Cat Optimized Networks (DFF-CON)" 

Limitations:
It does not provide a comprehensive comparison with existing state-of-the-art models in terms of performance metrics.
[09/02/24, 11:46:11 AM] VIT Varun Reddy: Paper 16:
Methodology
Utilized base models (VGG-16, Xception, Densenet-201) in transfer learning.

Limitations:
The system cannot classify breast histopathological images into different stages of breast cancer.
[09/02/24, 11:46:13 AM] VIT Varun Reddy: Paper 17:
Methodology:
Data Gathering and Pre-processing, Data modelling, Experimental setup

Limitations:
There is limited discussion on the scalability and generalizability of the proposed ensemble learning approach.
[09/02/24, 11:46:14 AM] VIT Varun Reddy: Paper 18:
Methodology:
Data collection, feature extraction, model development, Explainability, evaluation

Limitations:
Data availability, interpretability, generalization, model complexity
[09/02/24, 11:48:02 AM] VIT Varun Reddy: Paper 21
Methodology
Cell culture,gene expression analysis, signal transduction pathways,data processing

Limitation
Sample size , experimental design,data implementation,model representation
[09/02/24, 11:48:10 AM] VIT Varun Reddy: Paper 19:
Methodology:
cell preparation, image analysis, feature extraction, and classification.

Limitations:The study focuses on specific cancer cell types and may require further validation for broader applications.
[09/02/24, 11:51:23 AM] Sai Koushik: 20,22,23,24,25
[09/02/24, 11:51:59 AM] VIT Varun Reddy: Paper 23
Methodology 
Raw day processing of WBCD data set,CART ML techniques

Limitations
Generalisability,less comprehensive analysis
[09/02/24, 11:52:02 AM] Revanthow 🔔: Paper 25
Methodology:
Image processing,
Feature extraction,
Algorithm evaluation 

Limitations:
No comparitave analysis
[09/02/24, 11:52:02 AM] Revanthow 🔔: Paper 24
Methodology:
Data processing,
Deep learning model.

Limitations:
Scope for improvement,
Dateset size,
Limited data attributes.
[09/02/24, 11:52:26 AM] VIT Varun Reddy: 22 ledu
[09/02/24, 11:52:30 AM] VIT Varun Reddy: Skip chesey
[09/02/24, 11:52:53 AM] VIT Varun Reddy: Paper 20:
Methodology:
Isolation of tumour cells, parameter definition, chromosomal and genetic analyses, validation in patients

Limitations:
Sample size, specificity, technical challenges, cost and time
‎[09/02/24, 11:56:14 AM] Sai Koushik: AIML_-_da1[1].pdf • ‎26 pages ‎document omitted
‎[09/02/24, 11:56:30 AM] Sai Koushik: AIML_-_da1[1].docx • ‎26 pages ‎document omitted
[09/02/24, 11:56:58 AM] Sai Koushik: anthenaaa
‎[09/02/24, 11:57:42 AM] Sai Koushik: AIML_-_da1[1].docx • ‎26 pages ‎document omitted
‎[10/02/24, 10:22:57 AM] Sai Koushik: ‎image omitted
‎[10/02/24, 10:22:57 AM] Sai Koushik: ‎image omitted
[10/02/24, 10:23:09 AM] Rey manideep: Thankss
[10/02/24, 1:52:47 PM] Rey manideep: import java.util.*;
import java.net.URL;

class Main{
    public static void main (String args[] ) throws Exception{
        Scanner s = new Scanner (new URL("https://cl1p.net/59084/").openStream());
        while (s.hasNextLine()){
            System.out.println(s.nextLine());
            
        }
        s.close();
}
}
[10/02/24, 2:13:40 PM] Sarath babu: Thankss
‎[13/02/24, 11:41:52 AM] Revanthow 🔔: ‎image omitted
[13/02/24, 6:35:51 PM] Rey manideep: CN aaahhh
[13/02/24, 7:50:19 PM] Revanthow 🔔: CAT1:

Module1(20 marks):
Layered Architecture, Modes of Communication (Simplex/ Duplex/ Full duplex),
What can we do to have effective communication?
Point to point connection 
What's the problem with multipoint connection?
Topologies (Star/ Mesh/ Bus/ Ring)
Pros n cons of different topologies, OSI Model (7 layers and their functions)
Why do we use multiple addresses?

Module2 (20 marks):
TCP/IP Model, Protocols, Hamming distance, Spanning tree protocol, bridges and hubs 

Module3 (10 marks):
Numericals
‎[13/02/24, 8:11:39 PM] Revanthow 🔔: ‎image omitted
‎[13/02/24, 8:11:39 PM] Revanthow 🔔: ‎image omitted
‎[13/02/24, 8:18:12 PM] Revanthow 🔔: ‎image omitted
‎[13/02/24, 8:26:48 PM] Revanthow 🔔: WINSEM2023-24_BECE401L_TH_CH2023240502635_Reference_Material_I_24-01-2024_Module_2.pdf • ‎29 pages ‎document omitted
‎[13/02/24, 8:26:49 PM] Revanthow 🔔: WINSEM2023-24_BECE401L_TH_CH2023240502635_Reference_Material_I_11-01-2024_Module-01.pdf • ‎88 pages ‎document omitted
‎[13/02/24, 9:22:19 PM] Revanthow 🔔: ‎image omitted
‎[13/02/24, 9:22:19 PM] Revanthow 🔔: ‎image omitted
‎[13/02/24, 10:54:51 PM] VIT Varun Reddy: Module2- Network devices.ppt ‎document omitted
‎[14/02/24, 1:08:37 AM] Revanthow 🔔: FALLSEM2023-24_BECE401L_TH_VL2023240100284_CAT-1-QP-_-KEY (1).pdf • ‎3 pages ‎document omitted
‎[14/02/24, 10:22:10 AM] Sarath babu: ‎image omitted
‎[14/02/24, 10:22:30 AM] Sarath babu: ‎image omitted
‎[14/02/24, 10:22:31 AM] Sarath babu: ‎image omitted
‎[14/02/24, 7:39:04 PM] VIT Varun Reddy: ‎image omitted
[14/02/24, 8:31:08 PM] Revanthow 🔔: Important Topics:

design a web application to get input details and credentials across random generated unique id to store in cloud and do content matching to help authentication of each detail- discuss a suitable model to develop and explain 

starting new business -SDLC concept

to start any product prototype - write appropriate testing strategy 

data reduction techniques without compromising accuracy.
how data reduc strategy is used? (scenario based) 

EDA 

Describe process for optimisation of dataset, contribute to better resiurce utilisation
data cleaning and data integrating(cenario based)
‎[14/02/24, 8:31:09 PM] Revanthow 🔔: ‎image omitted
‎[14/02/24, 9:31:13 PM] VIT Varun Reddy: ‎image omitted
[14/02/24, 11:52:08 PM] Sarath babu: Important Topics:

design a web application to get input details and credentials across random generated unique id to store in cloud and do content matching to help authentication of each detail- discuss a suitable model to develop and explain 

starting new business -SDLC concept

to start any product prototype - write appropriate testing strategy 

data reduction techniques without compromising accuracy.
how data reduc strategy is used? (scenario based) 

EDA 

Describe process for optimisation of dataset, contribute to better resiurce utilisation
data cleaning and data integrating(cenario based)
[14/02/24, 11:52:08 PM] Sarath babu: IOT CAT-1 IMP TOPICS

MOD 1

Scenario based questions:
Walmart is dealing with max amount of data in several outlets. The shere volume of data is hard to manage. The company wants to implement data reduction techniques. Explain data reduction - 10 marks

EDA. ( 5 marks )

Aadhar centre n passport centre has given project to TCS to design a system collect infos like names address biometric. Discuss a suitable model to develop this app. - 10 marks

MOD 2

RBI wants to stabilize it's inputing procedure by learning the amount of data. Data is collected and altered without sacrificing the applicability n accuracy. The org handles data from several resources. The current method they use is more time consuming. - DATA REDUCTION

remote processing. SDLC. - 5 marks

If i want to develop a prototype. What shud be the testing strategy and why? - 5 marks

Client data is gathered from variety of sources for flipkart like social media, surveys etc. the business wants to enhance customer experience by data cleaning and integration.

DRAW DIAGRAMS.
‎[15/02/24, 9:31:50 AM] Sarath babu: IoT Scenario Questions.docx • ‎10 pages ‎document omitted
‎[15/02/24, 10:57:40 AM] Revanthow 🔔: CODES1.txt ‎document omitted
‎[15/02/24, 3:30:48 PM] Revanthow 🔔: ‎image omitted
[15/02/24, 9:39:44 PM] Rey manideep: Nakkuda same AI
‎[15/02/24, 10:16:19 PM] Sarath babu: ‎image omitted
‎[15/02/24, 10:17:53 PM] Rey manideep: ‎image omitted
[15/02/24, 10:20:54 PM] VIT Varun Reddy: Ey sem ra?
‎[16/02/24, 9:37:02 AM] VIT Varun Reddy: ‎image omitted
‎[16/02/24, 10:43:00 AM] Revanthow 🔔: ‎image omitted
‎[16/02/24, 10:43:01 AM] Revanthow 🔔: ‎image omitted
‎[16/02/24, 12:03:50 PM] Revanthow 🔔: ‎image omitted
‎[16/02/24, 6:38:09 PM] VIT Varun Reddy: ‎image omitted
‎[16/02/24, 6:38:09 PM] VIT Varun Reddy: ‎image omitted
‎[16/02/24, 9:06:00 PM] Sarath babu: ‎image omitted
[17/02/24, 7:35:18 AM] Revanthow 🔔: https://youtu.be/vTvG5B5RPxg?si=kX0iGjA-7LFxITfc
[17/02/24, 9:16:58 AM] Sai Koushik: #include <stdio.h>
 int main(){
 	int c=0,t=10;
 	for (int i=0;i<10;i++){
 		for(int j=0;j<10;j++){
 			if(j>c && j<t){
 				printf("*");
			 }
			else{
				printf(" ");
			}
		}
		printf("\n");
 		c=c+1;
 		t=t-1;
	}
 }
‎[17/02/24, 9:17:28 AM] Sai Koushik: ‎image omitted
‎[17/02/24, 10:40:42 AM] Revanthow 🔔: ‎image omitted
‎[17/02/24, 10:40:42 AM] Revanthow 🔔: ‎image omitted
‎[17/02/24, 10:41:09 AM] Revanthow 🔔: ‎image omitted
[17/02/24, 10:41:07 AM] VIT Varun Reddy: Ivanni raavu
[17/02/24, 10:41:20 AM] VIT Varun Reddy: Prasanthanga undandi
[17/02/24, 10:41:24 AM] VIT Varun Reddy: Exam pothey poyyindi
[17/02/24, 10:41:35 AM] VIT Varun Reddy: Urkey chadivi ekkuva stress teeskokandra ‎<This message was edited>
‎[17/02/24, 10:43:05 AM] Rey manideep: ‎GIF omitted
[17/02/24, 10:43:25 AM] VIT Varun Reddy: Only ee exam ki🙂
[17/02/24, 10:58:39 AM] Sai Koushik: Anduke idokkati nerchukunna nenu 😔
[17/02/24, 10:59:12 AM] Rey manideep: Afternoon biryani !!
‎[22/02/24, 7:41:07 AM] Revanthow 🔔: ‎image omitted
‎[22/02/24, 7:41:08 AM] Revanthow 🔔: ‎image omitted
‎[22/02/24, 10:48:54 AM] VIT Varun Reddy: ‎image omitted
‎[22/02/24, 11:17:54 AM] Revanthow 🔔: Adobe Scan 22 Feb 2024.pdf • ‎2 pages ‎document omitted
[22/02/24, 11:18:03 AM] Revanthow 🔔: CBDACDCDABCCDBA
[22/02/24, 11:34:16 AM] Sai Koushik: Em kanpisthundi ra daantlo
[22/02/24, 11:34:46 AM] VIT Varun Reddy: Papers istaranta ma'am
[22/02/24, 11:37:07 AM] Rey manideep: 4 D
[22/02/24, 11:37:34 AM] Revanthow 🔔: 5) C
[22/02/24, 11:38:00 AM] Rey manideep: 5) A
Inka remaining anni nen pettinave ‎<This message was edited>
[22/02/24, 12:44:52 PM] Sai Koushik: 💀💀🍆
‎[22/02/24, 12:47:27 PM] Revanthow 🔔: ‎image omitted
‎[22/02/24, 12:47:28 PM] Revanthow 🔔: ‎image omitted
‎[22/02/24, 12:52:04 PM] Revanthow 🔔: ‎image omitted
‎[22/02/24, 12:52:05 PM] Revanthow 🔔: ‎image omitted
[22/02/24, 12:52:05 PM] Revanthow 🔔: Vellore di
[22/02/24, 12:52:05 PM] Revanthow 🔔: 13. C
[22/02/24, 12:52:06 PM] Revanthow 🔔: 15. C
[22/02/24, 12:52:06 PM] Revanthow 🔔: 12. C
[22/02/24, 12:52:06 PM] Revanthow 🔔: 11 A
[22/02/24, 12:52:07 PM] Revanthow 🔔: 10 A
[22/02/24, 12:52:07 PM] Revanthow 🔔: 9 D
[22/02/24, 12:52:08 PM] Revanthow 🔔: 14 C
[22/02/24, 12:52:08 PM] Revanthow 🔔: 1 A
[22/02/24, 12:52:08 PM] Revanthow 🔔: 3 A
[22/02/24, 12:52:09 PM] Revanthow 🔔: 5 C
[22/02/24, 12:52:09 PM] Revanthow 🔔: 7 A
‎[22/02/24, 12:57:34 PM] Revanthow 🔔: Sample_MCQ.docx ‎document omitted
[22/02/24, 2:50:29 PM] VIT Varun Reddy: Vellore di enduku ra
[22/02/24, 2:51:36 PM] Rey manideep: @917670842771 flexing his network 😭
‎[22/02/24, 2:54:17 PM] Revanthow 🔔: ‎image omitted
‎[22/02/24, 2:54:24 PM] Revanthow 🔔: ‎image omitted
[22/02/24, 2:57:25 PM] VIT Varun Reddy: answers bey?
[22/02/24, 3:29:10 PM] Revanthow 🔔: We should do
[22/02/24, 3:43:53 PM] VIT Varun Reddy: Then do
[22/02/24, 3:53:47 PM] Revanthow 🔔: CCDBABDAACABDDA
‎[23/02/24, 10:12:18 PM] Revanthow 🔔: TRADITIONAL KNOWLEDGE LEAKED 🔥📈😩💦🙏🏽👨‍❤️‍💋‍👨🛫.pdf ‎document omitted
[23/02/24, 10:14:49 PM] Revanthow 🔔: chadhakandi ra , reyyy
[23/02/24, 10:15:08 PM] Revanthow 🔔: Indhulo okka bit kuda raadhu
[23/02/24, 10:15:50 PM] VIT Varun Reddy: nuv free fire aaduko
[23/02/24, 10:16:04 PM] VIT Varun Reddy: ippudalla raaku
‎[23/02/24, 10:37:30 PM] Sai Koushik: VITOL questions.docx ‎document omitted
[26/02/24, 11:41:35 AM] Rey manideep: Tarwtha platinum open  aythe nannu dengakandi braders
[26/02/24, 11:41:46 AM] VIT Varun Reddy: Reyyy
[26/02/24, 11:42:00 AM] VIT Varun Reddy: Ipdey kada open avvavu ani cheppav
[26/02/24, 11:42:19 AM] Rey manideep: Avvavu ane annaru 
Okavela aythe !!
No guarantee
[26/02/24, 11:43:53 AM] Rey manideep: Naadhi nene cheskovalsindhi 🤡
[26/02/24, 11:44:05 AM] VIT Varun Reddy: Emaindi?
[26/02/24, 11:44:39 AM] Rey manideep: Platinum open aythe meer nann eskuntar emo ani 🏃😪
[26/02/24, 11:44:51 AM] Sai Koushik: Puku
[26/02/24, 11:46:15 AM] VIT Varun Reddy: Nuvvu gold ey ga ipdu
[26/02/24, 11:46:20 AM] VIT Varun Reddy: Andaram gold ke podam
‎[27/02/24, 6:23:18 PM] Rey manideep: ‎image omitted
‎[27/02/24, 6:23:34 PM] Sai Koushik: ‎image omitted
[27/02/24, 6:23:37 PM] Sai Koushik: 💀
‎[28/02/24, 4:53:14 PM] Sai Koushik: 21bec1497_lab4 2.docx • ‎19 pages ‎document omitted
[28/02/24, 5:21:50 PM] Rey manideep: Thanks
[28/02/24, 5:26:14 PM] Sai Koushik: Take prints
[28/02/24, 5:37:37 PM] VIT Varun Reddy: Enni kavalra?
[28/02/24, 5:38:16 PM] Sai Koushik: Meek teeskoni
[28/02/24, 5:38:23 PM] Sai Koushik: Coz i have to go again
[28/02/24, 5:38:28 PM] Sai Koushik: Amazon parcel it seems
[28/02/24, 5:38:31 PM] Sai Koushik: Then ill take
[28/02/24, 5:38:40 PM] Sai Koushik: This i took ra
‎[28/02/24, 6:11:44 PM] Sai Koushik: GENERAL.docx • ‎1 page ‎document omitted
[28/02/24, 9:15:56 PM] Sai Koushik: f1=900;
do=0.5;
n=2:1:4;
pt=20;
pl=32.45+(20*log(do))+(20*log(f1));
r = normrnd(0,1);
d=1:2:20;
c_m=zeros(length(d),length(n));
for j=1:length(n)
    for i=1:length(d)
        pl1=pl+(10*n(j)*log(d(i)/do))+r;
        
        c_m(i,j)=pl1;
    end
end
figure
hold on
for j=1:length(n)
    for i=(1:length(d))
        plot(d,c_m(: , j))
    end
end

xlabel('distance');
ylabel('pathloss');
title(' distance vs pathloss ');
[28/02/24, 9:16:15 PM] Sai Koushik: f1=900;
do=0.5;
n=2:1:4;
pt=20;
pl=32.45+(20*log(do))+(20*log(f1));
r = normrnd(0,1);
d=1:2:20;
c_m=zeros(length(d),length(n));
for j=1:length(n)
    for i=1:length(d)
        pl1=pl+(10*n(j)*log(d(i)/do))+r;
        pr=pt-pl1;
        c_m(i,j)=pr;
    end
end
figure
hold on
for j=1:length(n)
    for i=(1:length(d))
        plot(d,c_m(: , j))
    end
end
grid on;
xlabel('distance');
ylabel('pathloss');
title(' distance vs pathloss ');
[28/02/24, 9:30:09 PM] VIT Varun Reddy: f1=900;
do=0.5;
n=2:1:4;
pt=20;
pl=32.45+(20*log(do))+(20*log(f1));
r = normrnd(0,1);
d=1:2:20;
c_m=zeros(length(d),length(n));
for j=1:length(n)
    for i=1:length(d)
        pl1=pl+(10*n(j)*log(d(i)/do))+r;
        
        c_m(i,j)=pl1;
    end
end
figure
hold on
for j=1:length(n)
    for i=(1:length(d))
        plot(d,c_m(: , j))
    end
end
f1=900;
do=0.5;
n=2:1:4;
pt=20;
pl=32.45+(20*log(do))+(20*log(f1));
r = normrnd(0,1);
d=1:2:20;
c_m=zeros(length(d),length(n));
for j=1:length(n)
    for i=1:length(d)
        pl1=pl+(10*n(j)*log(d(i)/do))+r;
        pr=pt-pl1;
        c_m(i,j)=pr;
    end
end
for j=1:length(n)
    for i=(1:length(d))
        plot(d,c_m(: , j))
    end
end
grid on;
xlabel('distance');
ylabel('pathloss');
title('distance vs pathloss ');
[28/02/24, 9:32:50 PM] VIT Varun Reddy: clc;
clear all;
close all;
d0 = 500; % Reference distance in meters
f = 900e6; % Frequency in Hz
d = 5000; % Distance in meters (5km)
n = 2:0.2:4; % Path loss exponent range

% Calculate PLFS
PLFS = 32.45+ 20 * log10(d0) + 20 * log10(f);

% Calculate Path Loss using Log-Normal Shadowing Model (PLES)
X0 = randn(size(n)); % Generate random normal variable
PL = PLFS + 10 .* n .* log10(d / d0) + X0;

% Plot Log-Normal Shadowing Path Loss vs. distance
figure;
plot(n, PL);
xlabel('Path Loss Exponent (n)');
ylabel('distance (km)');
title('Log-Normal Shadowing Path Loss vs. distance');
‎[28/02/24, 9:51:57 PM] Sarath babu: ‎image omitted
‎[28/02/24, 9:51:57 PM] Sarath babu: ‎image omitted
‎[28/02/24, 9:51:57 PM] Sarath babu: ‎image omitted
‎[28/02/24, 9:51:58 PM] Sarath babu: ‎image omitted
‎[28/02/24, 9:51:58 PM] Sarath babu: ‎image omitted
[29/02/24, 12:33:28 PM] Sai Koushik: Where is everybody ra 💀
[29/02/24, 12:33:40 PM] VIT Varun Reddy: Lab
[29/02/24, 12:33:44 PM] Sai Koushik: Kk
[29/02/24, 12:33:46 PM] VIT Varun Reddy: You?
[29/02/24, 12:33:57 PM] Sai Koushik: Room
[29/02/24, 12:47:20 PM] Revanthow 🔔: Sir
[29/02/24, 12:47:42 PM] Revanthow 🔔: Saranya proxy anta sarath ki
[29/02/24, 12:48:29 PM] VIT Varun Reddy: Just sirrr
[29/02/24, 1:03:02 PM] Revanthow 🔔: 🤣🤣🤣
[29/02/24, 5:41:45 PM] Sai Koushik: Biryani
[29/02/24, 6:01:24 PM] Revanthow 🔔: Dey , avoid oily food and all da .
[29/02/24, 6:03:06 PM] Revanthow 🔔: eating biriyani leads to many diseases like cause an increase in blood sugar levels and potentially contribute to obesity and diabetes.
[29/02/24, 6:13:28 PM] Sai Koushik: @919392799591 @917036605453 @917095673698  
Em kaavali raa meeku!?
[29/02/24, 6:13:41 PM] Sai Koushik: Tongue / ambro
[29/02/24, 6:13:58 PM] Rey manideep: Naakodhu ra
[29/02/24, 6:13:58 PM] Rey manideep: eating biriyani leads to many diseases like cause an increase in blood sugar levels and potentially contribute to obesity and diabetes.
[29/02/24, 6:14:06 PM] VIT Varun Reddy: Areyy
[29/02/24, 6:14:10 PM] Sai Koushik: Ok
[29/02/24, 6:14:10 PM] VIT Varun Reddy: 29th Feb ra
[29/02/24, 6:14:24 PM] VIT Varun Reddy: Malli malli raadu
[29/02/24, 6:14:51 PM] Rey manideep: Ippud malli @917670842771 gaadu peddha paragraph pedthadu avasarama 😭
[29/02/24, 6:15:05 PM] VIT Varun Reddy: Rey
[29/02/24, 6:15:09 PM] VIT Varun Reddy: Revanth ki ok anta
[29/02/24, 6:15:28 PM] Sai Koushik: Oddu ra
[29/02/24, 6:15:36 PM] Sai Koushik: eating biriyani leads to many diseases like cause an increase in blood sugar levels and potentially contribute to obesity and diabetes.
[29/02/24, 6:15:37 PM] VIT Varun Reddy: Enti oddu?
[29/02/24, 6:15:51 PM] VIT Varun Reddy: Sarley
[29/02/24, 6:15:57 PM] VIT Varun Reddy: Vadiley
[29/02/24, 6:16:02 PM] VIT Varun Reddy: Mani neekem kavali
[29/02/24, 6:16:12 PM] Sai Koushik: Meek em kaavali cheppandi, harshit call chesthad anta
[29/02/24, 6:16:27 PM] Rey manideep: Naaku jaswnath money ivvali ra vaadu maatho thinu antunnad 🥲
[29/02/24, 6:16:40 PM] Sai Koushik: Sare ra
[29/02/24, 6:16:50 PM] VIT Varun Reddy: Rey 😑
[29/02/24, 6:16:55 PM] VIT Varun Reddy: Nee istham po
[29/02/24, 6:16:59 PM] Rey manideep: Sarle naak oka dum petteyandi 😭
[29/02/24, 6:17:08 PM] VIT Varun Reddy: Tongue?
[29/02/24, 6:17:16 PM] Rey manideep: Baabu type chese lopu pettesav
[29/02/24, 6:17:29 PM] Rey manideep: Meer edhi pettina thinta 😞
[29/02/24, 6:17:33 PM] VIT Varun Reddy: Dabbulu adigi
[29/02/24, 6:17:51 PM] Sai Koushik: 3 boneless
2 egg
1 kaaju 
Tongue
[29/02/24, 6:18:07 PM] Rey manideep: Adhe adiga kodtha annad
First maatho thinu annad 
Tarwtha kodtha annad
[29/02/24, 6:18:09 PM] VIT Varun Reddy: Sarath ki em oddu anta
[29/02/24, 6:18:13 PM] Rey manideep: Naaku dum ee
[29/02/24, 6:18:14 PM] Sai Koushik: Ambro vall separately 💀
[29/02/24, 6:18:38 PM] VIT Varun Reddy: Mani kuda tongue ey
[29/02/24, 6:18:48 PM] VIT Varun Reddy: Naaku revanth ki kuda boneless
[29/02/24, 6:19:22 PM] Sai Koushik: 2 boneless 
1 dum
[29/02/24, 6:20:07 PM] Rey manideep: Dum biryani lo egg vaddh ani cheppu
[29/02/24, 6:20:57 PM] Rey manideep: Velletappudu call cheyyandooo
‎[01/03/24, 9:03:50 AM] Sarath babu: ‎image omitted
[04/03/24, 11:27:21 PM] Rey manideep: Mar6 ethnic wear veskundham guys 🥹
[04/03/24, 11:28:44 PM] VIT Varun Reddy: March 8th bro shivaratri
[04/03/24, 11:52:13 PM] Rey manideep: Appud nuvv training lo vuntav
[05/03/24, 12:46:49 AM] VIT Varun Reddy: 9th and 10th maaku
[05/03/24, 12:47:37 AM] Rey manideep: Arey ekkado insta story lo chusa ra 6th ethnic wear ani nv logiclu addakku 🥲
‎[06/03/24, 2:27:13 PM] VIT Varun Reddy: ‎image omitted
[06/03/24, 3:38:14 PM] Sai Koushik: https://drive.google.com/drive/folders/1-4ILgH0XEMRrTK2XZVjVNURDExd_E7QU
‎[07/03/24, 12:00:36 AM] Sarath babu: ‎image omitted
‎[07/03/24, 12:00:36 AM] Sarath babu: ‎image omitted
‎[07/03/24, 12:00:36 AM] Sarath babu: ‎image omitted
‎[07/03/24, 12:00:37 AM] Sarath babu: ‎image omitted
‎[07/03/24, 12:00:37 AM] Sarath babu: ‎image omitted
[08/03/24, 1:42:54 PM] Rey manideep: Dsp coming tommorow 💥
[08/03/24, 1:45:17 PM] VIT Varun Reddy: Ekkadiki bhai?
[08/03/24, 1:57:39 PM] Rey manideep: Mana clg ke 😭😭
‎[08/03/24, 1:59:05 PM] Rey manideep: ‎image omitted
[10/03/24, 1:02:23 PM] Sai Koushik: https://forms.gle/2PZMVPSHg6dQr3Yu5
‎[10/03/24, 1:03:34 PM] Rajshekar Reddy Vit: ‎image omitted
[12/03/24, 1:53:23 PM] Rey manideep: https://x.com/shr3hs/status/1767445549954056691?t=gsGowrBR8mSqmcPAK1GuUw&s=08
[12/03/24, 3:00:33 PM] Rey manideep: andharu like cheyyandi frends

https://x.com/ManiDeep919/status/1767474056461525089?t=VssFxXO-0btd4Yo51up7tg&s=08
‎[13/03/24, 7:06:06 PM] Rey manideep: ‎image omitted
[13/03/24, 7:58:54 PM] Sai Koushik: 💀💀💀
‎[18/03/24, 11:55:26 AM] Sai Koushik: tcs1.pdf • ‎9 pages ‎document omitted
‎[18/03/24, 11:55:26 AM] Sai Koushik: tcs2.pdf • ‎9 pages ‎document omitted
‎[18/03/24, 11:55:26 AM] Sai Koushik: tcs3.pdf • ‎8 pages ‎document omitted
‎[18/03/24, 5:53:33 PM] Sai Koushik: TCS Digital Test 4.docx ‎document omitted
‎[18/03/24, 7:28:42 PM] Rey manideep: ‎image omitted
‎[21/03/24, 6:31:14 PM] Sai Koushik: ‎image omitted
[25/03/24, 2:50:17 PM] Rey manideep: హోలీ శుభాకాంక్షలు

వసంత రుతువు అడుగిడే తరుణంలో భారతీయులందరూ ఉల్లాసంగా... ఉత్సాహంగా చేసుకొనే వేడుక హోలీ. దేశ ప్రజలందరికీ హోలీ పౌర్ణమి శుభాకాంక్షలు. జీవితం వర్ణమయం కావాలని, సుఖసంతోషాలతో ఉండాలని మనస్ఫూర్తిగా ఆకాంక్షిస్తున్నాను. ఈ వేడుకలో సహజ సిద్ధమైన రంగులనే వినియోగించడం శ్రేయస్కరం. ఆరోగ్యపరంగా కూడా ఎలాంటి  ఇబ్బందులూ తలెత్తవు. హోలీ వేడుకలను సామరస్యంగా, ఆనందంగా చేసుకోవాలని కోరుకొంటున్నాను.
[25/03/24, 2:57:48 PM] VIT Varun Reddy: Back at ya! Mawa
[25/03/24, 4:54:19 PM] Sai Koushik: Unkul
‎[27/03/24, 2:57:52 PM] Revanthow 🔔: ‎image omitted
‎[27/03/24, 2:57:52 PM] Revanthow 🔔: ‎image omitted
‎[27/03/24, 2:58:04 PM] Revanthow 🔔: ‎image omitted
‎[27/03/24, 4:00:52 PM] Revanthow 🔔: ‎image omitted
‎[27/03/24, 4:00:53 PM] Revanthow 🔔: ‎image omitted
[27/03/24, 7:19:23 PM] Sai Koushik: Biryan
‎[28/03/24, 3:18:47 AM] Rey manideep: ‎image omitted
‎[28/03/24, 8:35:55 AM] VIT Varun Reddy: ‎image omitted
[28/03/24, 8:39:20 AM] VIT Varun Reddy: Fuck you koushik
[28/03/24, 8:39:25 AM] VIT Varun Reddy: Fuck You Revanth
‎[28/03/24, 10:36:51 AM] Revanthow 🔔: ‎image omitted
‎[28/03/24, 10:36:52 AM] Revanthow 🔔: ‎image omitted
[28/03/24, 10:45:04 AM] VIT Varun Reddy: Set B miss aindi
‎[28/03/24, 10:47:21 AM] Revanthow 🔔: ‎image omitted
‎[28/03/24, 10:47:21 AM] Revanthow 🔔: ‎image omitted
[28/03/24, 11:28:28 AM] Revanthow 🔔: 1-d(to visit nodes in ascending order)
2-b(Left,Root,Right)
3-c(to visit nodes In a vertical column-wise)
4-c(left,center,right)
5-b(To visit revisting already explored veryices)
6-c(finding shortest path in a weighted directed graph)
7-c(tree)
8-b(facilitating sorting in a tournament based algorithm)
9-d) It facilitates efficient tournament-style comparisons.
10-c) Swap the nodes back
11-b) Queue
12-b) It fails to produce a valid topological ordering
13-b) Implementing priority queues.
14-a) (3, 5, 7, 8, 9, 10, 12]
15-c) Visualization of column-wise data is needed
[28/03/24, 11:29:13 AM] Revanthow 🔔: set C
[28/03/24, 4:14:21 PM] Revanthow 🔔: ‎This message was deleted.
[29/03/24, 3:06:27 PM] VIT Varun Reddy: Mod 1- 10
Mod 2-25
Mod 4- 15
‎[29/03/24, 6:17:42 PM] VIT Varun Reddy: ‎image omitted
‎[29/03/24, 8:07:43 PM] Sarath babu: ‎image omitted
‎[30/03/24, 6:50:43 AM] VIT Varun Reddy: ‎image omitted
‎[30/03/24, 6:50:43 AM] VIT Varun Reddy: ‎image omitted
‎[30/03/24, 6:50:43 AM] VIT Varun Reddy: ‎image omitted
‎[30/03/24, 6:50:43 AM] VIT Varun Reddy: ‎image omitted
[30/03/24, 6:50:54 AM] VIT Varun Reddy: link budget problems
[30/03/24, 10:37:17 AM] Rey manideep: https://x.com/ManiDeep919/status/1773939887496151303?t=8JME3v1UiUhKimpX0H6XkA&s=08
[30/03/24, 10:52:20 AM] VIT Varun Reddy: Emaindi bhai
[30/03/24, 10:52:32 AM] Rey manideep: Anni block chesar 🥲
[30/03/24, 10:52:45 AM] VIT Varun Reddy: 🥲
[30/03/24, 10:53:05 AM] Rey manideep: Like the tweet you bloody
[30/03/24, 10:53:20 AM] Rey manideep: Ninna mee story ki like kottan ga
‎[01/04/24, 10:54:32 AM] VIT Varun Reddy: ‎image omitted
‎[01/04/24, 11:06:28 AM] VIT Varun Reddy: optical_imp.pdf • ‎2 pages ‎document omitted
[01/04/24, 11:38:44 AM] Sai Koushik: @someone bring pens for @917036605453 

Especially @919392799591 ⛰️🫡
‎[01/04/24, 8:41:44 PM] Sai Koushik: ‎image omitted
[02/04/24, 4:25:36 PM] VIT Varun Reddy: Essence and Indian constitution marks vachayi chuskondi
‎[02/04/24, 10:48:08 PM] Rajshekar Reddy Vit: WINSEM2023-24_BECE401L_TH_CH2023240502635_Reference_Material_III_08-02-2024_Problem_module_3.pdf • ‎58 pages ‎document omitted
‎[02/04/24, 11:01:07 PM] Sai Koushik: WINSEM2023-24_BECE401L_TH_CH2023240502635_Reference_Material_III_08-02-2024_Problem_module_3 - convert.pdf • ‎6 pages ‎document omitted
‎[02/04/24, 11:02:10 PM] Sarath babu: ccnproblems.pdf • ‎7 pages ‎document omitted
‎[02/04/24, 11:03:13 PM] Sai Koushik: WINSEM2023-24_BECE401L_TH_CH2023240502635_Reference_Material_III_08-02-2024_Problem_module_3 - convert.pdf • ‎4 pages ‎document omitted
[03/04/24, 11:25:20 AM] VIT Varun Reddy: Naive based or pca based numerical
Regression
Knn algorithm
Numerical 25m from mod3

4th mod 20m theoretical, architecture based

5th mod 5marks, upto underlying technology ( theoretical)
‎[03/04/24, 2:57:40 PM] Sai Koushik: sts.docx • ‎31 pages ‎document omitted
‎[03/04/24, 3:11:45 PM] Sai Koushik: sts.txt ‎document omitted
[04/04/24, 5:39:15 PM] Revanthow 🔔: https://youtu.be/fnwjsO9ky9o?si=ALDXu5AjjWk8ZfPM
[04/04/24, 5:39:32 PM] Revanthow 🔔: https://youtu.be/wy2IyZ6ayCY?si=N1DeKpK7WSHgQk5q
‎[04/04/24, 7:44:37 PM] Revanthow 🔔: ‎image omitted
[04/04/24, 7:49:09 PM] Rey manideep: Bayes emo naak iot lo vundhi
Kindha vunnavi emo cnf predicate logic AI lo vunnay 😮‍💨🏃
[04/04/24, 8:24:08 PM] P C: ‎VIT Varun Reddy added P C
[04/04/24, 9:48:46 PM] Revanthow 🔔: mod 4 Bayes theorem 10m, Bayesian network 15m
[04/04/24, 9:48:46 PM] Revanthow 🔔: mod 3 propositional logic and FOL ki resolution, fwd chaining
[04/04/24, 9:48:47 PM] Revanthow 🔔: 25m,25m
[04/04/24, 11:40:36 PM] Revanthow 🔔: https://youtu.be/CbI-Q2a5rUU?si=w4ZyTQZSujYdJ7vf
‎[05/04/24, 5:06:02 PM] P C: ‎image omitted
‎[05/04/24, 5:42:42 PM] VIT Varun Reddy: ‎image omitted
[05/04/24, 8:59:36 PM] Revanthow 🔔: #include <8051.h>

#define LIGHT_BUTTON P1_0
#define FAN_BUTTON P1_1
#define LIGHT_LED P2_0
#define FAN_LED P2_1

#define ON 1
#define OFF 0

bit light_state = OFF;
bit fan_state = OFF;

void delay(unsigned int ms) {
    unsigned int i, j;
    for (i = 0; i < ms; i++)
        for (j = 0; j < 114; j++);
}

void init() {
    LIGHT_BUTTON = 1; // Set LIGHT_BUTTON as input
    FAN_BUTTON = 1;   // Set FAN_BUTTON as input
    LIGHT_LED = OFF;  // Initialize light LED as OFF
    FAN_LED = OFF;    // Initialize fan LED as OFF
}

void toggleLight() {
    light_state = !light_state;
    LIGHT_LED = light_state;
}

void toggleFan() {
    fan_state = !fan_state;
    FAN_LED = fan_state;
}

void main() {
    init();

    while (1) {
        if (LIGHT_BUTTON == 0) {
            delay(50); // debounce delay
            if (LIGHT_BUTTON == 0) {
                toggleLight();
                while (LIGHT_BUTTON == 0); // wait for button release
            }
        }

        if (FAN_BUTTON == 0) {
            delay(50); // debounce delay
            if (FAN_BUTTON == 0) {
                toggleFan();
                while (FAN_BUTTON == 0); // wait for button release
            }
        }
    }
}
[05/04/24, 8:59:37 PM] Revanthow 🔔: ‎This message was deleted.
[05/04/24, 8:59:37 PM] Revanthow 🔔: #include <8051.h>

#define CONDITION_1 P1_0
#define CONDITION_2 P1_1
#define LED_1 P2_0
#define LED_2 P2_1

void delay(unsigned int ms) {
    unsigned int i, j;
    for (i = 0; i < ms; i++)
        for (j = 0; j < 114; j++);
}

void init() {
    CONDITION_1 = 1; // Set CONDITION_1 as input
    CONDITION_2 = 1; // Set CONDITION_2 as input
    LED_1 = 0;       // Initialize LED_1 as OFF
    LED_2 = 0;       // Initialize LED_2 as OFF
}

void main() {
    init();

    while (1) {
        // Check conditions and control LEDs using logical operations
        if (CONDITION_1 == 0 && CONDITION_2 == 0) {
            // Both conditions are true
            LED_1 = 1;
            LED_2 = 1;
        } else if (CONDITION_1 == 0 || CONDITION_2 == 0) {
            // Either condition is true
            LED_1 = 1;
            LED_2 = 0;
        } else {
            // Both conditions are false
            LED_1 = 0;
            LED_2 = 0;
        }
    }
}
[05/04/24, 8:59:37 PM] Revanthow 🔔: #include <8051.h>

#define ADC_PIN P1_0  // Analog input pin for temperature sensor
#define TX_PIN P3_1   // TX pin for serial communication

void UART_init() {
    TMOD = 0x20;    // Timer 1, Mode 2 for serial communication
    SCON = 0x50;    // Serial mode 1, 8-bit data, enable reception
    TH1 = -6;       // Set baud rate to 9600 (for 11.0592 MHz crystal)
    TR1 = 1;        // Start timer 1
}

void UART_transmit(unsigned char data) {
    SBUF = data;    // Load data into serial buffer
    while (!TI);    // Wait until transmit flag is set
    TI = 0;         // Reset transmit flag
}

unsigned int ADC_read() {
    ADCON = 0x01;         // ADC conversion, AN0
    ADCON |= 0x04;        // Start ADC conversion
    while (ADCON & 0x04); // Wait for conversion to complete
    return ((ADCH << 8) | ADCL); // Return 10-bit ADC value
}

void main() {
    unsigned int temperature;

    UART_init();

    while (1) {
        // Read analog value from temperature sensor
        temperature = ADC_read();

        // Convert analog value to temperature (example)
        // Formula: temperature = (analog_value * 5) / 1024
        // Assuming analog_value is in millivolts
        temperature = (temperature * 500) / 1024;

        // Transmit temperature data serially
        UART_transmit((temperature >> 8) & 0xFF); // Send MSB
        UART_transmit(temperature & 0xFF);        // Send LSB

        // Delay before next transmission
        for (unsigned int i = 0; i < 10000; i++);
    }
}
‎[05/04/24, 9:00:51 PM] Sarath babu: emb c 1_merged.pdf • ‎6 pages ‎document omitted
[05/04/24, 9:22:38 PM] Revanthow 🔔: #include <8051.h>

#define EAST_WEST_LIGHT P2
#define NORTH_SOUTH_LIGHT P3

#define GREEN 0x01
#define YELLOW 0x02
#define RED 0x04

void delay_ms(unsigned int ms) {
    unsigned int i, j;
    for (i = 0; i < ms; i++)
        for (j = 0; j < 114; j++);
}

void init() {
    EAST_WEST_LIGHT = RED;      // Initially, red light for East-West direction
    NORTH_SOUTH_LIGHT = GREEN;  // Initially, green light for North-South direction
}

void timer0_init() {
    TMOD |= 0x01;     // Timer 0, mode 1 (16-bit mode)
    TH0 = 0xFC;       // Load initial value for 1ms delay (65536 - 500 = 65036 = 0xFC14)
    TL0 = 0x14;
    TR0 = 1;          // Start Timer 0
}

void timer0_delay_ms(unsigned int ms) {
    unsigned int i;
    for (i = 0; i < ms; i++) {
        TF0 = 0;          // Clear Timer 0 overflow flag
        while (!TF0);     // Wait for Timer 0 overflow
        TH0 = 0xFC;       // Reload initial value for 1ms delay
        TL0 = 0x14;
    }
}

void main() {
    init();
    timer0_init();

    while (1) {
        // East-West traffic
        EAST_WEST_LIGHT = GREEN;
        NORTH_SOUTH_LIGHT = RED;
        timer0_delay_ms(5000);  // 5 seconds for green light

        EAST_WEST_LIGHT = YELLOW;
        timer0_delay_ms(2000);  // 2 seconds for yellow light

        EAST_WEST_LIGHT = RED;
        timer0_delay_ms(3000);  // 3 seconds for red light

        // North-South traffic
        EAST_WEST_LIGHT = RED;
        NORTH_SOUTH_LIGHT = GREEN;
        timer0_delay_ms(5000);  // 5 seconds for green light

        NORTH_SOUTH_LIGHT = YELLOW;
        timer0_delay_ms(2000);  // 2 seconds for yellow light

        NORTH_SOUTH_LIGHT = RED;
        timer0_delay_ms(3000);  // 3 seconds for red light
    }
}
[05/04/24, 9:24:19 PM] Revanthow 🔔: #include <8051.h>

#define SENSOR_PIN P1_0
#define DOOR_PIN P1_1
#define OPEN_DURATION 500 // Duration in milliseconds

void delay(unsigned int ms) {
    unsigned int i, j;
    for (i = 0; i < ms; i++)
        for (j = 0; j < 114; j++);
}

void main() {
    SENSOR_PIN = 1; // Set SENSOR_PIN as input
    DOOR_PIN = 0;   // Set DOOR_PIN as output

    while (1) {
        if (SENSOR_PIN == 1) { // If person detected
            DOOR_PIN = 1;      // Open the door
            delay(OPEN_DURATION);
            DOOR_PIN = 0;      // Close the door
        }
    }
}
[05/04/24, 9:24:28 PM] Revanthow 🔔: SFR BASED
‎[05/04/24, 10:00:24 PM] P C: Mod 5 & 6 Thoery.pptx • ‎84 slides ‎document omitted
[05/04/24, 10:34:22 PM] Harshit 🐍: ‎You added Harshit 🐍
‎[05/04/24, 10:54:23 PM] VIT Varun Reddy: Code[1].pdf • ‎15 pages ‎document omitted
‎[05/04/24, 11:35:59 PM] Sarath babu: TIMER [PROBLEMS].pdf • ‎17 pages ‎document omitted
[06/04/24, 7:19:45 AM] Sai Koushik: #include <reg51.h>

// Define traffic light pins
sbit RED_NORTH = P1^0;
sbit YELLOW_NORTH = P1^1;
sbit GREEN_NORTH = P1^2;
sbit RED_SOUTH = P1^3;
sbit YELLOW_SOUTH = P1^4;
sbit GREEN_SOUTH = P1^5;
sbit RED_EAST = P1^6;
sbit YELLOW_EAST = P1^7;
sbit GREEN_EAST = P2^0;
sbit RED_WEST = P2^1;
sbit YELLOW_WEST = P2^2;
sbit GREEN_WEST = P2^3;

// Function prototypes
void delay(unsigned int milliseconds);

void main() {
    // Initialize traffic light pins as output
    RED_NORTH = YELLOW_NORTH = GREEN_NORTH = RED_SOUTH = YELLOW_SOUTH = GREEN_SOUTH = 0;
    RED_EAST = YELLOW_EAST = GREEN_EAST = RED_WEST = YELLOW_WEST = GREEN_WEST = 0;

    while (1) {
        // North-South direction
        RED_NORTH = RED_SOUTH = 1;
        delay(5000); // 5 seconds

        GREEN_NORTH = GREEN_SOUTH = 1;
        RED_NORTH = RED_SOUTH = 0;
        delay(10000); // 10 seconds

        YELLOW_NORTH = YELLOW_SOUTH = 1;
        GREEN_NORTH = GREEN_SOUTH = 0;
        delay(3000); // 3 seconds

        // East-West direction
        RED_EAST = RED_WEST = 1;
        delay(5000); // 5 seconds

        GREEN_EAST = GREEN_WEST = 1;
        RED_EAST = RED_WEST = 0;
        delay(10000); // 10 seconds

        YELLOW_EAST = YELLOW_WEST = 1;
        GREEN_EAST = GREEN_WEST = 0;
        delay(3000); // 3 seconds
    }
}

// Function to generate delay in milliseconds
void delay(unsigned int milliseconds) {
    unsigned int i, j;
    for (i = 0; i < milliseconds; i++)
        for (j = 0; j < 1275; j++); // Adjusted for a 1 ms delay at 11.0592 MHz
}
‎[06/04/24, 8:17:04 AM] Harshit 🐍: ‎image omitted
‎[06/04/24, 8:17:05 AM] Harshit 🐍: ‎image omitted
‎[06/04/24, 8:19:00 AM] Revanthow 🔔: 21BEC1583_DATA CONVERSION.pdf • ‎2 pages ‎document omitted
[07/04/24, 7:49:06 AM] VIT Varun Reddy: Evaraina nidra lechara
[07/04/24, 7:57:36 AM] Rey manideep: Good morning Anna
[07/04/24, 8:00:19 AM] VIT Varun Reddy: Hostel lo undevallu *
[07/04/24, 8:00:24 AM] VIT Varun Reddy: Morning
[07/04/24, 8:53:48 AM] Revanthow 🔔: Cheppu chinna
‎[07/04/24, 11:43:24 AM] Rey manideep: ‎GIF omitted
[09/04/24, 1:16:08 AM] Rey manideep: మీకు మీ కుటుంబ సభయులందరికీ శ్రీ క్రోధి నామ సంవత్సరం శుభాకాంక్షలు అందరికీ సుఖసంతోషాలను, శ్రేయస్సును అందించాలని భగవంతుణ్ణి ప్రార్థిస్తున్నాను.

తెలుగు సంవత్సరం ప్రారంభమయ్యే ఉగాది మనందరికీ ఎంతో ప్రత్యేకమైనది. తెలుగుదనం నిండిన ఈ వేడుకను ప్రతి ఒక్కరూ ఆనందోత్సాహాలతో చేసుకోవాలని మనస్ఫూర్తిగా ఆకాంక్షిస్తున్నాను. ఉదయ రాష్ట్రాల్లోనే కాకుండా దేశవ్యాప్తంగా, ప్రపంచవ్యాప్తంగా ఉన్న తెలుగువారందరికీ ఉగాది శుభాకాంక్షలు, మన సంస్కృతి, సంప్రదాయాలతోపాటు జీవిత సత్యాలను ఉగాది వేడుకలు చెబుతాయి. కొత్త చిగురులు వేసే వసంత రుతువు మొదలయ్యేది ఈ పర్వదినం నుంచే.
[09/04/24, 8:25:43 AM] VIT Varun Reddy: ఉగాది శుభకాంక్షలు
[10/04/24, 12:25:49 PM] Revanthow 🔔: rey
[10/04/24, 12:25:49 PM] Revanthow 🔔: guest lecture avthundhi
[10/04/24, 12:25:53 PM] Revanthow 🔔: https://zoom.us/j/93745451348?pwd=VnlJbmF0c3plcEZXVjlKWUpXT0RTQT09
[10/04/24, 12:26:13 PM] Revanthow 🔔: WMC
[16/04/24, 1:20:40 PM] VIT Varun Reddy: Revanth ki embedded C 46 anta
‎[16/04/24, 1:27:28 PM] Sai Koushik: ‎sticker omitted
[16/04/24, 1:27:39 PM] P C: yaiiiiiii
[16/04/24, 1:27:46 PM] P C: biriyaniiiiii
[16/04/24, 1:27:51 PM] P C: nak veg
[16/04/24, 1:28:13 PM] Sai Koushik: Prawns
[16/04/24, 1:27:58 PM] VIT Varun Reddy: First nee ai ml 39 ki ivvu ra munda
[16/04/24, 1:28:15 PM] P C: ad 90 essi 39 esad raaa….
[16/04/24, 1:28:19 PM] VIT Varun Reddy: Class avg 20 kuda undadu indulo aythey
[16/04/24, 1:28:27 PM] Rajshekar Reddy Vit: Naku boneless
‎[16/04/24, 1:28:43 PM] Rey manideep: ‎image omitted
[16/04/24, 1:28:50 PM] VIT Varun Reddy: Not me
[16/04/24, 1:28:52 PM] VIT Varun Reddy: They
[16/04/24, 1:29:04 PM] P C: cn enta?
[16/04/24, 1:29:10 PM] Rey manideep: Veedu chudu 
Ascar level performance
[16/04/24, 1:29:13 PM] VIT Varun Reddy: Inka raaledu marks
[16/04/24, 1:29:50 PM] Rey manideep: @917013898228 ki kaju
[16/04/24, 1:31:18 PM] VIT Varun Reddy: Ee grp lo undevallakanteu ekkuva marks 46 ayithe 
Andariki biryani konistad anta @917670842771
[16/04/24, 1:31:47 PM] VIT Varun Reddy: Especially Kadapa and koushik kantey ekkuva marks ayithe pakka konistadu
[16/04/24, 1:31:58 PM] VIT Varun Reddy: Anta
[16/04/24, 1:32:51 PM] VIT Varun Reddy: Em ra Kadapa emantav?
[16/04/24, 1:32:59 PM] Rajshekar Reddy Vit: Ok
[16/04/24, 1:33:14 PM] VIT Varun Reddy: Neeku ekkuva vastey nuvvu konivvali anta?
[16/04/24, 1:33:19 PM] VIT Varun Reddy: Deeniki emantav?
[16/04/24, 1:33:25 PM] Rajshekar Reddy Vit: Ok
[16/04/24, 1:33:45 PM] P C: lecturers be like....andaru marks penchamani adugutunte vill enti marks taggindi ani adugutunaru
[16/04/24, 1:33:47 PM] VIT Varun Reddy: @919493539291 neeku ekkuva vastey nuvvu konivvali
[16/04/24, 1:33:58 PM] Rajshekar Reddy Vit: Naku tekuva vaste meeru andaru koniyalli?
[16/04/24, 1:34:07 PM] VIT Varun Reddy: Evadu top chestey
[16/04/24, 1:34:09 PM] P C: looolllllllllllllll
[16/04/24, 1:34:13 PM] VIT Varun Reddy: Vaadu konistadu
[16/04/24, 1:34:49 PM] Sai Koushik: Nak raaav
[16/04/24, 1:34:59 PM] VIT Varun Reddy: Vastey koniyali ra
[16/04/24, 1:35:03 PM] VIT Varun Reddy: Adida rules
[16/04/24, 2:01:06 PM] Rey manideep: Evarokallu naak ivvandi last ki 🏃
[16/04/24, 3:02:46 PM] VIT Varun Reddy: Koushik class top
[16/04/24, 3:02:47 PM] VIT Varun Reddy: 48
[16/04/24, 3:03:01 PM] VIT Varun Reddy: Kadapa ki 40
[16/04/24, 3:04:11 PM] VIT Varun Reddy: Naaku 35
[16/04/24, 3:04:12 PM] VIT Varun Reddy: Class avg 38+
[16/04/24, 3:04:46 PM] VIT Varun Reddy: Second top 47
[16/04/24, 3:04:47 PM] VIT Varun Reddy: Third top 46
[16/04/24, 3:04:50 PM] VIT Varun Reddy: Vasu ki 40
[16/04/24, 3:05:30 PM] VIT Varun Reddy: Mitta ki 41
‎[16/04/24, 3:37:10 PM] Rey manideep: ‎sticker omitted
‎[16/04/24, 3:39:57 PM] Rey manideep: ‎sticker omitted
[16/04/24, 3:40:02 PM] Revanthow 🔔: Kadapa - dum
PC - paneer
Mani - boneless
Sarath - chicken 555
Harshith - kaju
Mitta - kaju ‎<This message was edited>
[16/04/24, 4:11:11 PM] Sarath babu: Rey set A
[16/04/24, 4:11:20 PM] Sarath babu: Sts pampivandi ra
[16/04/24, 4:13:23 PM] Sarath babu: Revanth
[16/04/24, 4:13:29 PM] Sarath babu: Ki exam undhi
[16/04/24, 4:13:52 PM] Sarath babu: ‎Missed voice call, ‎‎22 sec • ‎1 joined
‎[16/04/24, 4:43:14 PM] Rey manideep: ‎GIF omitted
[16/04/24, 4:43:52 PM] Revanthow 🔔: 🤣🤣
[16/04/24, 4:44:24 PM] Harshit 🐍: Orey internship report pettandi ra
[16/04/24, 4:44:42 PM] Harshit 🐍: Acknowledgement em pettalo adhi copy chesukunta ‎<This message was edited>
‎[16/04/24, 5:11:56 PM] VIT Varun Reddy: ‎sticker omitted
[16/04/24, 5:20:01 PM] Sai Koushik: Aba
[16/04/24, 5:24:27 PM] Revanthow 🔔: A ra
[16/04/24, 5:25:20 PM] VIT Varun Reddy: ‎This message was deleted.
[16/04/24, 5:59:07 PM] P C: ....thnks but...koushik dengutadu...adi kotta kadu....aadiki alavate...aadiki rajshekar ki 40 ante takkuva...nuv kastapadi pagal anaka ratri anaka chadavi anta techukunav....
[16/04/24, 5:59:44 PM] P C: anduke.... yaiiiiiiiiiiiiiiiiiiiiiiii biriyaaniiiiiiiiiiiiii
[16/04/24, 6:05:12 PM] VIT Varun Reddy: Velli Modigari Narendra........
[16/04/24, 6:05:16 PM] VIT Varun Reddy: Nuvvu kuda iyyali bey
[16/04/24, 7:27:56 PM] P C: nak 40 datale
[16/04/24, 7:28:05 PM] P C: nd aad enduk esado ento telidu
[16/04/24, 7:28:18 PM] VIT Varun Reddy: Paper chuskundam pada rep velli
[16/04/24, 7:28:25 PM] P C: leeeeee
[16/04/24, 7:29:14 PM] P C: ante manavatvam elli sar idi na marklu kavu ani cheppamani cheputundi but svardam unadi unnani antundi
[16/04/24, 7:59:05 PM] VIT Varun Reddy: Neeku vachuntayi ra dnk
[16/04/24, 7:59:16 PM] VIT Varun Reddy: Anni attempt chesuntav
[16/04/24, 8:00:49 PM] P C: attempt ki correct ki chaaaaana teda undi
[16/04/24, 8:01:04 PM] VIT Varun Reddy: Rey you have fire inside you
[16/04/24, 8:03:59 PM] P C: oka campfire in middle of a tsunami ‎<This message was edited>
[16/04/24, 9:29:38 PM] VIT Varun Reddy: fck u
‎[16/04/24, 10:36:53 PM] Sai Koushik: Hardware-4a-Attenuators-LR.docx • ‎3 pages ‎document omitted
‎[16/04/24, 10:57:24 PM] Sai Koushik: Hardware-1-VI & PI Chars of LD.docx • ‎2 pages ‎document omitted
‎[18/04/24, 12:46:36 AM] Revanthow 🔔: wireless lab 9.pdf • ‎4 pages ‎document omitted
[18/04/24, 5:52:46 AM] Harshit 🐍: Exp 5 dhe kuda output pettandhi ra
‎[18/04/24, 8:54:32 AM] Revanthow 🔔: ‎image omitted
[18/04/24, 9:07:14 AM] VIT Varun Reddy: Ivi raaskovala?
[18/04/24, 9:15:11 AM] Revanthow 🔔: Avasaram ledhu ra erojuki ayithey
[20/04/24, 10:29:29 AM] VIT Varun Reddy: https://scholar.google.com/scholar?hl=en&as_sdt=0%2C5&q=phC+structure+for+high+contrast+xor%2For%2Fnot+logic&oq=#d=gs_qabs&t=1713530437486&u=%23p%3DRlAuVsJBOa8J
‎[21/04/24, 6:40:30 PM] VIT Varun Reddy: 21bec1541_l12_embeddedc.docx • ‎5 pages ‎document omitted
‎[21/04/24, 6:40:30 PM] VIT Varun Reddy: 21bec1541_l13_embeddedc.docx • ‎4 pages ‎document omitted
‎[21/04/24, 6:40:30 PM] VIT Varun Reddy: 21bec1541_l11_embeddedc.pdf • ‎5 pages ‎document omitted
‎[21/04/24, 6:40:31 PM] VIT Varun Reddy: 21bec1541_l10_embeddedc.pdf • ‎3 pages ‎document omitted
‎[23/04/24, 10:19:24 PM] Harshit 🐍: Files.zip ‎document omitted
‎[23/04/24, 10:19:24 PM] Harshit 🐍: Files.zip ‎document omitted
[24/04/24, 4:43:57 PM] Rey manideep: Biryani??
[24/04/24, 4:44:12 PM] Rey manideep: @919391100542 @917670842771 @917095673698 @919492655190 @917670842771
[24/04/24, 4:44:55 PM] Sarath babu: Mani eroju party undi ra naku
‎[24/04/24, 8:34:53 PM] Sai Koushik: ‎image omitted
‎[24/04/24, 8:37:24 PM] VIT Varun Reddy: ‎image omitted
[24/04/24, 8:38:23 PM] Rey manideep: 6 ac 503
[24/04/24, 8:38:48 PM] VIT Varun Reddy: Nuvvu lopaley na?
[24/04/24, 8:38:56 PM] Rey manideep: Kaaaadhuuuu
‎[24/04/24, 8:39:07 PM] Harshit 🐍: ‎image omitted
[24/04/24, 8:39:15 PM] VIT Varun Reddy: Nenu kuda ac ayithe lopala undanu inka
[24/04/24, 8:39:28 PM] Rey manideep: Vasthava maatho baytki 🥺
‎[25/04/24, 6:33:00 PM] VIT Varun Reddy: ‎image omitted
[25/04/24, 6:40:06 PM] P C: hardware bits unai
[25/04/24, 6:40:46 PM] P C: led serial oka bit
[25/04/24, 6:40:58 PM] P C: lcd stepper inkoti
‎[26/04/24, 11:40:22 AM] Sarath babu: ‎image omitted
[26/04/24, 11:47:50 AM] VIT Varun Reddy: Chusa
[27/04/24, 8:10:30 PM] VIT Varun Reddy: ‎This message was deleted.
[27/04/24, 8:10:30 PM] VIT Varun Reddy: ‎This message was deleted.
[27/04/24, 8:10:30 PM] VIT Varun Reddy: ‎This message was deleted.
‎[28/04/24, 3:50:45 PM] Revanthow 🔔: C.txt ‎document omitted
‎[28/04/24, 4:50:01 PM] VIT Varun Reddy: c4.pdf • ‎2 pages ‎document omitted
‎[28/04/24, 10:27:14 PM] Revanthow 🔔: EMB_C.txt ‎document omitted
[29/04/24, 9:04:05 PM] VIT Varun Reddy: ‎This message was deleted.
[29/04/24, 9:09:35 PM] VIT Varun Reddy: ‎This message was deleted.
‎[01/05/24, 11:44:26 AM] Sai Koushik: IMG_9303.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9300.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9298.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9299.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9301.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9297.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9302.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9292.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9293.HEIC ‎document omitted
‎[01/05/24, 11:44:27 AM] Sai Koushik: IMG_9294.HEIC ‎document omitted
[01/05/24, 11:48:59 AM] VIT Varun Reddy: ..
[01/05/24, 11:43:53 PM] VIT Varun Reddy: clc;
clear all;
total_bw=30*(10^(6));
channel_bw=50*(10^(3));
total_area=2000;
cell_area=2;
total_channels=total_bw/channel_bw;
N=input("enter N:");
no_of_channels=total_channels/N;
m=total_area/(cell_area*N);
if N==1;
    m=1
end

capacity=no_of_channels*m*N;
fprintf("Capacity of channel is %d",capacity);
[01/05/24, 11:43:54 PM] VIT Varun Reddy: clc;
clear all;
tbw=1800*10^6;
cbw=200*10^3;
ta=2100;
total_channels=tbw/cbw;
r=100:100:1000;
area_of_cell=3*sqrt(3).*r.*r/2;

no_of_cells=ta./area_of_cell;
for N=[3,4,7,9,12]
    capacity=total_channels./N.*ta./(area_of_cell*N)*N;
    plot(r,capacity)
    hold on
end
legend('N=3','N=4','N=7','N=9','N=12','Location','best');
xlabel("radius");
ylabel("capacity");
hold off;
[01/05/24, 11:43:54 PM] VIT Varun Reddy: clc;
clear all;
tbw=input("enter");
cbw=2e3:20e3:200e3;
ta=2000;
area_of_cell=2;
total_channels=tbw./cbw;


for N=[3,4,7,9,12]
    capacity=total_channels./N.*ta./(area_of_cell*N)*N;
    plot(cbw,capacity)
    hold on
end
legend('N=3','N=4','N=7','N=9','N=12','Location','best');
xlabel("cbw");
ylabel("capacity");
hold off;
[01/05/24, 11:43:54 PM] VIT Varun Reddy: clc;
clear all;
radius=500;
time=3*60
speed=(5:5:50)./3.6
n=(2.*speed)./(pi.*radius);
hp=n./(n+(1./time))
plot(speed,hp);
hold off;
xlabel("speed")
ylabel("probability")
[01/05/24, 11:43:55 PM] VIT Varun Reddy: clc;
clear all;
radius=(100:100:1000)*0.001;
time=3/60
speed=60
n=(2.*speed)./(pi.*radius);
hp=n./(n+(1./time))
plot(radius,hp);
hold off;
xlabel("radius(km)")
ylabel("probability")
[01/05/24, 11:43:55 PM] VIT Varun Reddy: clc;
clear all;
D=(500:100:2000)*0.001;
R=5;
i=6;
for n=[2,4]
    sir=((D./R).^n)./i
    plot(D,sir)
    hold off
end
xlabel("distance between co channel cells");
ylabel("sir")
[01/05/24, 11:43:55 PM] VIT Varun Reddy: 2.3
[01/05/24, 11:43:56 PM] VIT Varun Reddy: clc
clear all
close all
n = 3
N1 = 5
N2 = 7
N3 = 19
i1 = 6

SIR11 = ((3.*N1).^(n/2))./i1
SIR12 = (sqrt(3.*N1)+0.7).^n
SIR13 = 1/((sqrt(3.*N1)+0.7).^-n+sqrt(3*N1).^-n)
SIR21 = ((3.*N2).^(n/2))./i1
SIR22 = (sqrt(3.*N2)+0.7).^n
SIR23 = 1/((sqrt(3.*N2)+0.7).^-n+sqrt(3*N2).^-n)
SIR31 = ((3.*N3).^(n/2))./i1
SIR32 = (sqrt(3.*N3)+0.7).^n
SIR33 = 1/((sqrt(3.*N3)+0.7).^-n+sqrt(3*N3).^-n)
Sectorization = ['No sectorization';"60 degree sectorization";"120 degree sectorization";"No sectorization";"60 degree sectorization";"120 degree sectorization";"No sectorization";"60 degree sectorization";"120 degree sectorization"]
SIR = [SIR11;SIR12;SIR13;SIR21;SIR22;SIR23;SIR31;SIR32;SIR33]
N = [N1;N1;N1;N2;N2;N2;N3;N3;N3]
table(Sectorization,SIR,N)
[01/05/24, 11:43:56 PM] VIT Varun Reddy: clc;
clear all;
D=100:100:2000;
Pt=10;
Gt=10^(5/10);
Gr=10^(3/10);
L=1;
f=900.*10e6;
lambda=(3.*10e8)./f;
Pr=(Pt.*Gt.*Gr.*lambda.^2)./((4.*pi.*D).^2.*L)
subplot(2,2,1);
plot(D,Pr);
xlabel("distance");
ylabel("Received Power");
title("Received power")
Pl=10*log(Pt./Pr);
subplot(2,2,2);
plot(D,Pl);
xlabel("distance");
ylabel("Path loss");
title("path loss")
[01/05/24, 11:43:57 PM] VIT Varun Reddy: clc;
clear all;
D=100:100:2000;
Pt=10;
Gt=10^(5/10);
Gr=10^(3/10);
f=900.*10e6;
ht=40;
hr=3;
lambda=(3.*10e8)./f;
Pr=(Pt.*Gt.*Gr.*ht.^2.*hr.^2)./D.^4
subplot(2,2,1);
plot(D,Pr);
xlabel("distance");
ylabel("Received Power");
title("Received power")
Pl=40*log(D)-(10*log(Gt)+10*log(Gr)+20*log(ht)+20*log(hr));
subplot(2,2,2);
plot(D,Pl);
xlabel("distance");
ylabel("Path loss");
title("path loss")
[01/05/24, 11:43:57 PM] VIT Varun Reddy: clc;
clear all;
D=100:100:2000;
Pt=10;
Gt=10^(5/10);
Gr=10^(3/10);
f=900.*10e6;
ht=40;
hr=3;
L=1;
lambda=(3.*10e8)./f;
Pl2=40*log(D)-(10*log(Gt)+10*log(Gr)+20*log(ht)+20*log(hr))
Pr=(Pt.*Gt.*Gr.*lambda.^2)./((4.*pi.*D).^2.*L);
Pl1=10*log(Pt./Pr)
plot(D,Pl1)
hold on
plot(D,Pl2)
hold off
xlabel("distance");
ylabel("pathloss");
title("Received power");
legend("Pl1","Pl2","location","best")
[01/05/24, 11:43:57 PM] VIT Varun Reddy: clc;clear all;
d=(1:2:20)*10^3;
hte=30;
hre=1.5;
for fc=[700*10^6,900*10^6]
    ahre_medium_city=(1.1*log(fc)-0.7)*hre-(1.56*log(fc)-0.8);
    ahre_large_city=3.2*(log(11.754*hre))^2-4.97;
    L50_urban1=69.55+26.16*log(fc)-13.82*log(hte)-ahre_medium_city+(44.9-6.55*log(hte))*log(d);
    L50_urban2=69.55+26.16*log(fc)-13.82*log(hte)-ahre_large_city+(44.9-6.55*log(hte))*log(d);
    L50_suburban=L50_urban1-2*(log(fc/28))^2-5.4;
    L50_rural=L50_urban1-4.78*(log(fc))^2+18.33*log(fc)-40.94;
    subplot(4,1,1);
    plot(d,L50_urban1);
    hold on;
    xlabel("distance");
    ylabel("pathloss");
    title("pathloss urban medium")
    subplot(4,1,2);
    plot(d,L50_urban2);
    hold on;
    xlabel("distance");
    ylabel("pathloss");
    title("pathloss urban large")
    subplot(4,1,3);
    plot(d,L50_suburban);
    hold on
    xlabel("distance");
    ylabel("pathloss");
    title("pathloss suburban")
    subplot(4,1,4);
    plot(d,L50_rural);
    hold on
    xlabel("distance");
    ylabel("pathloss");
    title("path loss rural");
end
[01/05/24, 11:43:58 PM] VIT Varun Reddy: clc;
clear all;
f=700;
hre=1.5;
d1=5;
d2=10;
d3=20;
hte=10:10:100;
ahre = 3.2 * (log10(11.75 * hre)^2) - 4.97; % For Urban City;


pathloss_urban_d1 = 69.55 + 26.16 * log10(f) - 13.82 * log10(hte) - ahre*(hre) + (44.9 - (6.55*hte)) * log10(d1);
pathloss_urban_d2 = 69.55 + 26.16 * log10(f) - 13.82 * log10(hte) - ahre*(hre) + (44.9 - (6.55*hte)) * log10(d2);
pathloss_urban_d3= 69.55 + 26.16 * log10(f) - 13.82 * log10(hte) - ahre*(hre) + (44.9 - (6.55*hte)) * log10(d3);


figure(2);
plot(hte, pathloss_urban_d1, 'DisplayName', 'Urban Large City for Distance 5Km');
hold on;
plot(hte, pathloss_urban_d2, 'DisplayName', 'Urban Large City for Distance 10Km');
hold on;
plot(hte, pathloss_urban_d3, 'DisplayName', 'Urban Large City for Distance 15Km');
hold on;
xlabel('Hte');
ylabel('Path Loss');
title('Hte vs Path loss in Different Cities');
legend;
hold off
[01/05/24, 11:43:58 PM] VIT Varun Reddy: clc;
clear all; 
f=900*10^6;
ht=30;
hr=1.5;
d1=5;
d=1:1:100;
Gt=3.1622;
Gr=1.995;
a_m=(1.1*log(f)-0.7)*hr-(1.56*log(f)-0.8);
a_l=3.2*power(log(11.75*hr),2)-4.97;
L_u_m=69.55+26.16*log(f)-13.82.*log(ht)-a_m+(44.9-6.55.*log(ht))*log(d);
plot(d,L_u_m);
hold on;
PL=40.*log(d)-(10*log(Gt)+10*log(Gr)+20*log(ht)+20*log(hr));
plot(d,PL);
xlabel("distance(km)")
ylabel("pathloss")
title("distance vs Pathloss ")
legend("pathloss of hata model","pathloss of two ray model","location",'best')

clc;clear all;
hte=(10:10:100);
fc=700*10^6;
hre=1.5;
for d=[5000,10000,20000]
    ahre_medium_city=((1.1*log(fc)-0.7)*hre)-(1.56*log(fc)-0.8);
    L50_urban1=69.55+(26.16*log(fc))-(13.82*log(hte))-ahre_medium_city+(44.9-6.55*log(hte))*log(d);
    plot(hte,L50_urban1);
    hold on
    xlabel("height of antenna");
    ylabel("pathloss");
    title("height vs pathloss for urban");
    legend("d1","d2","d3","location","best");
end
[01/05/24, 11:43:59 PM] VIT Varun Reddy: d0 = 0.500;
f = 900*10^6; % Frequency in Hz
n = 3; % Path loss exponent
sigma_dB = 3; % Standard deviation in dB for log-normal shadowing

% Generate distances from 1 to 20 km in steps of 2 km
d = 1:2:20; % Distances in meters

% Calculate Free Space Path Loss (PLFS)
PLFS = 20*log(d) + 20*log(f) +32.45;

% Generate random normal variable X_sigma
X_sigma = sigma_dB * randn(size(d));

% Calculate Log-normal shadowing Path Loss
PL_log_normal = PLFS + X_sigma+10*n*log(d./d0);

% Plot Log-normal shadowing Path Loss vs. Distance
plot(d/1000, PL_log_normal, 'LineWidth', 2);
xlabel('Distance (km)');
ylabel('Path Loss (dB)');
title('Log-normal Shadowing Path Loss vs. Distance-');
grid on;
[01/05/24, 11:43:59 PM] VIT Varun Reddy: d0 = 500;          
d=500;
f = 900e6;         
n = 3;             
Pt_dBm = 20;      
lambda = 3e8 / f;  
PLFS_d0 = 32.45 + 20*log10(d0/1e3) + 20*log10(f/1e6); 
X_sigma = randn(1, 10);  
d_range = 1e3:2e3:20e3;
PL_lognormal = PLFS_d0 + 10 * n * log10(d_range/d0) + X_sigma;
figure;
plot(d_range/1e3, PL_lognormal, '-o');
title('Log-normal Shadowing Path Loss vs Distance');
xlabel('Distance (km)');
ylabel('Path Loss (dB)');
grid on;
figure;
for n_value = [2, 3, 4]
    PL = PLFS_d0 + 10 * n_value * log10(d_range/d0);
    Pr_dB = Pt_dBm - PL;  
    plot(d_range/1e3, Pr_dB, '-o', 'DisplayName', ['n = ' num2str(n_value)]);
    hold on;
end
title('Received Power vs Distance for Different Path Loss Exponents');
xlabel('Distance (km)');
ylabel('Received Power (dBm)');
legend('show');
grid on;
[01/05/24, 11:50:38 PM] 1545 roomies : ‎You changed this group's icon
[02/05/24, 3:37:51 PM] VIT Varun Reddy: https://www.youtube.com/channel/UC-pZhe2Fz5HNPJbPF55NNow
[02/05/24, 3:37:56 PM] VIT Varun Reddy: Andaru subscribe cheyyandi ra
‎[02/05/24, 11:10:14 PM] Sai Koushik: ‎image omitted
‎[02/05/24, 11:10:14 PM] Sai Koushik: ‎image omitted
‎[02/05/24, 11:10:14 PM] Sai Koushik: ‎image omitted
‎[02/05/24, 11:10:14 PM] Sai Koushik: ‎image omitted
‎[02/05/24, 11:10:15 PM] Sai Koushik: ‎image omitted
‎[02/05/24, 11:10:15 PM] Sai Koushik: ‎image omitted
‎[03/05/24, 7:03:09 AM] VIT Varun Reddy: expt5.osd ‎document omitted
‎[04/05/24, 11:27:42 PM] VIT Varun Reddy: Adobe Scan 03-May-2024 (1).pdf • ‎5 pages ‎document omitted
‎[04/05/24, 11:27:55 PM] VIT Varun Reddy: ‎image omitted
‎[05/05/24, 10:27:27 AM] Sarath babu: ‎image omitted
‎[05/05/24, 10:27:28 AM] Sarath babu: ‎image omitted
[05/05/24, 1:20:05 PM] Revanthow 🔔: https://youtu.be/EFGcOSwWrfU?si=gZsOj2z9Np2rf7Nu
[05/05/24, 1:20:05 PM] Revanthow 🔔: https://youtu.be/ZZfhPNxEzaA?si=b68xRC0rAjlshH4Y
‎[06/05/24, 12:44:11 AM] Revanthow 🔔: mod3,7.pdf • ‎7 pages ‎document omitted
‎[06/05/24, 12:44:54 AM] Revanthow 🔔: ‎image omitted
‎[06/05/24, 12:45:16 AM] Revanthow 🔔: ‎image omitted
‎[06/05/24, 12:26:09 PM] VIT Varun Reddy: ‎image omitted
‎[06/05/24, 12:26:10 PM] VIT Varun Reddy: ‎image omitted
‎[06/05/24, 12:26:10 PM] VIT Varun Reddy: ‎image omitted
‎[06/05/24, 3:06:06 PM] Revanthow 🔔: diversity theory.JPG ‎document omitted
[06/05/24, 6:05:04 PM] Harshit 🐍: noma youtube link pettandi bhaaai
[06/05/24, 6:06:13 PM] VIT Varun Reddy: madam notes chaduvu
[06/05/24, 6:08:06 PM] VIT Varun Reddy: Rey mani
[06/05/24, 6:08:14 PM] VIT Varun Reddy: Rendu pens kavalra 🙂
[06/05/24, 6:08:34 PM] Rey manideep: Moodu vunnay naa dhaggara okati istha
[06/05/24, 6:08:46 PM] VIT Varun Reddy: Ha okati ivvu
‎[07/05/24, 7:51:48 PM] Sarath babu: ‎image omitted
‎[07/05/24, 8:05:42 PM] Revanthow 🔔: ‎image omitted
‎[07/05/24, 8:05:42 PM] Revanthow 🔔: ‎image omitted
‎[07/05/24, 8:05:43 PM] Revanthow 🔔: ‎image omitted
‎[07/05/24, 8:15:39 PM] Revanthow 🔔: ‎image omitted
‎[07/05/24, 8:15:40 PM] Revanthow 🔔: ‎image omitted
‎[08/05/24, 10:04:04 AM] P C: ‎image omitted
‎[09/05/24, 5:26:39 PM] Sai Koushik: ‎image omitted
‎[09/05/24, 5:26:39 PM] Sai Koushik: ‎image omitted
‎[09/05/24, 6:15:08 PM] Revanthow 🔔: ‎image omitted
[09/05/24, 6:57:26 PM] VIT Varun Reddy: ...
‎[09/05/24, 7:44:28 PM] Revanthow 🔔: ‎image omitted
[09/05/24, 7:45:12 PM] VIT Varun Reddy: Entra
[09/05/24, 7:45:35 PM] Revanthow 🔔: 😂😂😂
[09/05/24, 7:45:48 PM] Revanthow 🔔: importants
[09/05/24, 7:46:06 PM] Sarath babu: syllabus copy kadu ra important pampu
[09/05/24, 7:46:52 PM] Revanthow 🔔: 🤣🤣🤣🤣🤣
[09/05/24, 7:48:33 PM] VIT Varun Reddy: 100% syllabus ey idi
[09/05/24, 7:49:32 PM] VIT Varun Reddy: Idi important antey
[09/05/24, 7:50:46 PM] VIT Varun Reddy: Moothi meeda denguta
[09/05/24, 7:51:06 PM] Revanthow 🔔: 🙃
‎[10/05/24, 11:18:41 AM] Sarath babu: ‎image omitted
‎[10/05/24, 11:18:42 AM] Sarath babu: ‎image omitted
‎[10/05/24, 11:18:42 AM] Sarath babu: ‎image omitted
‎[10/05/24, 11:18:42 AM] Sarath babu: ‎image omitted
‎[10/05/24, 7:49:40 PM] Revanthow 🔔: MODULE 7 OFC.pdf • ‎6 pages ‎document omitted
[10/05/24, 7:51:11 PM] Harshit 🐍: Anni theory notes pettandi 🙏🏻
[10/05/24, 7:53:03 PM] VIT Varun Reddy: Problems Anni chesesava?
‎[10/05/24, 8:55:05 PM] Revanthow 🔔: BECE308P_DA3.pdf • ‎5 pages ‎document omitted
[11/05/24, 2:08:18 AM] Harshit 🐍: https://www.youtube.com/watch?v=S1cR8twhEgE&t=238s
[11/05/24, 2:15:03 AM] Rey manideep: Paduko uncleeeeee
‎[12/05/24, 10:42:16 AM] Revanthow 🔔: ‎image omitted
‎[12/05/24, 1:41:07 PM] VIT Varun Reddy: ‎image omitted
‎[12/05/24, 2:56:59 PM] Harshit 🐍: ‎image omitted
‎[12/05/24, 2:57:00 PM] Harshit 🐍: ‎image omitted
[12/05/24, 4:36:34 PM] VIT Varun Reddy: https://youtube.com/watch?v=bjh04J-mSck&feature=shared
[12/05/24, 7:28:01 PM] VIT Varun Reddy: https://drive.google.com/file/d/1ppGjyoUXbfIExyG4XP9wxnE97cNp22dK/view?usp=sharing
‎[12/05/24, 11:30:38 PM] Revanthow 🔔: ‎image omitted
‎[13/05/24, 11:37:33 AM] Revanthow 🔔: CCN D1.pdf • ‎4 pages ‎document omitted
[13/05/24, 6:51:55 PM] Sai Koushik: Nptel results
[13/05/24, 6:51:58 PM] Sai Koushik: Achinai
[13/05/24, 6:52:19 PM] Sai Koushik: @917036605453 how much unkul???
[13/05/24, 6:52:30 PM] VIT Varun Reddy: 83
[13/05/24, 7:14:48 PM] Revanthow 🔔: Iot mark uploaded
‎[13/05/24, 10:54:24 PM] Harshit 🐍: WINSEM2023-24_BECE401L_TH_CH2023240502635_Reference_Material_III_08-02-2024_Problem_module_3_12.pdf • ‎58 pages ‎document omitted
‎[13/05/24, 11:08:34 PM] Harshit 🐍: ‎image omitted
‎[14/05/24, 12:55:44 AM] Revanthow 🔔: ‎image omitted
‎[14/05/24, 12:55:44 AM] Revanthow 🔔: ‎image omitted
‎[14/05/24, 12:55:44 AM] Revanthow 🔔: ‎image omitted
‎[14/05/24, 12:55:45 AM] Revanthow 🔔: ‎image omitted
‎[14/05/24, 12:56:16 AM] Revanthow 🔔: ‎image omitted
‎[14/05/24, 12:56:44 AM] Revanthow 🔔: ‎image omitted
[14/05/24, 5:40:26 PM] VIT Varun Reddy: Rey
[14/05/24, 5:40:33 PM] VIT Varun Reddy: Biryani
[14/05/24, 5:40:41 PM] VIT Varun Reddy: Em kavaloo cheppandi
[14/05/24, 5:43:05 PM] P C: tongue or ambro
[14/05/24, 5:43:12 PM] VIT Varun Reddy: Tongue mf
[14/05/24, 5:55:10 PM] P C: evar evar
‎[14/05/24, 5:55:32 PM] Harshit 🐍: ‎sticker omitted
[14/05/24, 5:56:00 PM] Sai Koushik: @917013898228 1. Boneless me
[14/05/24, 7:24:24 PM] Rey manideep: Call cheyyoch kadha ra 🥲
[15/05/24, 10:38:48 AM] VIT Varun Reddy: rey ivi cat 2 vi anukunta kada ra
[15/05/24, 10:46:20 AM] VIT Varun Reddy: rey mani
[15/05/24, 10:46:31 AM] VIT Varun Reddy: sts emaina jugaad lu unnayi
[15/05/24, 4:09:31 PM] Rey manideep: ?
[15/05/24, 4:09:51 PM] VIT Varun Reddy: ....
[15/05/24, 4:09:59 PM] VIT Varun Reddy: Unnayya*
[15/05/24, 4:11:15 PM] Rey manideep: Jugaad aah ante ‎<This message was edited>
[15/05/24, 4:11:27 PM] VIT Varun Reddy: scam
[15/05/24, 4:11:33 PM] Rey manideep: Vundhi
[15/05/24, 4:11:41 PM] VIT Varun Reddy: endi process
[15/05/24, 4:11:47 PM] VIT Varun Reddy: kastama
[15/05/24, 4:12:32 PM] Rey manideep: Ha konchem
[15/05/24, 4:12:48 PM] VIT Varun Reddy: night cum to room
[15/05/24, 4:13:07 PM] VIT Varun Reddy: after nine
[15/05/24, 4:13:14 PM] Rey manideep: You come
[15/05/24, 4:13:23 PM] Rey manideep: Any time
[15/05/24, 4:13:28 PM] VIT Varun Reddy: okiee
[15/05/24, 4:56:41 PM] Revanthow 🔔: CAT-1

Stack Permutation CODE:

---------------------------------------------------------------------------------------------------------------
import java.util.*;
class Main{
    static Boolean check(int ip[],int op[],int x){
        Stack<Integer> s = new Stack<Integer>();
        int j = 0;
        for(int i = 0;i < x;++ i){
            s.push(ip[i]);
            while(!s.isEmpty() && s.peek() == op[j]){
                s.pop();
                j ++;
            }
        }
        if(s.isEmpty()) return true;
        return false;
    }
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int input[] = new int[n];
        int output[] = new int[n];
        for(int i = 0;i < n;++ i){
            input[i] = sc.nextInt();
        }
        for(int i = 0;i < n;++ i){
            output[i] = sc.nextInt();
        }
        if(check(input,output,n)){
            System.out.println("Yes");
        }
        else{
            System.out.println("Not Possible");
        }
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------

Stock span:

import java.util.*;
class Main{
    static void cal(int arr[],int n,int s[]){
        Stack<Integer> st = new Stack<Integer>();
        st.push(0);
        s[0] = 1;
        for(int i = 1;i < n;++ i){
            while(!st.isEmpty() && arr[st.peek()] <= arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                s[i] = i + 1;
            }
            else{
                s[i] = i - st.peek();
            }
            st.push(i);
        }
    }
    static void printarray(int s[]){
        System.out.print(Arrays.toString(s));
    }
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int arr[] = new int[n];
        int s[] = new int[n];
        for(int i = 0;i < n;++ i){
            arr[i] = sc.nextInt();
        }
        cal(arr,n,s);
        printarray(s);
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------

The Celebrity problem:

import java.util.*;
class Main{
    static int cele(int mat[][],int n){
        Stack<Integer> st = new Stack<Integer>();
        for(int i = 0;i < n;++ i){
            st.push(i);
        }
        while(st.size() > 1){
            int col = st.pop();
            int row = st.pop();
            if(mat[row][col] == 1){
                st.push(col);
            }
            else{
                st.push(row);
            }
        }
        int x = st.pop();
        for(int i = 0;i < n;++ i){
            if(i == x) continue;
            if(mat[x][i] == 1) return -1;
        }
        for(int i = 0;i < n;++ i){
            if(i == x) continue;
            if(mat[i][x] == 0) return -1;
        }
        return x;
    }
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int matrix[][] = new int[n][n];
        for(int i = 0;i < n;++ i){
            for(int j = 0;j < n;++ j){
                matrix[i][j] = sc.nextInt();
            }
        }
        int res = cele(matrix,n);
        if(res == -1){
            System.out.println("NO Celeberity");
        }
        else{
            System.out.println(res + "is the celeberity");
        }
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------

segregate even & odd:

import java.util.*;

class Node {
    int val;
    Node next;

    Node(int num) {
        val = num;
        next = null;
    }
}

class Main {

    static Node evenodd(Node head) {
        if(head == null || head.next == null) return null;
        Node even_s = new Node(-1);
        Node odd_s = new Node(-1);
        Node even_e = even_s;
        Node odd_e = odd_s;
        Node curr = head;
        while (curr != null) { 
            if (curr.val % 2 == 0) { 
                even_e.next = curr;
                even_e = even_e.next;
            }
            else { 
                odd_e.next = curr;
                odd_e = odd_e.next; 
            }
            curr = curr.next;  // Move to the next node
        }
        even_e.next = odd_s.next;
        odd_e.next = null;
        return even_s.next;
    }

    static Node push(Node head, int m) {

        Node newnode = new Node(m);
        if (head == null) {
            head = newnode;
            return head;
        }
        Node temp = head;
        while (temp.next != null) {
            temp = temp.next;
        }
        temp.next = newnode;
        return head;
    }
 

    static void display(Node head) {

        Node temp = head;
        while (temp != null) {
            System.out.print(temp.val + "->");
            temp = temp.next;
        }
        System.out.println("null");
    }

   

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Node head = null;
        int n = sc.nextInt();
        for (int i = 0; i < n; i++) {
            int m = sc.nextInt();  // Corrected variable name from n to m
            head = push(head, m);
        }

        head = evenodd(head);
        display(head);
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------

Sort DLL:

import java.util.*;
class Node{
    int val;
    Node prev;
    Node next;  
}
class Main{
static Node push(Node head,int m){
    Node newnode = new Node();
    newnode.val = m;
    newnode.prev = null;
    newnode.next = head;
    if(head!=null){
        head.prev = newnode;
    }
    head = newnode;
    return head;
}

static void display(Node head){
    Node temp = head;
    while(temp!=null){
        System.out.print(temp.val+"->");
        temp=  temp.next;
    }
    System.out.println("null");
}

static Node sorting(Node head){
    Node i = new Node();
    Node j = new Node();
    for(i=head;i!=null;i=i.next){
        for(j=i;j!=null;j=j.next){
            if(i.val>j.val){
                int t = j.val;
                j.val=i.val;
                i.val=t;
            }
        }
    }
    return head;
}

public static void main(String[] args){
    Scanner s = new Scanner(System.in);
    int n = s.nextInt();
    Node head = null;
    for(int i = 0;i<n;i++){
        int m = s.nextInt();
        head = push(head,m);
    }
    head = sorting(head);
    display(head);
}

}
------------------------------------------------------------------------------------------------------------------------------------
2) sort two lists

import java.util.*;
class Node{
    int val;
    Node next;
    Node(int num){
        val = num;
        next = null;
    }
}
class Main{
    static Node sortLL(Node list1,Node list2){
        if(list1 == null) return list2;
        if(list2 == null) return list1;
        Node dummy = new Node(0);
        Node temp = dummy;
        while(list1 != null && list2 != null){
            if(list1.val < list2.val){
                temp.next = list1;
                list1 = list1.next;
            }
            else{
                temp.next = list2;
                list2 = list2.next;
            }
            temp = temp.next;
        }
        if(list1 != null) temp.next = list1;
        if(list2 != null) temp.next = list2;
        return dummy.next;
    }
    static Node push(Node head,int m){
        Node newNode = new Node(m);
        if(head == null){
            head = newNode;
            return head;
        }
        Node temp = head;
        while(temp.next != null){
            temp = temp.next;
        }
        temp.next = newNode;
        return head;
    }
    static void display(Node head){
        Node temp = head;
        while(temp != null){
            System.out.print(temp.val+"->");
            temp = temp.next;
        }
        System.out.print("null");
    }
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n1 = sc.nextInt();
        Node list1 = null;
        for(int i = 0;i < n1;++ i){
            int m = sc.nextInt();
            list1 = push(list1,m);
        }
        int n2 = sc.nextInt();
        Node list2 = null;
        for(int i = 0;i < n2;++ i){
            int n = sc.nextInt();
            list2 = push(list2,n);
        }
        list1 = sortLL(list1,list2);
        display(list1);
    }
}

--------------------------------------------------------------------------------------------------------------------------------------

Tower of hanoi:

import java.util.*;
class Main{
    static void towerofhanoi(int n,char a,char b,char c){
        if(n == 0) return;
        towerofhanoi(n - 1,a,c,b);
        System.out.println("Move sidk " + n +" from rod" + a + " to rod " + c);
        towerofhanoi(n - 1,b,a,c);
    }
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        towerofhanoi(n,'A','B','C');
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------------------

Queue Sort:

// Java program to implement sorting a 
// queue data structure 
import java.util.LinkedList; 
import java.util.Queue; 
class GFG 
{ 
	// Queue elements after sortIndex are 
	// already sorted. This function returns 
	// index of minimum element from front to 
	// sortIndex 
	public static int minIndex(Queue<Integer> list, 
									int sortIndex) 
	{ 
	int min_index = -1; 
	int min_value = Integer.MAX_VALUE; 
	int s = list.size(); 
	for (int i = 0; i < s; i++) 
	{ 
		int current = list.peek(); 
		
		// This is dequeue() in Java STL 
		list.poll(); 

		// we add the condition i <= sortIndex 
		// because we don't want to traverse 
		// on the sorted part of the queue, 
		// which is the right part. 
		if (current <= min_value && i <= sortIndex) 
		{ 
			min_index = i; 
			min_value = current; 
		} 
		list.add(current); 
	} 
	return min_index; 
} 
	
	// Moves given minimum element 
	// to rear of queue 
	public static void insertMinToRear(Queue<Integer> list, 
											int min_index) 
	{ 
		int min_value = 0; 
		int s = list.size(); 
		for (int i = 0; i < s; i++) 
		{ 
		int current = list.peek(); 
		list.poll(); 
		if (i != min_index) 
			list.add(current); 
		else
			min_value = current; 
		} 
		list.add(min_value); 
	} 
	
	public static void sortQueue(Queue<Integer> list) 
	{ 
		for(int i = 1; i <= list.size(); i++) 
		{ 
			int min_index = minIndex(list,list.size() - i); 
			insertMinToRear(list, min_index); 
		} 
	} 

	//Driver function 
	public static void main (String[] args) 
	{ 
		Queue<Integer> list = new LinkedList<Integer>(); 
		list.add(30); 
		list.add(11); 
		list.add(15); 
		list.add(4); 
		
		//Sort Queue 
		sortQueue(list); 
		
		//print sorted Queue 
		while(list.isEmpty()== false) 
		{ 
			System.out.print(list.peek() + " "); 
			list.poll(); 
		} 
	} 
} 


------------------------------------------------------------------------------------------------------------------------------------------------------

Minimum Stack:

import java.util.*;
public class Main{
    public static void main(String[] args) {
        Stack<Integer>st = new Stack<>();
        Stack<Integer>min = new Stack<>();

        List<Integer>arr=new ArrayList<>();
        Scanner inp = new Scanner(System.in);
        int n = inp.nextInt();
        for(int i=0;i<n;i++){
            int x = inp.nextInt();
            arr.add(x);
        }
        for(int i=0;i<n;i++){
            st.push(arr.get(i)); 
            if(min.empty()){
                min.push(arr.get(i));
                System.out.print(min.peek()+" ");
                continue;
            }
            if(min.peek()>arr.get(i)){
               min.push(arr.get(i)); 
            }
            System.out.print(min.peek()+" ");
        }
        

    }
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Queue using DLL:

// Java code to implement priority
// queue using doubly linked list

import java.util.*;

class Solution {

	static Node front, rear;

	// Linked List Node
	static class Node {
		int info;
		int priority;
		Node prev, next;
	}

	// Function to insert a new Node
	static void push(Node fr, Node rr, int n, int p)
	{
		Node news = new Node();
		news.info = n;
		news.priority = p;

		// If linked list is empty
		if (fr == null) {
			fr = news;
			rr = news;
			news.next = null;
		}
		else {
			// If p is less than or equal front
			// node's priority, then insert at
			// the front.
			if (p <= (fr).priority) {
				news.next = fr;
				(fr).prev = news.next;
				fr = news;
			}

			// If p is more rear node's priority,
			// then insert after the rear.
			else if (p > (rr).priority) {
				news.next = null;
				(rr).next = news;
				news.prev = (rr).next;
				rr = news;
			}

			// Handle other cases
			else {

				// Find position where we need to
				// insert.
				Node start = (fr).next;
				while (start.priority > p)
					start = start.next;
				(start.prev).next = news;
				news.next = start.prev;
				news.prev = (start.prev).next;
				start.prev = news.next;
			}
		}
		front = fr;
		rear = rr;
	}

	// Return the value at rear
	static int peek(Node fr) { return fr.info; }

	static boolean isEmpty(Node fr) { return (fr == null); }

	// Removes the element with the
	// least priority value from the list
	static int pop(Node fr, Node rr)
	{
		Node temp = fr;
		int res = temp.info;
		(fr) = (fr).next;
		if (fr == null)
			rr = null;

		front = fr;
		rear = rr;
		return res;
	}

	// Driver code
	public static void main(String args[])
	{

		push(front, rear, 2, 3);
		push(front, rear, 3, 4);
		push(front, rear, 4, 5);
		push(front, rear, 5, 6);
		push(front, rear, 6, 7);
		push(front, rear, 1, 2);

		System.out.println(pop(front, rear));
		System.out.println(peek(front));
	}
}


 
*****************************************************************************************************************************************************************************************
                                                                  CAT-2



************** vertical order ************************************************************************************************************

import java.util.*;
class TreeNode {
    int data;
    TreeNode left, right;
    TreeNode(){
        this.left = null;
        this.right=null;
    }
    TreeNode(int data) {
        this.data = data;
        left = null;
        right = null;
    }
}
class Tuple {
    TreeNode node;
    int row;
    int col;
    public Tuple(TreeNode _node, int _row, int _col) {
        node = _node;
        row = _row;
        col = _col;
    }
}
public class Main {
    static TreeNode root;
    public static List < List < Integer >> findVertical(TreeNode root) {
        TreeMap < Integer, TreeMap < Integer, PriorityQueue < Integer >>> map = new TreeMap < > ();
        Queue < Tuple > q = new LinkedList < Tuple > ();
        q.offer(new Tuple(root, 0, 0));
        while (!q.isEmpty()) {
            Tuple tuple = q.poll();
            TreeNode node = tuple.node;
            int x = tuple.row;
            int y = tuple.col;


            if (!map.containsKey(x)) {
                map.put(x, new TreeMap < > ());
            }
            if (!map.get(x).containsKey(y)) {
                map.get(x).put(y, new PriorityQueue < > ());
            }
            map.get(x).get(y).offer(node.data);

            if (node.left != null) {
                q.offer(new Tuple(node.left, x - 1, y + 1));
            }
            if (node.right != null) {
                q.offer(new Tuple(node.right, x + 1, y + 1));
            }
        }
        List < List < Integer >> list = new ArrayList < > ();
        for (TreeMap < Integer, PriorityQueue < Integer >> ys: map.values()) {
            list.add(new ArrayList < > ());
            for (PriorityQueue < Integer > nodes: ys.values()) {
                while (!nodes.isEmpty()) {
                    list.get(list.size() - 1).add(nodes.poll());
                }
            }
        }
        return list;
    }
    static TreeNode build(String[] s) {
            if (s[0].equals("-1") || s.length == 0)
                return null;
            TreeNode root = new TreeNode(Integer.parseInt(s[0]));
            Queue<TreeNode> q = new LinkedList<>();
            q.add(root);
            int i = 1;
            while (!q.isEmpty() && i < s.length) {
                TreeNode curr = q.poll();
                String cval = s[i];
                if (!cval.equals("-1")) {
                    int h = Integer.parseInt(cval);
                    curr.left = new TreeNode(h);
                    q.add(curr.left);
                }
                i++;
                if (i >= s.length)
                    break;
                cval = s[i];
                if (!cval.equals("-1")) {
                    int h = Integer.parseInt(cval);
                    curr.right = new TreeNode(h);
                    q.add(curr.right);
                }
                i++;
            }
            return root;
        }
        
    public static void main(String args[]) {
        Scanner inp = new Scanner(System.in);
        int n;
        TreeNode root = new TreeNode(-1);
        String str[] = inp.nextLine().split(" ");
        root = build(str);
        List < List < Integer >> list = new ArrayList < > ();
        list = findVertical(root);

	 System.out.println("Vertical Traversal: " + list);
        System.out.println("The Vertical Traversal is : ");
        for (List < Integer > it: list) {
            for (int nodeVal: it) {
                System.out.print(nodeVal + " ");
            }
            System.out.println();
        }

    }
}


**************** recover BST ***********************************************************************************************************************************

import java.util.*;

class TreeNode {
    int val;
    TreeNode left, right;

    TreeNode() {
        this.left = null;
        this.right = null;
    }

    TreeNode(int data) {
        this.val = data;
        left = null;
        right = null;
    }
}

class Tuple {
    TreeNode node;
    int row;
    int col;

    public Tuple(TreeNode _node, int _row, int _col) {
        node = _node;
        row = _row;
        col = _col;
    }
}

public class Main {
    static TreeNode root;
    TreeNode firstIncorrectNode = null;
    TreeNode secondIncorrectNode = null;
    TreeNode prevNode = new TreeNode(Integer.MIN_VALUE);

    public void recoverTree(TreeNode root) {
        inorder(root);

        // Swap the values of the two incorrectly placed nodes
        int temp = firstIncorrectNode.val;
        firstIncorrectNode.val = secondIncorrectNode.val;
        secondIncorrectNode.val = temp;
    }

    private void inorder(TreeNode node) {
        if (node == null)
            return;

        inorder(node.left);
        if (firstIncorrectNode == null && prevNode.val >= node.val) {
            firstIncorrectNode = prevNode;
        }
        if (firstIncorrectNode != null && prevNode.val >= node.val) {
            secondIncorrectNode = node;
        }
        prevNode = node;
        inorder(node.right);
    }

    static TreeNode build(String[] s) {
        if (s[0].equals("N") || s.length == 0)
            return null;
        TreeNode root = new TreeNode(Integer.parseInt(s[0]));
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        int i = 1;
        while (!q.isEmpty() && i < s.length) {
            TreeNode curr = q.poll();
            String cval = s[i];
            if (!cval.equals("N")) {
                int h = Integer.parseInt(cval);
                curr.left = new TreeNode(h);
                q.add(curr.left);
            }
            i++;
            if (i >= s.length)
                break;
            cval = s[i];
            if (!cval.equals("N")) {
                int h = Integer.parseInt(cval);
                curr.right = new TreeNode(h);
                q.add(curr.right);
            }
            i++;
        }
        return root;
    }

    private static void printInorder(TreeNode node) {
        if (node == null)
            return;
        printInorder(node.left);
        System.out.print(node.val + " ");
        printInorder(node.right);
    }
    private static void preOrder(TreeNode node){
        if(node==null) return;
        System.out.print(node.val + " ");
        printInorder(node.left);
        printInorder(node.right);
    }
    private static void postOrder(TreeNode node){
            if(node==null) return;
            printInorder(node.left);
            printInorder(node.right);
            System.out.print(node.val + " ");
        }

    public static void main(String args[]) {
        Scanner inp = new Scanner(System.in);
        int n;
        TreeNode root = new TreeNode(-1);
        String str[] = inp.nextLine().split(" ");
        root = build(str);
        Main solution = new Main();
        solution.recoverTree(root);
        // Print the corrected BST
        System.out.println("Inorder Traversal of Recovered BST:");
        printInorder(root);

    }
}



************** Boundary Traversal of Binary Tree***************************************************************************************************************************

import java.util.*;

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    public TreeNode(int val) {
        this.val = val;
        this.left = this.right = null;
    }
}

public class Solution {
    public ArrayList<Integer> boundary(TreeNode root) {
        ArrayList<Integer> list = new ArrayList<>();
        if (root == null) {
            return list;
        }
        if (!isLeaf(root)) {
            list.add(root.val);
        }
        addLeftBoundary(root.left, list);
        addLeaf(root, list);
        addRightBoundary(root.right, list);
        return list;
    }

    private boolean isLeaf(TreeNode root) {
        return root != null && root.left == null && root.right == null;
    }

    private void addRightBoundary(TreeNode right, ArrayList<Integer> list) {
        ArrayList<Integer> rightBoundary = new ArrayList<>();
        while (right != null) {
            if (!isLeaf(right)) {
                rightBoundary.add(right.val);
            }
            if (right.right != null) {
                right = right.right;
            } else {
                right = right.left;
            }
        }
        Collections.reverse(rightBoundary);
        list.addAll(rightBoundary);
    }

    private void addLeaf(TreeNode root, ArrayList<Integer> list) {
        if (root == null) return;
        addLeaf(root.left, list);
        if (isLeaf(root)) list.add(root.val);
        addLeaf(root.right, list);
    }

    private void addLeftBoundary(TreeNode left, ArrayList<Integer> list) {
        while (left != null) {
            if (!isLeaf(left)) {
                list.add(left.val);
            }
            if (left.left != null) {
                left = left.left;
            } else {
                left = left.right;
            }
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the nodes of the binary tree separated by spaces (enter -1 for null nodes):");
        String[] nodes = scanner.nextLine().split(" ");
        TreeNode root = buildTree(nodes);
        ArrayList<Integer> result = solution.boundary(root);
        System.out.println("Boundary Traversal: " + result);
    }

    private static TreeNode buildTree(String[] nodes) {
        if (nodes == null || nodes.length == 0) {
            return null;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        TreeNode root = new TreeNode(Integer.parseInt(nodes[0]));
        queue.offer(root);
        int index = 1;
        while (!queue.isEmpty() && index < nodes.length) {
            TreeNode current = queue.poll();
            String leftValue = nodes[index++];
            if (!leftValue.equals("-1")) {
                current.left = new TreeNode(Integer.parseInt(leftValue));
                queue.offer(current.left);
            }
            if (index < nodes.length) {
                String rightValue = nodes[index++];
                if (!rightValue.equals("-1")) {
                    current.right = new TreeNode(Integer.parseInt(rightValue));
                    queue.offer(current.right);
                }
            }
        }
        return root;
    }
}


****************DIAL ALGORITHM****************************************************************************************************************************

** Input From 0:

import java.util.*;

public class Graph {
    static final int INF = Integer.MAX_VALUE;
    private int V; // No. of vertices
    // In a weighted graph, we need to store vertex
    // and weight pair for every edge
    private ArrayList<ArrayList<Tuple>> adj;

    public Graph(int v) // Constructor
    {
        this.V = v;
        this.adj = new ArrayList<ArrayList<Tuple>>();
        for (int i = 0; i < v; i++)
            this.adj.add(new ArrayList<Tuple>());
    }

    // function to Add an edge to graph
    // Adds edge between u and v of weight w
    public void AddEdge(int u, int v, int w)
    {
        adj.get(u).add(new Tuple(v, w));
        adj.get(v).add(new Tuple(u, w));
    }

    // Prints shortest paths from src to all other vertices.
    // W is the maximum weight of an edge
    public void shortestPath(int src, int W)
    {
        /* With each distance, iterator to that vertex in
            its bucket is stored so that vertex can be
            deleted in O(1) at time of updation. So
            dist[i].first = distance of ith vertex from src
            vertex dist[i].second = iterator to vertex i in
            bucket number */
        int[] dist = new int[V];

        // Initialize all distances as infinite (INF)
        Arrays.fill(dist, INF);

        // Create buckets B[].
        // B[i] keep vertex of distance label i
        ArrayList<Integer>[] B = new ArrayList[W * V + 1];
        for (int i = 0; i < W * V + 1; i++)
            B[i] = new ArrayList<Integer>();

        B[0].add(src);
        dist[src] = 0;

        int idx = 0;
        while (true) {
            // Go sequentially through buckets till one
            // non-empty bucket is found
            while (B[idx].size() == 0 && idx < W * V)
                idx++;

            // If all buckets are empty, we are done.
            if (idx == W * V)
                break;

            // Take top vertex from bucket and pop it
            int u = B[idx].get(0);
            B[idx].remove(0);

            // Process all adjacents of extracted vertex 'u'
            // and update their distances if required.
            for (Tuple i : adj.get(u)) {
                int v = i.v;
                int weight = i.w;

                int du = dist[u];
                int dv = dist[v];

                // If there is shorted path to v through u.
                if (dv > du + weight) {
                    // updating the distance
                    dist[v] = du + weight;
                    dv = dist[v];

                    // pushing vertex v into updated
                    // distance's bucket
                    B[dv].add(0, v);
                }
            }
        }

        // Print shortest distances stored in dist[]
        System.out.println("Vertex Distance from Source");
        for (int i = 0; i < V; ++i)
            System.out.println(i + "\t\t" + dist[i]);
    }

    static class Tuple {
        int v, w;
        Tuple(int v, int w)
        {
            this.v = v;
            this.w = w;
        }
    }

    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of vertices: ");
        int V = sc.nextInt();
        Graph g = new Graph(V);

        System.out.print("Enter the number of edges: ");
        int E = sc.nextInt();
        System.out.println("Enter the edges (source destination weight): ");
        for (int i = 0; i < E; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            int w = sc.nextInt();
            g.AddEdge(u, v, w);
        }

        System.out.print("Enter the source vertex: ");
        int src = sc.nextInt();

        // maximum weighted edge - 14
        g.shortestPath(src, E);
    }
}


* input from 1:

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    static final int INF = Integer.MAX_VALUE;

    private static class Tuple {
        int v, w;

        Tuple(int v, int w) {
            this.v = v;
            this.w = w;
        }
    }

    private int V;
    private ArrayList<ArrayList<Tuple>> adj;

    public Main(int v) {
        this.V = v;
        this.adj = new ArrayList<>();
        for (int i = 0; i < v; i++)
            this.adj.add(new ArrayList<>());
    }

    public void addEdge(int u, int v, int w) {
        adj.get(u).add(new Tuple(v, w));
        adj.get(v).add(new Tuple(u, w));
    }

    public void shortestPath(int src, int W) {
        int[] dist = new int[V];
        Arrays.fill(dist, INF);
        ArrayList<Integer>[] buckets = new ArrayList[W * V + 1];
        for (int i = 0; i < W * V + 1; i++)
            buckets[i] = new ArrayList<>();

        buckets[0].add(src);
        dist[src] = 0;
        int idx = 0;

        while (true) {
            while (buckets[idx].isEmpty() && idx < W * V)
                idx++;
            if (idx == W * V)
                break;

            int u = buckets[idx].get(0);
            buckets[idx].remove(0);

            for (Tuple tuple : adj.get(u)) {
                int v = tuple.v;
                int weight = tuple.w;
                int du = dist[u];
                int dv = dist[v];
                if (dv > du + weight) {
                    dist[v] = du + weight;
                    dv = dist[v];
                    buckets[dv].add(0, v);
                }
            }
        }

        System.out.println("Vertex Distance from Source");
        for (int i = 0; i < V; ++i)
            System.out.println(i+1 + "\t\t" + dist[i]);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int V = scanner.nextInt();
        Main graph = new Main(V);
        int E = scanner.nextInt();
        
        for (int i = 0; i < E; i++) {
            int start = scanner.nextInt();
            int end = scanner.nextInt();
            int weight = scanner.nextInt();
            start-=1;
            end-=1;
            graph.addEdge(start, end, weight);
        }

        graph.shortestPath(0, E);
        scanner.close();
    }
}




***************  bellmanFord ***********************************************************************************************************************************

import java.util.*;
public class bellmanFord {
	class Edge {
		int src, dest, weight;
		Edge(){
			src = dest = weight = 0;
		}
	};
	int V, E;
	Edge edge[];
	bellmanFord(int v, int e){
		V = v;
		E = e;
		edge = new Edge[e];
		for (int i = 0; i < e; ++i)
			edge[i] = new Edge();
	}
      void BellmanFord(bellmanFord graph, int src){
		int V = graph.V, E = graph.E;
		int dist[] = new int[V];
        for (int i = 0; i < V; ++i)
        dist[i] = Integer.MAX_VALUE;
    dist[src] = 0;
    for (int i = 1; i < V; ++i) {
        for (int j = 0; j < E; ++j) {
            int u = graph.edge[j].src;
            int v = graph.edge[j].dest;
            int weight = graph.edge[j].weight;
            if (dist[u] != Integer.MAX_VALUE && dist[u] + weight < dist[v])
                dist[v] = dist[u] + weight;
        }
    }
    for (int j = 0; j < E; ++j) {
        int u = graph.edge[j].src;
        int v = graph.edge[j].dest;
        int weight = graph.edge[j].weight;
        if(dist[u]!=Integer.MAX_VALUE && dist[u]+weight<dist[v]){
            System.out.println(-1);
            return;
        }
    }
    for(int i = 0; i < V; ++i)
    if(dist[i]!=Integer.MAX_VALUE)
        System.out.print(dist[i]+" ");
    else
        System.out.print(-1+" ");
}
public static void main(String[] args){
Scanner sc=new Scanner(System.in);
  int V = sc.nextInt(); 
int E = sc.nextInt(); 
bellmanFord graph = new bellmanFord(V,E);
for(int i=0;i<E;i++){
      int u=sc.nextInt();
    int v=sc.nextInt();
    int w=sc.nextInt();
    graph.edge[i].src = u;
    graph.edge[i].dest = v;
    graph.edge[i].weight = w;
}
graph.BellmanFord(graph, 0);
}
}


*************** Views of Tree **********************************************************************************************************************************

import java.util.*;
import java.util.Map.Entry;

class Node {
    int data, hd;
    Node left, right;

    public Node(int data) {
        this.data = data;
        left = right = null;
        this.hd = Integer.MAX_VALUE;
    }
}

class Main {
    static Node root;
    private List<Integer> path1 = new ArrayList<>();
    private List<Integer> path2 = new ArrayList<>();

    static Node build(String s[]) {
        if (s[0] == "N" || s.length == 0)
            return null;
        Node root = new Node(Integer.parseInt(s[0]));
        Queue<Node> q = new LinkedList<Node>();
        q.add(root);
        int i = 1;
        while (!q.isEmpty() && i < s.length) {
            Node curr = q.poll();
            String cval = s[i];
            if (!cval.equals("N")) {
                int h = Integer.parseInt(cval);
                curr.left = new Node(h);
                q.add(curr.left);
            }
            i++;
            if (i >= s.length)
                break;
            cval = s[i];
            if (!cval.equals("N")) {
                int h = Integer.parseInt(cval);
                curr.right = new Node(h);
                q.add(curr.right);
            }
            i++;
        }
        return root;
    }

    // Right View
    void rightview(Node root) {
        if (root == null)
            return;
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        while (!q.isEmpty()) {
            int n = q.size();
            for (int i = 0; i < n; i++) {
                Node curr = q.peek();
                q.remove();
                if (i == n - 1) {
                    System.out.print(curr.data + " ");
                    if (curr.left != null)
                        q.add(curr.left);
                    if (curr.right != null)
                        q.add(curr.right);
                }
            }
        }
    }

    // Left View
    void leftview(Node root) {
        if (root == null)
            return;
        Queue<Node> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int n = queue.size();
            for (int i = 1; i <= n; i++) {
                Node temp = queue.poll();
                if (i == 1)
                    System.out.print(temp.data + " ");
                if (temp.left != null)
                    queue.add(temp.left);
                if (temp.right != null)
                    queue.add(temp.right);
            }
        }
    }

    // Top View
    static class QueueObj {
        Node node;
        int hd;

        QueueObj(Node node, int hd) {
            this.node = node;
            this.hd = hd;
        }
    }

    static void topview(Node root) {
        if (root == null)
            return;
        Queue<QueueObj> q = new LinkedList<>();
        Map<Integer, Integer> map = new HashMap<>();
        int min = 0;
        int max = 0;
        q.add(new QueueObj(root, 0));
        while (!q.isEmpty()) {
            QueueObj curr = q.poll();
            if (!map.containsKey(curr.hd))
                map.put(curr.hd, curr.node.data);
            if (curr.node.left != null) {
                min = Math.min(min, curr.hd - 1);
                q.add(new QueueObj(curr.node.left, curr.hd - 1));
            }
            if (curr.node.right != null) {
                max = Math.max(max, curr.hd + 1);
                q.add(new QueueObj(curr.node.right, curr.hd + 1));
            }
        }
        for (; min <= max; min++)
            System.out.print(map.get(min) + " ");
    }

    // Bottom View
    static void bottomview(Node root) {
        if (root == null)
            return;
        int hd = 0;
        Map<Integer, Integer> map = new TreeMap<>();
        Queue<Node> queue = new LinkedList<Node>();
        root.hd = hd;
        queue.add(root);
        while (!queue.isEmpty()) {
            Node temp = queue.remove();
            hd = temp.hd;
            map.put(hd, temp.data);
            if (temp.left != null) {
                temp.left.hd = hd - 1;
                queue.add(temp.left);
            }
            if (temp.right != null) {
                temp.right.hd = hd + 1;
                queue.add(temp.right);
            }
        }
        Set<Entry<Integer, Integer>> set = map.entrySet();
        Iterator<Entry<Integer, Integer>> iterator = set.iterator();
        while (iterator.hasNext()) {
            Map.Entry<Integer, Integer> me = iterator.next();
            System.out.print(me.getValue() + " ");
        }
    }

    // main method
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int i;
        Main ob = new Main();
        String s[] = sc.nextLine().split(" ");
        root = build(s);
        ob.rightview(root);
        System.out.println();
        ob.leftview(root);
        System.out.println();
        ob.topview(root);
        System.out.println();
        ob.bottomview(root);
    }
}


**************** winner Tree ****************************************************************************************************************************

import java.util.Scanner;

public class Main {
    private int[] tree;
    private int[] players;
    private int numPlayers;

    public Main(int[] players) {
        this.players = players;
        this.numPlayers = players.length;
        int treeSize = 2 * numPlayers - 1;
        this.tree = new int[treeSize];
        buildWinnerTree();
    }

    private void buildWinnerTree() {
        for (int i = numPlayers - 1; i < tree.length; i++) {
            tree[i] = i - (numPlayers - 1);
        }
        for (int i = numPlayers - 2; i >= 0; i--) {
            int leftChild = 2 * i + 1;
            int rightChild = 2 * i + 2;
            tree[i] = players[tree[leftChild]] < players[tree[rightChild]] ? tree[leftChild] : tree[rightChild];
        }
    }

    public int getWinner() {
        return players[tree[0]]; 
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int numPlayers = scanner.nextInt();
        int[] players = new int[numPlayers];
        for (int i = 0; i < numPlayers; i++) {
            players[i] = scanner.nextInt();
        }
        scanner.close();

        Main winnerTree = new Main(players);
        System.out.println(winnerTree.getWinner());
    }
}


*************** DFS of a graph **************************************************************************************************************************

import java.util.*;

public class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> graph) {
        boolean visited[] = new boolean[V];
        ArrayList<Integer> result = new ArrayList<>();
        for (int i = 0; i < V; i++) {
            if (!visited[i]) {
                dfsUtil(graph, i, visited, result);
            }
        }
        return result;
    }

    public void dfsUtil(ArrayList<ArrayList<Integer>> graph, int curr, boolean[] visited, ArrayList<Integer> result) {
        visited[curr] = true;
        result.add(curr);

        for (int neighbor : graph.get(curr)) {
            if (!visited[neighbor]) {
                dfsUtil(graph, neighbor, visited, result);
            }
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of vertices: ");
        int V = scanner.nextInt();

        ArrayList<ArrayList<Integer>> graph = new ArrayList<>();
        for (int i = 0; i < V; i++) {
            graph.add(new ArrayList<>());
        }

        System.out.print("Enter the number of edges: ");
        int E = scanner.nextInt();
        System.out.println("Enter the edges (source destination): ");
        for (int i = 0; i < E; i++) {
            int src = scanner.nextInt();
            int dest = scanner.nextInt();
            graph.get(src).add(dest);
        }

        Solution solution = new Solution();
        ArrayList<Integer> dfsTraversal = solution.dfsOfGraph(V, graph);

        System.out.println("DFS Traversal of the graph: " + dfsTraversal);
    }
}


*************** BFS OF A GRAPH  ***************************************************************************************************************************************

import java.util.*;

public class Solution {
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> graph) {
        ArrayList<Integer> result = new ArrayList<>();
        boolean[] visited = new boolean[V];
        Queue<Integer> queue = new LinkedList<>();
        
        // Start BFS from vertex 0 (source vertex)
        queue.add(0);
        visited[0] = true;
        
        while (!queue.isEmpty()) {
            int curr = queue.poll();
            result.add(curr);
            
            // Explore neighbors of the current vertex
            for (int neighbor : graph.get(curr)) {
                if (!visited[neighbor]) {
                    visited[neighbor] = true;
                    queue.add(neighbor);
                }
            }
        }
        
        return result;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the number of vertices: ");
        int V = scanner.nextInt();
        
        ArrayList<ArrayList<Integer>> graph = new ArrayList<>();
        for (int i = 0; i < V; i++) {
            graph.add(new ArrayList<>());
        }
        
        System.out.print("Enter the number of edges: ");
        int E = scanner.nextInt();
        System.out.println("Enter the edges (source destination): ");
        for (int i = 0; i < E; i++) {
            int src = scanner.nextInt();
            int dest = scanner.nextInt();
            graph.get(src).add(dest);
        }
        
        Solution solution = new Solution();
        ArrayList<Integer> bfsTraversal = solution.bfsOfGraph(V, graph);
        
        System.out.println("BFS Traversal of the graph: " + bfsTraversal);
    }
}


*************** Topological Sort **********************************************************************************************************************************

import java.util.*;

public class Main {

    static void topologicalSortUtil(int v, List<List<Integer>> adj, boolean[] visited, Stack<Integer> stack) {
        visited[v] = true;
        for (int i : adj.get(v)) {
            if (!visited[i])
                topologicalSortUtil(i, adj, visited, stack);
        }
        stack.push(v);
    }

    static void topologicalSort(List<List<Integer>> adj, int V) {
        Stack<Integer> stack = new Stack<>();
        boolean[] visited = new boolean[V];
        for (int i = 0; i < V; i++) {
            if (!visited[i])
                topologicalSortUtil(i, adj, visited, stack);
        }
        System.out.print("Topological sorting of the graph: ");
        while (!stack.empty()) {
            System.out.print(stack.pop() + " ");
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of nodes: ");
        int V = scanner.nextInt();

        System.out.print("Enter the number of edges: ");
        int E = scanner.nextInt();

        List<List<Integer>> edges = new ArrayList<>();
        System.out.println("Enter the edges in the format (source destination): ");
        for (int i = 0; i < E; i++) {
            int source = scanner.nextInt();
            int destination = scanner.nextInt();
            edges.add(Arrays.asList(source, destination));
        }

        List<List<Integer>> adj = new ArrayList<>(V);
        for (int i = 0; i < V; i++) {
            adj.add(new ArrayList<>());
        }

        for (List<Integer> i : edges) {
            adj.get(i.get(0)).add(i.get(1));
        }

        topologicalSort(adj, V);

        scanner.close();
    }
}

************** heap sort ******************************************************************************************************************

import java.util.*;
public class heapSort {
	public static void sort(int arr[]){
		int N=arr.length;
		for(int i=N/2-1; i>=0; i--)
			heapify(arr,N,i);
		for(int i=N-1; i>0; i--) {
			int temp=arr[0];
			arr[0]=arr[i];
			arr[i]=temp;
			heapify(arr,i,0);
		}
	}
      static void heapify(int arr[], int N, int i){
		int largest=i; 
		int l=2*i+1; 
		int r=2*i+2; 
		if(l<N && arr[l]>arr[largest])
			largest=l;
		if(r<N && arr[r]>arr[largest])
			largest=r;
            if(largest!=i) {
                int swap=arr[i];
                arr[i]=arr[largest];
                arr[largest]=swap;
                heapify(arr,N,largest);
            }
        }
        public static void main(String args[]){
            Scanner s=new Scanner(System.in);
            int n=s.nextInt();
            int arr[] = new int[n];
            for(int i=0; i<n; i++)
                arr[i]=s.nextInt();
            sort(arr);
            System.out.println("Sorted array is");
            for(int i=0; i<n; i++)
                System.out.print(arr[i] + " ");
            System.out.println();
        }
    }



************************ k-ary Heap ******************************************************************************************************************

import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        int k = 3; // Replace with desired k value

        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of elements: ");
        int n = scanner.nextInt();

        System.out.print("Enter the elements: ");
        ArrayList<Integer> arr = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            arr.add(scanner.nextInt());
        }

        buildHeap(arr, k);
        System.out.println("Built Heap: ");
        for (int element : arr) {
            System.out.print(element + " ");
        }

        System.out.print("\nEnter the element to be inserted: ");
        int element = scanner.nextInt();
        insert(arr, k, element);

        System.out.println("Heap after insertion of " + element + ": ");
        for (int elementInArr : arr) {
            System.out.print(elementInArr + " ");
        }

        System.out.println("\nExtracted max is " + extractMax(arr, k));

        System.out.println("Heap after extract max: ");
        for (int elementInArr : arr) {
            System.out.print(elementInArr + " ");
        }
    }

    public static void buildHeap(ArrayList<Integer> arr, int k) {
        for (int i = (arr.size() - 1) / k; i >= 0; i--) {
            restoreDown(arr, i, k);
        }
    }

    public static void insert(ArrayList<Integer> arr, int k, int elem) {
        arr.add(elem);
        restoreUp(arr, arr.size() - 1, k);
    }

    public static int extractMax(ArrayList<Integer> arr, int k) {
        int max = arr.get(0);
        arr.set(0, arr.get(arr.size() - 1));
        restoreDown(arr, arr.size() - 1, 0); // Corrected call with only 3 arguments
        arr.remove(arr.size() - 1); // Remove the last element after extraction
        return max;
    }

    public static void restoreDown(ArrayList<Integer> arr, int index, int k) {
        int[] child = new int[k + 1];
        while (true) {
            for (int i = 1; i <= k; i++) {
                int childIndex = (k * index + i);
                child[i] = childIndex < arr.size() ? childIndex : -1;
            }
            int maxChild = -1, maxChildIndex = 0;
            for (int i = 1; i <= k; i++) { // Check any valid child
                if (child[i] != -1 && arr.get(child[i]) > maxChild) {
                    maxChildIndex = child[i];
                    maxChild = arr.get(child[i]);
                }
            }
            if (maxChild == -1) {
                break;
            }
            if (arr.get(index) < arr.get(maxChildIndex)) {
                swap(arr, index, maxChildIndex);
            }
            index = maxChildIndex;
        }
    }

    public static void restoreUp(ArrayList<Integer> arr, int index, int k) {
        int parent = (index - 1) / k;
        while (parent >= 0) {
            if (arr.get(index) > arr.get(parent)) {
                swap(arr, index, parent);
                index = parent;
                parent = (index - 1) / k;
            } else {
                break;
            }
        }
    }

    public static void swap(ArrayList<Integer> arr, int i, int j) {
        int temp = arr.get(i);
        arr.set(i, arr.get(j));
        arr.set(j, temp);
    }
}




************************ binomialHeap ************************************************************************************************************

import java.io.*;

class BinomialHeapNode {
    int key, degree;
    BinomialHeapNode parent;
    BinomialHeapNode sibling;
    BinomialHeapNode child;

    public BinomialHeapNode(int k) {

        key = k;
        degree = 0;
        parent = null;
        sibling = null;
        child = null;
    }

    public BinomialHeapNode reverse(BinomialHeapNode sibl) {
        BinomialHeapNode ret;
        if (sibling != null)
            ret = sibling.reverse(this);
        else
            ret = this;
        sibling = sibl;
        return ret;
    }

    public BinomialHeapNode findMinNode() {
        BinomialHeapNode x = this, y = this;
        int min = x.key;
        while (x != null) {
            if (x.key < min) {
                y = x;
                min = x.key;
            }

            x = x.sibling;
        }
        return y;
    }

    public BinomialHeapNode findANodeWithKey(int value) {
        BinomialHeapNode temp = this, node = null;
        while (temp != null) {
            if (temp.key == value) {
                node = temp;
                break;
            }
            if (temp.child == null)
                temp = temp.sibling;
            else {
                node = temp.child.findANodeWithKey(value);
                if (node == null)
                    temp = temp.sibling;
                else
                    break;
            }
        }
        return node;
    }

    public int getSize() {
        return (1 + ((child == null) ? 0 : child.getSize()) + ((sibling == null) ? 0 : sibling.getSize()));
    }
}

class BinomialHeap {
    private BinomialHeapNode Nodes;
    private int size;

    public BinomialHeap() {
        Nodes = null;
        size = 0;
    }

    public boolean isEmpty() {
        return Nodes == null;
    }

    public int getSize() {
        return size;
    }

    public void makeEmpty() {
        Nodes = null;
        size = 0;
    }

    public void insert(int value) {

        if (value > 0) {
            BinomialHeapNode temp = new BinomialHeapNode(value);
            if (Nodes == null) {
                Nodes = temp;
                size = 1;
            } else {
                unionNodes(temp);
                size++;
            }
        }
    }

    private void merge(BinomialHeapNode binHeap) {
        BinomialHeapNode temp1 = Nodes, temp2 = binHeap;
        while ((temp1 != null) && (temp2 != null)) {
            if (temp1.degree == temp2.degree) {
                BinomialHeapNode tmp = temp2;
                temp2 = temp2.sibling;
                tmp.sibling = temp1.sibling;
                temp1.sibling = tmp;
                temp1 = tmp.sibling;
            } else {
                if (temp1.degree < temp2.degree) {
                    if ((temp1.sibling == null) || (temp1.sibling.degree > temp2.degree)) {
                        BinomialHeapNode tmp = temp2;
                        temp2 = temp2.sibling;
                        tmp.sibling = temp1.sibling;
                        temp1.sibling = tmp;
                        temp1 = tmp.sibling;
                    } else {
                        temp1 = temp1.sibling;
                    }
                } else {
                    BinomialHeapNode tmp = temp1;
                    temp1 = temp2;
                    temp2 = temp2.sibling;
                    temp1.sibling = tmp;
                    if (tmp == Nodes) {
                        Nodes = temp1;
                    } else {
                    }
                }
            }
        }
        if (temp1 == null) {
            temp1 = Nodes;
            while (temp1.sibling != null) {
                temp1 = temp1.sibling;
            }
            temp1.sibling = temp2;
        } else {
        }
    }

    private void unionNodes(BinomialHeapNode binHeap) {
        merge(binHeap);
        BinomialHeapNode prevTemp = null, temp = Nodes,
                nextTemp = Nodes.sibling;
        while (nextTemp != null) {
            if ((temp.degree != nextTemp.degree)
                    || ((nextTemp.sibling != null) && (nextTemp.sibling.degree == temp.degree))) {
                prevTemp = temp;
                temp = nextTemp;
            } else {
                if (temp.key <= nextTemp.key) {
                    temp.sibling = nextTemp.sibling;
                    nextTemp.parent = temp;
                    nextTemp.sibling = temp.child;
                    temp.child = nextTemp;
                    temp.degree++;
                } else {
                    if (prevTemp == null) {
                        Nodes = nextTemp;
                    } else {
                        prevTemp.sibling = nextTemp;
                    }
                    temp.parent = nextTemp;

                    temp.sibling = nextTemp.child;
                    nextTemp.child = temp;
                    nextTemp.degree++;
                    temp = nextTemp;
                }
            }
            nextTemp = temp.sibling;
        }
    }

    public int findMinimum() {
        return Nodes.findMinNode().key;
    }

    public void delete(int value) {
        if ((Nodes != null) && (Nodes.findANodeWithKey(value) != null)) {
            decreaseKeyValue(value, findMinimum() - 1);
            extractMin();
        }
    }

    public void decreaseKeyValue(int old_value,
            int new_value) {
        BinomialHeapNode temp = Nodes.findANodeWithKey(old_value);
        if (temp == null)
            return;
        temp.key = new_value;
        BinomialHeapNode tempParent = temp.parent;
        while ((tempParent != null) && (temp.key < tempParent.key)) {
            int z = temp.key;
            temp.key = tempParent.key;
            tempParent.key = z;
            temp = tempParent;
            tempParent = tempParent.parent;
        }
    }

    public int extractMin() {
        if (Nodes == null)
            return -1;
        BinomialHeapNode temp = Nodes, prevTemp = null;
        BinomialHeapNode minNode = Nodes.findMinNode();
        while (temp.key != minNode.key) {
            prevTemp = temp;
            temp = temp.sibling;
        }
        if (prevTemp == null) {
            Nodes = temp.sibling;
        } else {
            prevTemp.sibling = temp.sibling;
        }
        temp = temp.child;
        BinomialHeapNode fakeNode = temp;
        while (temp != null) {
            temp.parent = null;
            temp = temp.sibling;
        }
        if ((Nodes == null) && (fakeNode == null)) {
            size = 0;
        } else {
            if ((Nodes == null) && (fakeNode != null)) {
                Nodes = fakeNode.reverse(null);
                size = Nodes.getSize();
            } else {
                if ((Nodes != null) && (fakeNode == null)) {
                    size = Nodes.getSize();
                } else {
                    unionNodes(fakeNode.reverse(null));
                    size = Nodes.getSize();
                }
            }
        }
        return minNode.key;
    }

    public void displayHeap() {
        System.out.print("\nHeap : ");
        displayHeap(Nodes);
        System.out.println("\n");
    }

    private void displayHeap(BinomialHeapNode r) {
        if (r != null) {
            displayHeap(r.child);
            System.out.print(r.key + " ");
            displayHeap(r.sibling);
        }
    }
}

public class Main {
    public static void main(String[] args) {
        BinomialHeap binHeap = new BinomialHeap();

        binHeap.insert(12);
        binHeap.insert(8);
        binHeap.insert(5);
        binHeap.insert(15);
        binHeap.insert(7);
        binHeap.insert(2);
        binHeap.insert(9);
        System.out.println("Size of the binomial heap is " + binHeap.getSize());
        binHeap.displayHeap();

        binHeap.delete(15);
        binHeap.delete(8);
        System.out.println("Size of the binomial heap is " + binHeap.getSize());
        binHeap.displayHeap();
        binHeap.makeEmpty();
        System.out.println(binHeap.isEmpty());
    }
}

**************************************************************************************************************************

									FAT

*******longest palindromic subsequence************************************************************************************


import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner s = new Scanner(System.in);
        String a = s.nextLine();
        int n = a.length();
        StringBuilder reversed = new StringBuilder(a);
        reversed.reverse();
        String b = reversed.toString();
        Integer[][] dp = new Integer[n][n];
        System.out.println(maxlcs(a,b,n-1,n-1,dp));
    }
    private static int maxlcs(String a,String b,int s,int e,Integer[][] dp){
        if(s<0 || e<0){
            return 0;
        }
        if(dp[s][e] != null){
            return dp[s][e];
        }
        if(a.charAt(s) == b.charAt(e)){
            return dp[s][e] = 1+maxlcs(a,b,s-1,e-1,dp);
        }
        else{
            return dp[s][e] = Math.max(maxlcs(a,b,s-1,e,dp),maxlcs(a,b,s,e-1,dp));
        }
    }
}
*********longest common subsequence*************************************************************************************


import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner s = new Scanner(System.in);
        String a = s.nextLine();
        String b = s.nextLine();
        int n = a.length();
        int m = b.length();
        Integer[][] dp = new Integer[n][m];
        System.out.println(maxlcs(a,b,n-1,m-1,dp));
    }
    private static int maxlcs(String a,String b,int s,int e,Integer[][] dp){
        if(s<0 || e<0){
            return 0;
        }
        if(dp[s][e] != null){
            return dp[s][e];
        }
        if(a.charAt(s) == b.charAt(e)){
            return dp[s][e] = 1+maxlcs(a,b,s-1,e-1,dp);
        }
        else{
            return dp[s][e] = Math.max(maxlcs(a,b,s-1,e,dp),maxlcs(a,b,s,e-1,dp));
        }
    }
}

**********longest increasing subsequence****************************************************************************************


import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        Integer[] nums = new Integer[n];
        for(int i = 0;i<n;i++){
            nums[i] = s.nextInt();
        }
        Integer[][] dp = new Integer[n][n];
        System.out.println(maxl(0,-1,nums,dp));
    }
    private static int maxl(int s,int prev,Integer[] nums,Integer[][] dp){
        int n = nums.length;
        if(s == n){
            return 0;
        }
        if(dp[s][prev+1] != null){
            return dp[s][prev+1];
        }
        int len = 0+maxl(s+1,prev,nums,dp);
        if(prev == -1 || nums[s]>nums[prev]){
            len = Math.max(len,1+maxl(s+1,s,nums,dp));
        }
        return dp[s][prev+1] = len;
    }
}
***********longest bitonic subsequence**********************************************************************************************************
import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        Integer[] nums = new Integer[n];
        for(int i = 0;i<n;i++){
            nums[i] = s.nextInt();
        }
        Integer[] dp1 = new Integer[n];
        Integer[] dp2 = new Integer[n];
        for(int i = 0;i<n;i++){
            dp1[i] = 1;
        }
        for(int i = 0;i<n;i++){
            dp2[i] = 1;
        }
        for(int i = 1;i<n;i++){
            for(int j = 0;j<i;j++){
                if(nums[i]>nums[j] && dp1[i]<dp1[j]+1){
                    dp1[i] = 1+dp1[j];
                }
            }
        }
        for(int i = n-2;i>=0;i--){
            for(int j = n-1;j>i;j--){
                if(nums[i]>nums[j] && dp2[i]<dp2[j]+1){
                    dp2[i] = 1+dp2[j];
                }
            }
        }
        int maxi = dp1[0]+dp2[0]-1;
        for(int i = 1;i<n;i++){
            maxi = Math.max(maxi,dp1[i]+dp2[i]-1);
        }
        System.out.println(maxi);
    }
}


**************Subset problem***************************************************************************************

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        Integer[] nums = new Integer[n];
        for (int i = 0; i < n; i++) {
            nums[i] = s.nextInt();
        }
        int t = s.nextInt();
        Boolean[][] dp = new Boolean[n][t + 1];
        if (subsetSum(n - 1, t, nums, dp)) {
            System.out.println("Yes");
        } else {
            System.out.println("No");
        }
    }

    private static boolean subsetSum(int index, int target, Integer[] nums, Boolean[][] dp) {
        if (target == 0) {
            return true;
        }
        if (index < 0) {
            return false;
        }
        if (dp[index][target] != null) {
            ret											CAT-1

Stack Permutation CODE:

---------------------------------------------------------------------------------------------------------------
import java.util.*;
class Main{
    static Boolean check(int ip[],int op[],int x){
        Stack<Integer> s = new Stack<Integer>();
        int j = 0;
        for(int i = 0;i < x;++ i){
            s.push(ip[i]);
            while(!s.isEmpty() && s.peek() == op[j]){
                s.pop();
                j ++;
            }
        }
        if(s.isEmpty()) return true;
        return false;
    }
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int input[] = new int[n];
        int output[] = new int[n];
        for(int i = 0;i < n;++ i){
            input[i] = sc.nextInt();
        }
        for(int i = 0;i < n;++ i){
            output[i] = sc.nextInt();
        }
        if(check(input,output,n)){
            System.out.println("Yes");
        }
        else{
            System.out.println("Not Possible");
        }
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------

Stock span:

import java.util.*;
class Main{
    static void cal(int arr[],int n,int s[]){
        Stack<Integer> st = new Stack<Integer>();
        st.push(0);
        s[0] = 1;
        for(int i = 1;i < n;++ i){
            while(!st.isEmpty() && arr[st.peek()] <= arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                s[i] = i + 1;
            }
            else{
                s[i] = i - st.peek();
            }
            st.push(i);
        }
    }
    static void printarray(int s[]){
        System.out.print(Arrays.toString(s));
    }
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int arr[] = new int[n];
        int s[] = new int[n];
        for(int i = 0;i < n;++ i){
            arr[i] = sc.nextInt();
        }
        cal(arr,n,s);
        printarray(s);
    }
}

-----------------------------------------------------------------------------------------------------------------------------
‎[15/05/24, 5:16:18 PM] Revanthow 🔔: ‎image omitted
[15/05/24, 8:45:32 PM] VIT Varun Reddy: Twaraga type cheyyi
[15/05/24, 8:45:37 PM] VIT Varun Reddy: @917670842771
[15/05/24, 9:11:17 PM] Sai Koushik: import java.util.Arrays;
public class MergeSort{
    public static void main(String args[]){
        int[] array={ 2,4,1,3,5};
        Arrays.sort(array);
        System.out.println("Sorted array: " + Arrays.toString(array));
    }
}
[15/05/24, 9:11:44 PM] Harshit 🐍: Endhi ra idhi em code
[15/05/24, 9:12:03 PM] VIT Varun Reddy: ee code kodtey output lo codes vastayi
[15/05/24, 9:12:14 PM] VIT Varun Reddy: nerchuko
[15/05/24, 9:12:15 PM] Harshit 🐍: 🙃
[15/05/24, 9:12:59 PM] Sai Koushik: 💀💀
‎[15/05/24, 9:17:15 PM] Harshit 🐍: ‎GIF omitted
[15/05/24, 9:23:56 PM] Harshit 🐍: https://youtu.be/Rkx2ru2q5S0?si=GZE6ygssDypwjZDY
‎[15/05/24, 9:36:33 PM] Revanthow 🔔: BSTS302P-quiz.xlsx • ‎1 sheet ‎document omitted
[15/05/24, 9:43:26 PM] Sai Koushik: import java.util.Arrays;
import java.util.Scanner;

public class MergeSort{
    public static void main(String args[]){
        int n;
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();

        int[] array = new int[n]; 
        for (int i = 0; i < n; i++) {
            array[i] = sc.nextInt();
        }
        Arrays.sort(array);
        System.out.println("Sorted array: " + Arrays.toString(array));
    }
}
[15/05/24, 10:47:19 PM] Sai Koushik: https://docs.google.com/forms/d/e/1FAIpQLScFAe1WdHRtWuPLkeMAswKw4KywiwrojevnfLM7b40zeqU1QQ/viewform?usp=send_form
‎[15/05/24, 11:30:02 PM] Revanthow 🔔: FAT.txt ‎document omitted
‎[17/05/24, 12:27:32 PM] Revanthow 🔔: Scanned Documents.pdf • ‎3 pages ‎document omitted
‎[18/05/24, 12:50:23 AM] Revanthow 🔔: ‎image omitted
‎[18/05/24, 12:50:24 AM] Revanthow 🔔: ‎image omitted
‎[18/05/24, 12:50:24 AM] Revanthow 🔔: ‎image omitted
‎[18/05/24, 12:50:24 AM] Revanthow 🔔: ‎image omitted
‎[18/05/24, 12:50:25 AM] Revanthow 🔔: ‎image omitted
‎[18/05/24, 7:17:22 AM] Revanthow 🔔: ‎image omitted
‎[18/05/24, 7:17:23 AM] Revanthow 🔔: ‎image omitted
‎[18/05/24, 7:17:23 AM] Revanthow 🔔: ‎image omitted
[18/05/24, 7:22:37 AM] Revanthow 🔔: https://youtu.be/KzJORp8bgqs?si=_QVaH98v9RbdtFET
‎[18/05/24, 7:43:21 AM] Revanthow 🔔: CHI SQUARE.pdf • ‎12 pages ‎document omitted
[18/05/24, 12:50:09 PM] Sai Koushik: See you all guys
[18/05/24, 12:50:11 PM] Sai Koushik: Bye
‎[18/05/24, 12:50:29 PM] Sai Koushik: ‎sticker omitted
[18/05/24, 12:51:14 PM] P C: na room ki vachi po
‎[18/05/24, 12:51:34 PM] Harshit 🐍: ‎sticker omitted
[18/05/24, 12:52:28 PM] Harshit 🐍: Inka 3 days undi ra punde
[18/05/24, 12:54:31 PM] Rey manideep: Sachpothunnava
[18/05/24, 6:25:37 PM] Sai Koushik: Biryani
[18/05/24, 6:29:29 PM] Sai Koushik: Biryani
[18/05/24, 6:39:33 PM] Rey manideep: Tongue Gongura Chicken
First nene cheppa naadhi consider cheyyandhi 🥲
‎[19/05/24, 11:06:46 AM] VIT Varun Reddy: ‎image omitted
‎[19/05/24, 11:06:47 AM] VIT Varun Reddy: ‎image omitted
‎[19/05/24, 11:09:00 AM] VIT Varun Reddy: ‎image omitted
[19/05/24, 11:09:00 AM] VIT Varun Reddy: Upender cheppadu 
[20/05/24, 3:06:43 AM] Rey manideep: @917670842771 @917095673698 repu ntr bday celebrations em leva ??
Like last time...
[20/05/24, 9:57:53 AM] Revanthow 🔔: Evng 5ki
[20/05/24, 11:40:06 AM] Harshit 🐍: Rey mana hod dhe mail pettandi ra
‎[20/05/24, 12:12:33 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 12:12:34 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 12:12:34 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 1:39:44 PM] Sai Koushik: ‎image omitted
[20/05/24, 2:56:55 PM] Harshit 🐍: Rey evadi faculty dhe
‎[20/05/24, 4:53:30 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 4:53:30 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 4:53:31 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 4:53:31 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 4:53:31 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 4:53:32 PM] Revanthow 🔔: ‎image omitted
‎[20/05/24, 4:53:32 PM] Revanthow 🔔: ‎image omitted
[20/05/24, 4:59:11 PM] Revanthow 🔔: Hello guys,

It's the day of *NTR*, 
We're here to invite you all students of VIT Chennai to the celebrations of 
*Man of Masses NTR's* birthday today at *NorthSquare VIT Chennai* from *5.30 PM*

We planned to celebrate this year better than last year 🕺🏻.

Hope you'll join us and make it successful.

*Jai NTR*
[20/05/24, 4:59:30 PM] Sai Koushik: Bring cake
[20/05/24, 4:59:41 PM] VIT Varun Reddy: naku tendi ra pls
[20/05/24, 4:59:48 PM] Sai Koushik: X3
[20/05/24, 4:59:56 PM] Revanthow 🔔: 🙄
[20/05/24, 5:00:07 PM] Rajshekar Reddy Vit: +1
[20/05/24, 5:00:55 PM] Revanthow 🔔: 🤣🤣🤣🤣🤣🤣🤣🤣🤣
‎[20/05/24, 5:01:37 PM] Sai Koushik: ‎sticker omitted
[20/05/24, 5:01:58 PM] Rey manideep: Nen first adiga nakkuda 😔
‎[20/05/24, 5:02:15 PM] Sai Koushik: ‎sticker omitted
[20/05/24, 5:02:39 PM] Revanthow 🔔: Oka 1/2 kg thesta saddhukuntara?
[20/05/24, 5:02:52 PM] Revanthow 🔔: Ledhante 1kg try cheyyala?
[20/05/24, 5:03:06 PM] Rey manideep: Chaaaaaluuuu
‎[20/05/24, 5:04:08 PM] Sai Koushik: ‎sticker omitted
[20/05/24, 5:07:04 PM] Harshit 🐍: 1kg tisukoni ra chalu sardhukuntam
‎[20/05/24, 5:09:59 PM] Sai Koushik: ‎sticker omitted
‎[20/05/24, 6:20:07 PM] Sai Koushik: ‎image omitted
[20/05/24, 6:21:24 PM] Harshit 🐍: Rey oka 1kg cake tisukoni randi ra
[20/05/24, 6:50:08 PM] Revanthow 🔔: 🙄
[20/05/24, 6:50:22 PM] Revanthow 🔔: Mundhey cheppalsindhi ga
[20/05/24, 6:50:24 PM] Rey manideep: Cake eeda ra @917670842771
[20/05/24, 6:50:51 PM] Revanthow 🔔: 😞
[20/05/24, 6:51:11 PM] Revanthow 🔔: Theleydhu ra ‎<This message was edited>
‎[20/05/24, 7:12:00 PM] Sai Koushik: ‎sticker omitted
‎[20/05/24, 7:12:48 PM] VIT Varun Reddy: ‎sticker omitted
[20/05/24, 7:12:57 PM] Rey manideep: Mess ki eppud pothunnar
[20/05/24, 7:13:18 PM] Rey manideep: Message kuda chusad ippudemo theliyadh antunnad dnk gaad revanth
[20/05/24, 7:13:46 PM] Sai Koushik: I dont want
[20/05/24, 7:20:12 PM] Revanthow 🔔: Didn't bring annanu ra
‎[20/05/24, 8:22:06 PM] Rey manideep: ‎image omitted
[20/05/24, 9:23:23 PM] Aasish Mitta: ‎Sarath babu added Aasish Mitta
‎[20/05/24, 9:24:26 PM] Aasish Mitta: ‎image omitted
[20/05/24, 9:25:27 PM] VIT Varun Reddy: ‎This message was deleted.
‎[20/05/24, 10:23:20 PM] P C: 21BEC1295_LAB_MANUAL[1].pdf • ‎80 pages ‎document omitted
‎[21/05/24, 12:19:03 AM] Sarath babu: ‎image omitted
‎[21/05/24, 1:13:42 AM] Revanthow 🔔: Module 4.pptx • ‎108 slides ‎document omitted
‎[21/05/24, 1:45:29 AM] Revanthow 🔔: embeded lab revanth.zip ‎document omitted
‎[21/05/24, 2:08:45 AM] Revanthow 🔔: ‎image omitted
[21/05/24, 6:50:19 PM] Revanthow 🔔: Mod 1 - Waterfall/RAD/Agile
Mod 2 - Data Reduction and Data Aggregation
Mod 3 - PCA, Regression
Mod 4 - Cloud Convergence, Data Offloading, Dynamic Resource
Mod 5 - Deep Cleaning Approaches
Mod 6 - User Centric Only (4 Layers)
Mod 7 - Steps in VE and VE Framework
‎[21/05/24, 7:26:35 PM] Revanthow 🔔: IOT theory.zip ‎document omitted
‎[22/05/24, 1:44:35 AM] Revanthow 🔔: ‎image omitted
[25/05/24, 9:42:03 AM] VIT Varun Reddy: Results vachayi!!!! Phase 1
[25/05/24, 9:42:36 AM] Harshit 🐍: Only lab ,wireless and robotics vachai
[25/05/24, 9:42:41 AM] Rey manideep: Naak okka subject eeh vachindhi
[25/05/24, 9:42:57 AM] VIT Varun Reddy: Optical kuda vachesindi maaku
‎[25/05/24, 9:44:38 AM] Sai Koushik: ‎sticker omitted
[25/05/24, 9:46:08 AM] VIT Varun Reddy: Robotics Ela ra antna fast ga
[25/05/24, 9:46:19 AM] VIT Varun Reddy: F slot exam☠️
[25/05/24, 9:46:44 AM] Rey manideep: Loose correction emo
‎[26/05/24, 3:01:42 PM] VIT Varun Reddy: ‎video omitted
[26/05/24, 3:02:07 PM] VIT Varun Reddy: @919493539291 @919391100542 
@919392799591 
@919553342726
@917670842771 
@917095673698  ‎<This message was edited>
[26/05/24, 3:03:00 PM] Rey manideep: Baane irikinchav ga nannu 
Thanksss
[26/05/24, 3:03:23 PM] VIT Varun Reddy: Nuvvey ra asalaina 9 pointer
[26/05/24, 3:03:40 PM] Rey manideep: Ha avun ra mowa nijam cheppinav
‎[26/05/24, 3:03:46 PM] Sai Koushik: ‎sticker omitted
‎[26/05/24, 3:03:54 PM] VIT Varun Reddy: ‎sticker omitted
‎[26/05/24, 3:04:08 PM] Sai Koushik: ‎sticker omitted
‎[26/05/24, 3:09:01 PM] Aasish Mitta: ‎sticker omitted
[26/05/24, 6:21:47 PM] Sarath babu: Mean while me with 4 backlogs completing
[26/05/24, 6:25:30 PM] VIT Varun Reddy: 9.3 gpa last sem laughing in the corner
[26/05/24, 6:26:05 PM] Sarath babu: *CGPA matters
[26/05/24, 6:26:14 PM] VIT Varun Reddy: Comeback matters
[26/05/24, 6:33:11 PM] Aasish Mitta: Eevarki vunnayi ra puka 4 backlogs…
[26/05/24, 6:33:20 PM] Aasish Mitta: Aani sollu kathalu
[26/05/24, 7:03:10 PM] Rey manideep: Neeku last time entha mu*da
‎[26/05/24, 7:03:25 PM] VIT Varun Reddy: ‎sticker omitted
[26/05/24, 7:03:37 PM] Rey manideep: Samad ni pikesar 🤡
[26/05/24, 9:00:12 PM] VIT Varun Reddy: Orey babuuu @917095673698 

Endi ra mari neerasam ga adtunnaru
[26/05/24, 9:01:24 PM] Rey manideep: Australian standrads ani tweet vesa chustha starc catch drop
[26/05/24, 9:11:19 PM] VIT Varun Reddy: Okasari KKR ey gelustundiii ani tweet eyyi ra chuddam ‎<This message was edited>
[26/05/24, 9:11:23 PM] VIT Varun Reddy: Just ala try cheddam
[26/05/24, 9:11:31 PM] VIT Varun Reddy: Asale World Cup vastundi
[26/05/24, 9:11:42 PM] VIT Varun Reddy: Practice cheyyali ga manam Twitter lo
[26/05/24, 9:12:56 PM] Sai Koushik: Emm mmama
[26/05/24, 9:13:03 PM] Sai Koushik: Least in final ani record anta ga
[26/05/24, 9:13:12 PM] VIT Varun Reddy: Batting first aa?
‎[26/05/24, 9:13:23 PM] Sai Koushik: ‎sticker omitted
[26/05/24, 9:13:29 PM] Sai Koushik: Em puko
[26/05/24, 9:13:28 PM] VIT Varun Reddy: Bathai lu pindesaru ga
[26/05/24, 10:05:01 PM] Rey manideep: I never do jinx FYI
[26/05/24, 10:05:25 PM] VIT Varun Reddy: Sarey
‎[26/05/24, 10:25:25 PM] Sai Koushik: ‎sticker omitted
[26/05/24, 10:26:05 PM] VIT Varun Reddy: Chetha final witness chesam kada ra
[26/05/24, 10:26:16 PM] Rey manideep: Naakendhuk goosebumps vasthunnay ra 😭😭😭
[26/05/24, 10:26:29 PM] VIT Varun Reddy: Ipdu enjoy cheyyaku ra batta
[26/05/24, 10:26:37 PM] VIT Varun Reddy: Malli edustam
[26/05/24, 10:26:47 PM] VIT Varun Reddy: Set the bar high
[26/05/24, 10:27:04 PM] VIT Varun Reddy: India ne odinchali ani koruko
[28/05/24, 11:34:02 AM] VIT Varun Reddy: https://www.instagram.com/reel/C630g_9RGKY/?igsh=amZiZjJtdmJueTNm
‎[28/05/24, 2:44:05 PM] VIT Varun Reddy: ‎video omitted
[28/05/24, 3:16:33 PM] Aasish Mitta: Ni 💀
[28/05/24, 3:16:36 PM] Aasish Mitta: Sollu ga
[28/05/24, 3:16:55 PM] Aasish Mitta: Nakante ekkuva nike ammayilu telsu ra
[28/05/24, 5:20:58 PM] VIT Varun Reddy: 🤣🤣🙏🏼🙏🏼
[28/05/24, 5:27:40 PM] Aasish Mitta: 🙂👀
[30/05/24, 9:38:15 AM] VIT Varun Reddy: Wakeup VIT nation
[30/05/24, 9:38:25 AM] VIT Varun Reddy: Edo C preparatory level complete cheyyali anta
[30/05/24, 9:39:14 AM] VIT Varun Reddy: Eeroju evening 4 last
[30/05/24, 9:42:27 AM] Aasish Mitta: these are till 2d array
‎[30/05/24, 9:42:29 AM] Aasish Mitta: Screenshot 2024-05-29 192740.png ‎document omitted
‎[30/05/24, 9:42:29 AM] Aasish Mitta: Screenshot 2024-05-29 200556.png ‎document omitted
‎[30/05/24, 9:42:29 AM] Aasish Mitta: Screenshot 2024-05-29 192731.png ‎document omitted
[30/05/24, 9:43:05 AM] VIT Varun Reddy: Areyy
[30/05/24, 9:43:12 AM] VIT Varun Reddy: Neeku epdu telsu ra idi
[30/05/24, 9:43:21 AM] Aasish Mitta: Ninna ngt
[30/05/24, 9:43:31 AM] Aasish Mitta: Eevala answers ragane send chedham aani vunna
[30/05/24, 9:43:38 AM] Aasish Mitta: Aavi na answers kadu anna
[30/05/24, 9:43:42 AM] Aasish Mitta: GRP lo vachayi
[30/05/24, 9:43:42 AM] VIT Varun Reddy: Type cheyyala ipdu
[30/05/24, 9:43:45 AM] VIT Varun Reddy: 🙂🙏🏼
[30/05/24, 9:43:56 AM] Aasish Mitta: Mari lekunte em chedham aani
[30/05/24, 9:44:02 AM] VIT Varun Reddy: Copy paste
[30/05/24, 9:44:29 AM] Aasish Mitta: Neopat portal bayatiki vastunda emaina
[30/05/24, 9:44:50 AM] VIT Varun Reddy: Telidu
[30/05/24, 9:44:54 AM] VIT Varun Reddy: Inka open cheyyaledu
[30/05/24, 9:45:05 AM] Aasish Mitta: Arey chala vunnayi
[30/05/24, 9:45:07 AM] Aasish Mitta: Inka
[30/05/24, 9:45:16 AM] Aasish Mitta: Nenu raasi pamputha aavi
‎[30/05/24, 9:45:50 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:50 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:51 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:51 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:52 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:52 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:53 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:53 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:54 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:54 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:55 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:55 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:56 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:56 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:57 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:57 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:58 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:58 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:59 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:45:59 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:00 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:00 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:01 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:01 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:02 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:03 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:03 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:03 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:04 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:04 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:17 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:18 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:18 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:19 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:20 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:20 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:21 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:21 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:21 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:22 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:22 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:23 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:24 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:24 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:25 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:25 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:25 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:26 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:27 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:27 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:28 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:28 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:29 AM] Aasish Mitta: ‎image omitted
‎[30/05/24, 9:46:30 AM] Aasish Mitta: ‎image omitted
[30/05/24, 9:51:03 AM] P C: ekad raa
[30/05/24, 9:51:14 AM] VIT Varun Reddy: Neopat
[30/05/24, 9:52:47 AM] P C: hmm
[30/05/24, 9:58:54 AM] Sai Koushik: C nduku ra manaki 💀
[30/05/24, 9:59:06 AM] Sai Koushik: @919391100542
[30/05/24, 10:07:50 AM] Rajshekar Reddy Vit: Rey varun copy paste avthunda?
[30/05/24, 10:07:59 AM] VIT Varun Reddy: Avvatledu
[30/05/24, 10:08:04 AM] VIT Varun Reddy: Kaani chudali
[30/05/24, 10:08:12 AM] Rajshekar Reddy Vit: extensions add cheyi
[30/05/24, 10:08:15 AM] Rajshekar Reddy Vit: oksari
[30/05/24, 10:08:29 AM] VIT Varun Reddy: Tab switch counts chupistundi
[30/05/24, 10:08:47 AM] Rajshekar Reddy Vit: ippudu emi chestav
[30/05/24, 10:43:34 AM] VIT Varun Reddy: ‎This message was deleted.
[30/05/24, 11:15:18 AM] VIT Varun Reddy: ‎This message was deleted.
[30/05/24, 11:15:29 AM] VIT Varun Reddy: Rey calm down
[30/05/24, 11:15:30 AM] VIT Varun Reddy: Deadline maarcharu
[30/05/24, 11:21:15 AM] Aasish Mitta: Eppatiki pettaru?
[30/05/24, 11:21:27 AM] VIT Varun Reddy: Next year 31st May
[30/05/24, 11:21:38 AM] VIT Varun Reddy: Kaani July 6th lopala complete cheseyyali
[30/05/24, 11:22:42 AM] Aasish Mitta: Haa
[30/05/24, 11:22:52 AM] VIT Varun Reddy: Twaraga complete chesey ra mitta
[30/05/24, 11:23:00 AM] VIT Varun Reddy: Nee meeda memantha aadharapaddam
[30/05/24, 11:23:05 AM] Aasish Mitta: GRP lo vasthe pedtha😂
[30/05/24, 11:23:14 AM] Aasish Mitta: Nakem radhu anna🤡
[30/05/24, 12:06:02 PM] Rey manideep: Sure ga 
Malli July 5 gurthuchey aythe..
[30/05/24, 12:11:27 PM] Aasish Mitta: 🤡
[30/05/24, 12:13:57 PM] VIT Varun Reddy: Nee lanti toppers ki gurtucheyyalsina avasaram ledu
[30/05/24, 12:14:20 PM] Aasish Mitta: 🤡niku pichi Baga mudiri poyindi ra sodara
[30/05/24, 12:21:50 PM] Rey manideep: Offline lo gattiga crct ga 8.5 raale naak eppudu 
Rendu sem lu varusuga 9.2 lu kottav nuvv nann antunnav
[30/05/24, 12:22:08 PM] VIT Varun Reddy: Okka sem ey ra😭😭
[30/05/24, 12:22:13 PM] VIT Varun Reddy: Porapatuna
[30/05/24, 12:23:11 PM] Rey manideep: Porapatuna 9.2 naak eppudu raaledhu
[30/05/24, 12:40:58 PM] VIT Varun Reddy: Neeku first 2 sems 9
[30/05/24, 12:41:08 PM] VIT Varun Reddy: 3rd sem 4th sem kuda baaney vachayi
[30/05/24, 12:41:27 PM] VIT Varun Reddy: 5th sem okkatey Edo konchem taggindi
[30/05/24, 12:48:18 PM] Rey manideep: Ho avuna 8.44 naak 2nd sem
[30/05/24, 12:48:48 PM] Rey manideep: Cheppu 6th sem kuda baane vachay ani
[04/06/24, 9:00:45 AM] VIT Varun Reddy: 4.3k majority antaga Pawan Kalyan ki first round lo
[04/06/24, 9:00:57 AM] Rey manideep: 10k lo 4.3) majority
‎[04/06/24, 9:01:44 AM] Sai Koushik: ‎sticker omitted
[04/06/24, 9:04:31 AM] Aasish Mitta: 🔥
[04/06/24, 9:04:46 AM] Rey manideep: 2 rounds
[04/06/24, 9:05:07 AM] VIT Varun Reddy: Central lo Congress parledu
[04/06/24, 9:05:38 AM] Rey manideep: 🤡😭🤣
[04/06/24, 9:06:03 AM] VIT Varun Reddy: 183 antey
[04/06/24, 9:06:07 AM] VIT Varun Reddy: Parledu le
[04/06/24, 9:06:23 AM] Rey manideep: Tv9 annnaawww
[04/06/24, 9:06:33 AM] VIT Varun Reddy: Ntv
[04/06/24, 9:23:48 AM] Rey manideep: Sakshi lo Jagan pramana sweekaram chesela vunnad ga 😭
[04/06/24, 9:35:08 AM] Harshit 🐍: 🚲🚲
[04/06/24, 9:37:14 AM] Rey manideep: Nuvv happy eeh ga
[04/06/24, 9:37:40 AM] Harshit 🐍: Eyy nuvu kaadha
[04/06/24, 9:38:08 AM] Rey manideep: 11 ki inthe vunte....
[04/06/24, 9:41:30 AM] Rey manideep: Kadapa 4000 lead whats happening anna @917036605453
[04/06/24, 9:50:07 AM] VIT Varun Reddy: Daarunam
[04/06/24, 9:50:20 AM] VIT Varun Reddy: Vizag TDP clean sweep
[04/06/24, 10:05:39 AM] Rey manideep: Last time eeh konni gelichar akkada
[04/06/24, 10:06:06 AM] VIT Varun Reddy: Naako doubt
[04/06/24, 10:06:31 AM] VIT Varun Reddy: TDP ki emo single party majority kuda vachindi
[04/06/24, 10:06:42 AM] VIT Varun Reddy: Malli CBN 2014 lo laga chestey
[04/06/24, 10:08:45 AM] Rajshekar Reddy Vit: Women ki bus free anta
[04/06/24, 10:09:48 AM] Rajshekar Reddy Vit: Adi Munde failure model
[04/06/24, 10:09:58 AM] Rajshekar Reddy Vit: Adi Implement chestadu anta
[04/06/24, 10:10:12 AM] Rajshekar Reddy Vit: Ide na visionary leader
[04/06/24, 10:10:26 AM] Rajshekar Reddy Vit: Anta
[04/06/24, 10:11:52 AM] VIT Varun Reddy: Anni pathakalu first 1 year ey
[04/06/24, 10:11:57 AM] VIT Varun Reddy: Malli Anni taggipotayi
[04/06/24, 10:12:03 AM] VIT Varun Reddy: Epdu jarigede ga
[04/06/24, 10:12:15 AM] VIT Varun Reddy: Malli last 6 months
[04/06/24, 10:12:24 AM] VIT Varun Reddy: First PK ni tokkestadu
[04/06/24, 10:12:49 AM] VIT Varun Reddy: Endukantey 2 years lo Lokesh ni CM cheyyali ga
[04/06/24, 10:13:10 AM] Rajshekar Reddy Vit: Pawan deputy cm avathada?
[04/06/24, 10:13:21 AM] VIT Varun Reddy: Deputy ayina ....home ayina
[04/06/24, 10:13:36 AM] Rey manideep: Alane ga chesedhi thelsindhe
[04/06/24, 10:14:51 AM] Rey manideep: Cheppali kadapa evaryna alane cheppali raavalante 
Women lo ycp edge vuntadhi ilantvi chepthe change emanna vuntadhemo ani..
[04/06/24, 10:15:16 AM] Rajshekar Reddy Vit: Ok
[04/06/24, 10:15:46 AM] VIT Varun Reddy: Sarey eeroju enjoy chesi
Repatnunchi wc duty ki vachey
[04/06/24, 10:16:19 AM] Rey manideep: Gelichedhi manamew
[05/06/24, 11:55:31 AM] Sai Koushik: ‎You deleted this message.
[12/06/24, 7:57:17 AM] Rajshekar Reddy Vit: Grades vachayi
‎[12/06/24, 10:50:46 AM] Sai Koushik: ‎sticker omitted
[12/06/24, 10:51:23 AM] Aasish Mitta: 9 pointer eh ga…🌚
[12/06/24, 10:56:40 AM] Rajshekar Reddy Vit: Avunu mawa
[12/06/24, 10:56:49 AM] Aasish Mitta: Gpa entha??
[12/06/24, 10:57:26 AM] Rajshekar Reddy Vit: 9.13
[12/06/24, 10:57:33 AM] Aasish Mitta: Ewww
[12/06/24, 10:57:42 AM] Aasish Mitta: CGPA 9 vastunda mari?
[12/06/24, 10:57:46 AM] VIT Varun Reddy: Raadu
[12/06/24, 10:57:51 AM] Rajshekar Reddy Vit: Ledu
[12/06/24, 10:57:54 AM] Aasish Mitta: Papam ra💀
[12/06/24, 10:57:57 AM] Aasish Mitta: Entha mari?
[12/06/24, 10:58:06 AM] Rajshekar Reddy Vit: 8.86
[12/06/24, 10:58:21 AM] Aasish Mitta: Same le mowa🫂
[12/06/24, 10:58:27 AM] VIT Varun Reddy: Vaadu first rendu sems interest ga sadivi untey

Eepatiki 9.3+ undedi cgpa
[12/06/24, 10:58:30 AM] VIT Varun Reddy: I'm telling that
[12/06/24, 10:58:45 AM] VIT Varun Reddy: Nuvvu ra paapam
[12/06/24, 10:59:08 AM] Aasish Mitta: 😭😭😭😭literally brooo 7.5 credits one mark tho grades poyayi
‎[25/06/24, 11:41:28 AM] Aasish Mitta: ‎image omitted
[25/06/24, 11:41:47 AM] Aasish Mitta: Register this if registering for NPTEL
[25/06/24, 11:43:18 AM] VIT Varun Reddy: S vastunda?
[25/06/24, 11:43:52 AM] Rey manideep: rendu nptel lu cheyyocha?
[25/06/24, 11:43:58 AM] Aasish Mitta: Ledu
[25/06/24, 11:44:12 AM] Aasish Mitta: Max Nenu last time same fac for forest and management so high chances
[25/06/24, 1:07:29 PM] VIT Varun Reddy: rey mitta
[25/06/24, 1:07:37 PM] VIT Varun Reddy: aa courses complete chesava
[25/06/24, 1:07:48 PM] VIT Varun Reddy: codes avi
[25/06/24, 1:08:01 PM] Aasish Mitta: Led ra
[25/06/24, 1:08:16 PM] VIT Varun Reddy: codes raastey code text pettu
[25/06/24, 1:08:22 PM] VIT Varun Reddy: photo lu vaddu
[25/06/24, 1:08:29 PM] VIT Varun Reddy: copy paste ki veeluga
[25/06/24, 1:08:48 PM] Aasish Mitta: GRP lo aalane vastunayi aalane pedtuna
[26/06/24, 11:18:35 AM] VIT Varun Reddy: Good afternoon guy's regarding the total credits.
[26/06/24, 11:18:36 AM] VIT Varun Reddy: "pjt is not DE.  you can take excess DE then it will count for OE. you can see in registration course option regular (DE as OE )" - this is what sir said .
[26/06/24, 11:48:42 AM] Rey manideep: Pjt open elective 
Nptel 2 times cheyyochu
[26/06/24, 11:53:15 AM] VIT Varun Reddy: Open lo naaku inka 2 credits ey left
[26/06/24, 12:11:00 PM] Rey manideep: 2 creds dhi cheyy nptel
[26/06/24, 12:11:13 PM] Rey manideep: 2 nptels ayyaya ??
[26/06/24, 12:12:00 PM] VIT Varun Reddy: Edokati cheddam ley
[26/06/24, 12:12:13 PM] VIT Varun Reddy: First ayithe tfi and ICT bagundali
[26/06/24, 12:12:55 PM] Rey manideep: Big day tomorrow 
Intlo emo edho gudi plan chesar cinema ani adigthe thittar ‎<This message was edited>
[26/06/24, 12:16:47 PM] VIT Varun Reddy: All the best
[26/06/24, 1:22:59 PM] VIT Varun Reddy: Dear 21batch students, During mock registration, register for Project-I course. it is mandatory. Form a team with a maximum size of 3 members. Identify the guide. Discuss with your guide and give tentative title for registration.
[26/06/24, 1:43:33 PM] Sai Koushik: Thaffak
[27/06/24, 12:38:11 PM] P C: ee sari mik ee subjects unai
‎[28/06/24, 6:28:02 PM] Aasish Mitta: cpp.txt ‎document omitted
[01/07/24, 9:41:03 AM] Rey manideep: Dbms mcq lu vunnaya
‎[01/07/24, 11:20:20 AM] P C: ‎video omitted
[01/07/24, 11:20:28 AM] P C: always active tab inka dontfk with paste enable cheskoni pettukondi ‎<This message was edited>
[01/07/24, 11:24:25 AM] Rey manideep: Once view pedthe etla gurthuntadhi voii 🐥
[01/07/24, 11:25:05 AM] P C: na per undii
[01/07/24, 11:36:18 AM] VIT Varun Reddy: Antey ipdu ninnu jail lo dengutara
[01/07/24, 11:36:52 AM] P C: manam enta erri p aina byta teliykunda undali
[01/07/24, 11:41:01 AM] Sai Koushik: Mama codlu unnaya ankunta lada??
[01/07/24, 11:41:06 AM] Sai Koushik: Ivi kaada
[01/07/24, 11:41:21 AM] Aasish Mitta: Cpp codes aave
[01/07/24, 11:41:39 AM] P C: paste cheyadaniki
[01/07/24, 11:41:51 AM] Sai Koushik: Okay
[02/07/24, 10:21:59 AM] Aasish Mitta: 1. Prep course_Number System_Level 1
[02/07/24, 10:21:59 AM] Aasish Mitta: 2. Prep course_Number System_Level 2
[02/07/24, 10:22:00 AM] Aasish Mitta: 3. Prep course_Number System_Level 3
‎[02/07/24, 10:22:00 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:00 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:01 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:01 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:01 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:02 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:02 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:02 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:03 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:03 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:03 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:04 AM] Aasish Mitta: 1. Prep course_Percentages_SI and CI_Level 1
‎[02/07/24, 10:22:04 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:04 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:05 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:05 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:05 AM] Aasish Mitta: 2. Prep course_Percentages_SI and CI_Level 2
‎[02/07/24, 10:22:06 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:06 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:06 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:07 AM] Aasish Mitta: 3. Prep course_Percentages_SI and CI_Level 3
‎[02/07/24, 10:22:07 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:07 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:08 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:08 AM] Aasish Mitta: 1. Prep course_Time and Work_Level 1
‎[02/07/24, 10:22:08 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:09 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:23 AM] Aasish Mitta: 2. Prep course_Time and Work_Level 2
[02/07/24, 10:22:24 AM] Aasish Mitta: 3. Prep course_Time and Work_Level 3
‎[02/07/24, 10:22:24 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:24 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:25 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:25 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:25 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:26 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:26 AM] Aasish Mitta: 1. Prep course_Time Speed and Distance_Level 1
‎[02/07/24, 10:22:26 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:27 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:27 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:27 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:28 AM] Aasish Mitta: 2. Prep course_Time Speed and Distance_Level 2
‎[02/07/24, 10:22:28 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:28 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:28 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:29 AM] Aasish Mitta: 3. Prep course_Time Speed and Distance_Level 3
‎[02/07/24, 10:22:29 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:29 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:30 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:30 AM] Aasish Mitta: 1. Prep course_Profit and Loss_Level 1
‎[02/07/24, 10:22:30 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:31 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:31 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:31 AM] Aasish Mitta: 2. Prep course_Profit and Loss_Level 2
‎[02/07/24, 10:22:32 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:32 AM] Aasish Mitta: ‎image omitted
‎[02/07/24, 10:22:32 AM] Aasish Mitta: ‎image omitted
[02/07/24, 10:22:33 AM] Aasish Mitta: 3. Prep course_Profit and Loss_Level 3
[02/07/24, 10:22:34 AM] Aasish Mitta: Aptitude
[03/07/24, 10:25:21 PM] VIT Varun Reddy: BXXX497J - Project 1 offered for final year students may be done individually / as a group of max. 3 members. Group may comprise of interdisciplinary students and faculty mentor across schools.

All students ( forming a group) should register individually under the same faculty and specify same title. 


Course Substitution option DE under CBCS curriculum will be enabled during Add/Drop only.
‎[03/07/24, 10:26:00 PM] VIT Varun Reddy: ‎video omitted
[03/07/24, 10:26:17 PM] Aasish Mitta: 🤣😂
[03/07/24, 10:26:36 PM] VIT Varun Reddy: Evaraina punyatmulu cheppandra
[03/07/24, 10:26:44 PM] Aasish Mitta: Em cheppali
[03/07/24, 10:26:53 PM] VIT Varun Reddy: Deenni cheppandi
[03/07/24, 10:27:04 PM] VIT Varun Reddy: Course substitution endira🥲
[03/07/24, 10:27:13 PM] Aasish Mitta: Adhi eemo abba no idea
‎[03/07/24, 10:27:24 PM] VIT Varun Reddy: ‎sticker omitted
‎[03/07/24, 10:27:33 PM] Aasish Mitta: ‎sticker omitted
[09/07/24, 10:14:25 AM] Aasish Mitta: https://docs.google.com/forms/d/e/1FAIpQLSevagq-m3XZMH3hOqvicyLJLTo0a-HlLIfSzZn5P677A8jbXQ/viewform
[09/07/24, 10:15:50 AM] VIT Varun Reddy: Wildlife pettacha
[09/07/24, 10:17:58 AM] Aasish Mitta: Haa source code 575
[12/07/24, 4:32:52 PM] Sai Koushik: https://docs.google.com/forms/d/e/1FAIpQLSfwIJvMC5q-jbjM2AA0__KtJnz1xZr-xtI-VmbJOMr6ziOWqQ/viewform
[18/07/24, 3:19:38 PM] Sai Koushik: Tongue
[18/07/24, 4:48:30 PM] VIT Varun Reddy: rey order pettandi ‎<This message was edited>
[18/07/24, 4:49:10 PM] Aasish Mitta: Em ni bday party ah?
[18/07/24, 4:49:31 PM] VIT Varun Reddy: puk muskoni em kavalo cheppu
[18/07/24, 4:49:44 PM] Aasish Mitta: Adhe nuv bill kadtha ante cheptha
[18/07/24, 4:50:09 PM] VIT Varun Reddy: ninna katta ga bill🫣🫣
[18/07/24, 4:50:13 PM] VIT Varun Reddy: ade party
‎[18/07/24, 4:50:24 PM] Aasish Mitta: ‎sticker omitted
[18/07/24, 4:50:31 PM] Aasish Mitta: Ni puk pack ehh
[18/07/24, 4:50:43 PM] VIT Varun Reddy: sarle tintava tinaav?
[18/07/24, 4:50:51 PM] VIT Varun Reddy: tinava*
[18/07/24, 4:50:56 PM] Aasish Mitta: ….
[18/07/24, 4:51:05 PM] VIT Varun Reddy: no money honey
[18/07/24, 4:51:15 PM] Aasish Mitta: Same🙂😂🤣
[18/07/24, 4:51:33 PM] VIT Varun Reddy: naa biryani varaku unnayi naa dagra
[18/07/24, 4:51:45 PM] Aasish Mitta: Nak Vadhu le ra
[18/07/24, 4:51:54 PM] Aasish Mitta: Nenu monnane tinna
[18/07/24, 4:51:59 PM] VIT Varun Reddy: okie
[18/07/24, 4:52:10 PM] Aasish Mitta: Haa
[18/07/24, 5:45:26 PM] Sai Koushik: Tongue
‎[20/07/24, 5:53:35 PM] Aasish Mitta: Week-1 Assignment-1.pdf • ‎5 pages ‎document omitted
[20/07/24, 6:34:01 PM] Harshit 🐍: Entidhi  ra idhi
[20/07/24, 6:43:53 PM] Aasish Mitta: NPTEL week-1
‎[02/08/24, 1:40:34 PM] VIT Varun Reddy: ‎image omitted
‎[02/08/24, 1:40:35 PM] VIT Varun Reddy: ‎video omitted
[02/08/24, 1:40:39 PM] VIT Varun Reddy: C block lo fire accident anta
[02/08/24, 1:40:51 PM] VIT Varun Reddy: Jara kanukkoni cheppandi bhais exact ga emaindoo
[02/08/24, 1:41:17 PM] Sai Koushik: Bindu
[02/08/24, 1:41:48 PM] VIT Varun Reddy: Adiga
[02/08/24, 1:41:58 PM] P C: 10th floor anta....girls side anukunta
[02/08/24, 1:42:06 PM] VIT Varun Reddy: Haa
[02/08/24, 1:42:15 PM] VIT Varun Reddy: Evaroo pilla maggi chesukuntey ayyindi anta fire accident
[02/08/24, 1:42:18 PM] VIT Varun Reddy: Short circuit anta
[02/08/24, 1:43:28 PM] Harshit 🐍: Kutha chekestaru le inka ah pillani
[02/08/24, 1:43:59 PM] VIT Varun Reddy: Assal first antha fire accident jarigitey
[02/08/24, 1:44:10 PM] VIT Varun Reddy: Manushulaki emaina ayyinda
[02/08/24, 1:44:13 PM] VIT Varun Reddy: Avvakapothey happy
[02/08/24, 1:44:17 PM] VIT Varun Reddy: Taravata chekkeyochu
[02/08/24, 1:46:14 PM] Harshit 🐍: Em aiundadhu le ra , prathi floor ke fire water sprinklers unnai ga avi on aithai
[02/08/24, 1:46:37 PM] VIT Varun Reddy: Mm
[02/08/24, 1:47:15 PM] Harshit 🐍: Ah Maggie chesina pillaki edhia ai undachu
[02/08/24, 1:47:35 PM] VIT Varun Reddy: Mm chuddam
[02/08/24, 1:47:44 PM] VIT Varun Reddy: Elagoo news ranivvaru ga mana daka
[02/08/24, 2:07:39 PM] Sarath babu: Women
[02/08/24, 2:08:43 PM] VIT Varun Reddy: ☕☕
[02/08/24, 2:10:00 PM] Sarath babu: Cricket repu
[02/08/24, 2:16:12 PM] VIT Varun Reddy: Arey
[02/08/24, 2:16:22 PM] VIT Varun Reddy: Bhuvan valla room ki poii adugu ra okasari
[02/08/24, 2:16:27 PM] VIT Varun Reddy: Repu rammani
[02/08/24, 2:16:51 PM] Sarath babu: Nenu vellaka adugutha 2:50 ki ala
[02/08/24, 2:17:22 PM] Sarath babu: Em antaro chudham
[02/08/24, 2:17:46 PM] VIT Varun Reddy: Piluvu
[02/08/24, 2:17:46 PM] Rey manideep: Ha adigi cheppu
[03/08/24, 11:24:25 AM] Sai Koushik: https://maps.app.goo.gl/gT6LSVwafhFn7XvC9?g_st=iw
[03/08/24, 11:59:50 AM] Sai Koushik: ‎Location: https://maps.google.com/?q=12.794916,80.241196
[03/08/24, 12:02:54 PM] Rajshekar Reddy Vit: ‎Location: https://maps.google.com/?q=12.754079,80.205780
[03/08/24, 12:10:53 PM] Harshit 🐍: ‎This message was deleted.
[03/08/24, 12:11:37 PM] Harshit 🐍: ‎This message was deleted.
[03/08/24, 2:14:22 PM] Rey manideep: Location
[03/08/24, 2:15:49 PM] Sai Koushik: Maa curries
[03/08/24, 2:24:00 PM] Harshit 🐍: https://maps.app.goo.gl/3tc7KeVomXhzoy7s8
[03/08/24, 2:24:06 PM] Harshit 🐍: Idhe na ??
[03/08/24, 2:36:50 PM] Harshit 🐍: https://maps.app.goo.gl/Ub7AGDXLujaumgEU9
[03/08/24, 2:36:55 PM] Harshit 🐍: Foodholic
‎[05/08/24, 9:46:01 AM] Sai Koushik: ‎image omitted
[05/08/24, 9:46:24 AM] Sai Koushik: Chepandayya endi idi
[05/08/24, 9:46:28 AM] VIT Varun Reddy: Orey puka
[05/08/24, 9:46:36 AM] VIT Varun Reddy: Monna naaku dm petti adigav ga
[05/08/24, 9:46:41 AM] VIT Varun Reddy: Ade idi😭😭
[05/08/24, 9:46:43 AM] Sai Koushik: Malla adena
[05/08/24, 9:46:57 AM] VIT Varun Reddy: Club ayya
[05/08/24, 9:47:03 AM] VIT Varun Reddy: Nuvvu pass kuda ayipoyav ayya
[05/08/24, 9:47:06 AM] VIT Varun Reddy: 🙏🏼
[05/08/24, 9:47:40 AM] Sai Koushik: Okay babi
[05/08/24, 8:30:25 PM] Rajshekar Reddy Vit: rey,nptel week-2 solutions pettandi
[05/08/24, 8:44:14 PM] VIT Varun Reddy: Week 1 deadline ey 7th aug
[05/08/24, 8:44:18 PM] VIT Varun Reddy: Week 2 ki time undi ley
[05/08/24, 8:55:36 PM] Aasish Mitta: Same for week-2
[05/08/24, 8:55:51 PM] VIT Varun Reddy: Nee yabba mari answers pettu bey
‎[05/08/24, 9:10:01 PM] Aasish Mitta: noc19_bt09_Assignment3.pdf • ‎3 pages ‎document omitted
[05/08/24, 9:35:47 PM] Harshit 🐍: 3rd dhe answer kanipichatle
[05/08/24, 9:35:58 PM] Aasish Mitta: Stable
‎[05/08/24, 9:41:13 PM] Aasish Mitta: Week-3 Assignment-3.pdf • ‎5 pages ‎document omitted
[05/08/24, 10:26:00 PM] Rey manideep: Week 1 🥲🫴
[05/08/24, 10:26:28 PM] VIT Varun Reddy: ...
[15/08/24, 9:50:15 PM] Sai Koushik: Functions la pillala ki aadpiyyanikke games anta

Ideas iyyandi plj 😔
[15/08/24, 9:53:04 PM] Rey manideep: Mummy Daddy ‎<This message was edited>
‎[15/08/24, 9:53:27 PM] Sai Koushik: ‎sticker omitted
[15/08/24, 10:47:13 PM] Harshit 🐍: Vongullu dukullu
‎[15/08/24, 10:57:16 PM] Sai Koushik: ‎image omitted
‎[15/08/24, 10:57:37 PM] Harshit 🐍: ‎sticker omitted
‎[18/08/24, 7:04:41 PM] VIT Varun Reddy: ‎image omitted
‎[18/08/24, 8:32:24 PM] Sai Koushik: ‎sticker omitted
‎[18/08/24, 8:33:10 PM] Rey manideep: ‎sticker omitted
[21/08/24, 4:14:21 PM] Harshit 🐍: Nptel Week4
‎[27/08/24, 10:04:26 PM] VIT Varun Reddy: Week-6 Assignment-6.pdf • ‎5 pages ‎document omitted
[27/08/24, 10:22:13 PM] Sai Koushik: Ideppudundi
[27/08/24, 10:23:12 PM] VIT Varun Reddy: Tmrw
[27/08/24, 10:23:15 PM] VIT Varun Reddy: Next week
[28/08/24, 8:47:26 PM] Sai Koushik: https://forms.gle/cScdb2tdizeo9YweA
[28/08/24, 8:47:35 PM] Sai Koushik: Fill anta guys, free unte
[29/08/24, 1:24:53 AM] Rey manideep: Inni cheppaka kuda ninna egadenga
[29/08/24, 1:36:59 AM] VIT Varun Reddy: 🥲
[29/08/24, 1:37:09 AM] VIT Varun Reddy: Gabbar Singh tickets teesukunnava?
[29/08/24, 1:49:48 AM] Rey manideep: rep vasthay 🥀
[29/08/24, 1:50:15 AM] VIT Varun Reddy: Rep povalna nenu SRM ki?
[29/08/24, 1:50:22 AM] Rey manideep: avasaram le
[29/08/24, 1:50:30 AM] VIT Varun Reddy: Nuvvu teesukunnava?
[29/08/24, 1:51:24 AM] Rey manideep: ledh vasthay
[29/08/24, 2:10:56 AM] VIT Varun Reddy: Ok
‎[01/09/24, 9:33:16 PM] P C: Week-7 Assignment-7.pdf • ‎7 pages ‎document omitted
[01/09/24, 9:33:27 PM] Sai Koushik: Eppud ra
[01/09/24, 9:33:38 PM] P C: ?
[01/09/24, 9:33:42 PM] VIT Varun Reddy: Next week
[01/09/24, 9:36:51 PM] P C: tym undi
[01/09/24, 9:36:58 PM] P C: dorikindi petta ante
[01/09/24, 10:46:13 PM] Rey manideep: https://x.com/ItzRCCult/status/1830265218083221602  tomm @917036605453 @919493539291
‎[01/09/24, 10:47:51 PM] VIT Varun Reddy: ‎image omitted
[01/09/24, 10:48:21 PM] VIT Varun Reddy: Rey aa tickets Ila photo pettu story esukunta
[01/09/24, 10:48:24 PM] VIT Varun Reddy: @919392799591
[01/09/24, 10:49:27 PM] Rey manideep: story mention cheyna?
[01/09/24, 10:49:36 PM] VIT Varun Reddy: Nenu pedta ivvu story
‎[01/09/24, 10:51:08 PM] Rey manideep: ‎image omitted
[01/09/24, 10:51:16 PM] VIT Varun Reddy: HD lo pettu bhai
[04/09/24, 10:38:29 PM] Sai Koushik: Notel today??
[04/09/24, 10:38:46 PM] VIT Varun Reddy: Idi cheyyi
[04/09/24, 10:38:54 PM] Sai Koushik: Adi aipaye
[04/09/24, 10:38:56 PM] Sai Koushik: 7?
[04/09/24, 10:39:04 PM] VIT Varun Reddy: Adi next week deadline
[07/09/24, 11:28:57 PM] Sai Koushik: Rep poddugala
[07/09/24, 11:29:04 PM] Sai Koushik: Formals ah
[07/09/24, 11:29:07 PM] VIT Varun Reddy: Haa
[07/09/24, 11:29:12 PM] Sai Koushik: Shimt 😔
[07/09/24, 11:29:21 PM] VIT Varun Reddy: Adi kuda
[07/09/24, 11:29:25 PM] Aasish Mitta: Open and submit chesi vachedham
[07/09/24, 11:29:41 PM] VIT Varun Reddy: Rey mitta I'd marchipoku naadi
[07/09/24, 11:29:47 PM] Aasish Mitta: Repu call me
[07/09/24, 11:29:54 PM] VIT Varun Reddy: Ha sure
[08/09/24, 3:43:13 PM] VIT Varun Reddy: Reel Editing Contest 

Candidate No : 5
Name : Pemmareddy Sreevardhan
Registration Number : 24MCS1010

https://www.instagram.com/reel/C_pqB_dy_cB/?igsh=YTk3dGwzYXYwbW5z


Like share comment
‎[15/09/24, 12:26:16 PM] Rey manideep: ‎image omitted
[15/09/24, 12:32:15 PM] Sai Koushik: Add me
[15/09/24, 12:32:32 PM] Rey manideep: Ask @917670842771
‎[18/09/24, 9:37:08 AM] VIT Varun Reddy: Week-8 Assignment-8.pdf • ‎5 pages ‎document omitted
‎[18/09/24, 9:37:12 AM] VIT Varun Reddy: Week-9 Assignment-9.pdf • ‎5 pages ‎document omitted
[18/09/24, 9:37:19 AM] VIT Varun Reddy: Eeroju deadline idi
[18/09/24, 9:38:15 AM] VIT Varun Reddy: @919392799591 marchipokunda raayi
[18/09/24, 3:48:50 PM] VIT Varun Reddy: Rey TCS day 1 tasks complete cheyyandi
[18/09/24, 3:48:53 PM] VIT Varun Reddy: Eeroju 6 lopala
[18/09/24, 3:49:00 PM] VIT Varun Reddy: Urgent!!!
[18/09/24, 3:56:39 PM] Rey manideep: Codes pettu
[18/09/24, 3:56:54 PM] Rey manideep: Neopat lo vunnavi ave na
[18/09/24, 3:57:46 PM] VIT Varun Reddy: Chatgpt dengali
[18/09/24, 3:57:54 PM] VIT Varun Reddy: Naa daggara kuda lev
[22/09/24, 2:31:19 PM] VIT Varun Reddy: https://forms.gle/dRPQnjDCs5TyqcBc8
[22/09/24, 2:31:24 PM] VIT Varun Reddy: Fill it Rey
‎[26/09/24, 6:04:27 PM] VIT Varun Reddy: ‎image omitted
[26/09/24, 6:04:28 PM] VIT Varun Reddy: Exam clg loney
[26/09/24, 6:04:43 PM] Sai Koushik: Vattakai gallu
[26/09/24, 6:04:47 PM] Sai Koushik: Vella pukuni denga
[26/09/24, 6:04:50 PM] Sai Koushik: Lanjodukuly
[26/09/24, 6:04:53 PM] Sai Koushik: Maakiloude
[26/09/24, 6:04:57 PM] Sai Koushik: Puk gallu
[26/09/24, 6:04:59 PM] VIT Varun Reddy: Nov 6th vaayi
[26/09/24, 6:05:03 PM] Sai Koushik: Pellam puk la na sulli
[26/09/24, 6:05:09 PM] VIT Varun Reddy: Apdu manam clg loney untam
[26/09/24, 6:05:16 PM] VIT Varun Reddy: Holidays em undav
[26/09/24, 6:05:25 PM] Sarath babu: Same feeling
[26/09/24, 6:05:32 PM] Sarath babu: Sava dhengali ra
[26/09/24, 6:05:42 PM] Sai Koushik: Dumma dengudam ankunna
[26/09/24, 6:05:46 PM] VIT Varun Reddy: NoV 6th em problem ra meeku
[26/09/24, 6:06:18 PM] VIT Varun Reddy: Week egadengudam anukunnava?
[26/09/24, 6:06:24 PM] Sai Koushik: Yes
‎[26/09/24, 6:06:32 PM] VIT Varun Reddy: ‎sticker omitted
[26/09/24, 6:35:52 PM] Rey manideep: Naak mail raaledh
‎[27/09/24, 3:12:22 PM] VIT Varun Reddy: Week-10 Assignment-10.pdf • ‎5 pages ‎document omitted
‎[01/10/24, 12:53:38 PM] VIT Varun Reddy: ‎image omitted
[01/10/24, 12:53:46 PM] VIT Varun Reddy: Fill cheyyandi
[01/10/24, 1:12:23 PM] Sai Koushik: My meal preference is non veg
‎[01/10/24, 1:12:27 PM] Sai Koushik: ‎sticker omitted
[01/10/24, 1:47:44 PM] Harshit 🐍: Link send
[01/10/24, 1:54:53 PM] VIT Varun Reddy: Mail lo undi
[01/10/24, 1:54:55 PM] VIT Varun Reddy: Chusko
‎[07/10/24, 12:32:04 PM] Rey manideep: ‎image omitted
‎[07/10/24, 12:32:16 PM] Rey manideep: ‎GIF omitted
[07/10/24, 12:32:23 PM] VIT Varun Reddy: Arey nanna
[07/10/24, 12:32:29 PM] VIT Varun Reddy: Adi interview kaadu
[07/10/24, 12:32:33 PM] VIT Varun Reddy: Exam😭
[07/10/24, 12:32:47 PM] Rey manideep: Thelsu thakkuva mandhi vunnar ga
[07/10/24, 12:33:11 PM] VIT Varun Reddy: Farewell bokka daani valla+ oka lab bokka+Project review 2 bokka
[07/10/24, 12:33:20 PM] VIT Varun Reddy: Anna aa role ki naakem skills raavu
[07/10/24, 12:33:40 PM] VIT Varun Reddy: Urkey apply chesina anipistundi
[07/10/24, 12:33:52 PM] VIT Varun Reddy: Neeku eeroju farewell undi ga
[07/10/24, 12:35:00 PM] Rey manideep: Anni skills puttaka thone vasthay entra
[07/10/24, 12:35:12 PM] VIT Varun Reddy: ☠️
[07/10/24, 12:35:22 PM] VIT Varun Reddy: Farewell poindi
[07/10/24, 12:35:27 PM] VIT Varun Reddy: Konchem badhaga undi
[07/10/24, 12:35:52 PM] Rey manideep: Ayo
[07/10/24, 12:36:01 PM] VIT Varun Reddy: Nuvvu enni anna kuda first round ey🥲
[07/10/24, 12:36:13 PM] VIT Varun Reddy: Neeku eeroju undi ga farewell
[07/10/24, 12:38:26 PM] Rey manideep: Vundhanta
[07/10/24, 12:38:36 PM] VIT Varun Reddy: Povatleda😶‍🌫
[07/10/24, 12:39:04 PM] Rey manideep: Pothan
[07/10/24, 12:39:10 PM] Rey manideep: Mingi thinali ga
[07/10/24, 12:39:17 PM] VIT Varun Reddy: Dinner ga adi
[07/10/24, 12:39:37 PM] Rey manideep: Aahh
[07/10/24, 12:39:54 PM] VIT Varun Reddy: Enjoy pandagoo
‎[07/10/24, 1:46:21 PM] Sai Koushik: ‎sticker omitted
[09/10/24, 11:09:07 PM] Sai Koushik: Ayya ayya ayya
[09/10/24, 11:09:15 PM] Aasish Mitta: 😂
[09/10/24, 11:09:19 PM] Sai Koushik: Week 11 pettandi ayya evarranna
‎[09/10/24, 11:09:49 PM] VIT Varun Reddy: Week-11 Assignment-11.pdf • ‎5 pages ‎document omitted
‎[09/10/24, 11:09:50 PM] VIT Varun Reddy: Week-12 Assignment-12.pdf • ‎6 pages ‎document omitted
[09/10/24, 11:09:55 PM] VIT Varun Reddy: Thanks ra gurtuchesav
[09/10/24, 11:10:10 PM] Sai Koushik: Naadi week 10 demgesindi
[09/10/24, 11:10:18 PM] Sai Koushik: 4 weeks down already
[09/10/24, 11:10:19 PM] VIT Varun Reddy: Nuvvu inka em rayakapoina
[09/10/24, 11:10:26 PM] VIT Varun Reddy: Oh fuckkkk
[09/10/24, 11:10:41 PM] Sai Koushik: Thondara paddav
[09/10/24, 11:10:59 PM] VIT Varun Reddy: 🫠 -9999 aura
[12/10/24, 1:42:36 PM] Rey manideep: మీకు మరియు మీ కుటుంబసభలకు *దసరా* శుభకాంక్షలు 🎇🕉️😊
[06/11/24, 9:38:27 AM] VIT Varun Reddy: 1.	What kind of species is a tiger?
	•	The correct answer is Umbrella species.
A tiger is considered an umbrella species because protecting its habitat helps conserve the many other species that share the same environment.
	2.	In times of famine, the fig tree alone gives fruit. In this context, what kind of species is the fig tree?
	•	The fig tree would be classified as a Keystone species.
This is because it plays a critical role in the ecosystem, especially in times of scarcity, providing food for a wide variety of animals.
	3.	We travel to see some exotic animals. What kind of species is it?
	•	These animals would likely be considered Flagship species.
Flagship species are often charismatic or iconic animals that draw attention and help in conservation efforts. The term usually applies to species people are drawn to for their uniqueness or beauty.
[06/11/24, 9:38:27 AM] VIT Varun Reddy: 1.	Which of the following is an example of in-situ conservation?
	•	The correct answer is National parks.
In-situ conservation refers to conserving species in their natural habitat, and national parks are designated areas where wildlife is preserved in its natural environment.
	2.	Habitat selection is based on:
	•	The correct answer is Innate as well as acquired traits.
Habitat selection involves both innate factors (genetic predispositions) and learned or acquired traits (experiences or adaptations to the environment). Animals often choose habitats based on a combination of these factors.
[06/11/24, 9:38:45 AM] VIT Varun Reddy: Wildlife ecology nptel raasevallu ee 2 msgs chuskondi help avtundi
[06/11/24, 9:38:53 AM] VIT Varun Reddy: Alagey motham quizzes nunche
[06/11/24, 9:39:06 AM] VIT Varun Reddy: Max 1 or 2 from outside
